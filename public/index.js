(()=>{var __webpack_modules__={1073:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ActionCode=void 0;const a=r(2137);const n=r(181);class ActionCode{constructor(e){this.fields=e}static fromPayload(e){if(!e.code||!e.pubkey||!e.signature||!e.timestamp||!e.expiresAt||!e.chain||!e.status){throw new Error("Missing required fields in ActionCode payload")}return new ActionCode(e)}static fromEncoded(e){const t=JSON.parse(n.Buffer.from(e,"base64").toString("utf8"));return ActionCode.fromPayload(t)}get encoded(){return n.Buffer.from(JSON.stringify(this.fields),"utf8").toString("base64")}isValid(e){if(this.expired)return false;const t=e.getChainAdapter(this.chain);if(!t)throw new Error(`Chain adapter not found for chain ${this.chain}`);const r=t.verifyCodeSignature(this);const n=a.CodeGenerator.validateCode(this.fields.code,this.fields.pubkey,this.fields.timestamp,this.fields.prefix);return r&&n}updateStatus(e){this.fields.status=e}get json(){return this.fields}get remainingTime(){const e=Date.now();return Math.max(0,this.fields.expiresAt-e)}get expired(){return this.remainingTime===0}get chain(){return this.fields.chain}get status(){return this.fields.status}get code(){return this.fields.code}get prefix(){return this.fields.prefix}get pubkey(){return this.fields.pubkey}get transaction(){return this.fields.transaction}get metadata(){return this.fields.metadata}get description(){return this.fields.metadata?.description}get params(){return this.fields.metadata?.params}get timestamp(){return this.fields.timestamp}get signature(){return this.fields.signature}get displayString(){const e=this.fields.prefix==="DEFAULT"?"":`${this.fields.prefix}-`;const t=this.fields.code;const r=this.fields.chain;const a=this.fields.status;return`${e}${t} (${r}, ${a})`}get remainingTimeString(){const e=this.remainingTime;if(e===0){return"Expired"}const t=Math.floor(e/6e4);const r=Math.floor(e%6e4/1e3);if(t>0){return`${t}m ${r}s remaining`}else{return`${r}s remaining`}}get codeHash(){return a.CodeGenerator.deriveCodeHash(this.fields.pubkey,this.fields.prefix,this.fields.timestamp)}get intentType(){return this.fields.transaction?.intentType||"transaction"}}t.ActionCode=ActionCode},2224:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.BaseChainAdapter=void 0;const a=r(765);class BaseChainAdapter{detectTampering(e,t,r="DEFAULT"){const a=this.decodeMeta(e);if(!a){return false}if(a.version!=="1"){return false}if(a.prefix!==r){return false}if(!a.iss||!t.includes(a.iss)){return false}if(!this.hasIssuerSignature(e,a.iss)){return false}return this.validateTransactionIntegrity(e,a)}getCodeSignatureMessage(e,t,r=a.PROTOCOL_CODE_PREFIX){return`${r}:${e}:${t}`}}t.BaseChainAdapter=BaseChainAdapter},2266:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__exportStar||function(e,t){for(var r in e)if(r!=="default"&&!Object.prototype.hasOwnProperty.call(t,r))a(t,e,r)};Object.defineProperty(t,"__esModule",{value:true});n(r(3168),t)},3168:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(){var ownKeys=function(e){ownKeys=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r))t[t.length]=r;return t};return ownKeys(e)};return function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r=ownKeys(e),i=0;i<r.length;i++)if(r[i]!=="default")a(t,e,r[i]);n(t,e);return t}}();var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.SolanaAdapter=void 0;const o=r(8108);const d=r(5460);const p=r(6759);const c=r(2224);const l=i(r(1177));const u=r(1073);const m=r(181);const f=s(r(7565));class SolanaAdapter extends c.BaseChainAdapter{constructor(){super(...arguments);this.chain="solana"}encodeMeta(e){const t=p.ProtocolMetaParser.serialize(e);const r=[];try{if(e.iss&&e.iss!=="undefined"){const t=new o.PublicKey(e.iss);r.push(t)}}catch(e){}return(0,d.createMemoInstruction)(t,r)}decodeMeta(e){if(typeof e==="string"){try{e=this.deserializeTransaction(e)}catch{return null}}if("message"in e&&e.message){return this.decodeVersionedTransaction(e)}else if("instructions"in e&&Array.isArray(e.instructions)){return this.decodeLegacyTransaction(e)}else{return null}}deserializeTransaction(e){try{const t=m.Buffer.from(e,"base64");try{return o.Transaction.from(t)}catch{return o.VersionedTransaction.deserialize(t)}}catch(e){throw new Error("Failed to deserialize Solana transaction")}}injectMeta(e,t){const r=this.deserializeTransaction(e);const a=this.encodeMeta(t);if(r instanceof o.VersionedTransaction){const e=[...r.message.staticAccountKeys];a.keys.forEach((({pubkey:t})=>{if(!e.some((e=>e.equals(t)))){e.push(t)}}));if(!e.some((e=>e.equals(a.programId)))){e.push(a.programId)}const t=[...r.message.compiledInstructions];const n=e.findIndex((e=>e.equals(a.programId)));const i=a.keys.map((t=>{const r=e.findIndex((e=>e.equals(t.pubkey)));if(r===-1){throw new Error(`Account key ${t.pubkey.toBase58()} not found in static account keys`)}return r}));const s={programIdIndex:n,accountKeyIndexes:i,data:a.data};t.push(s);const d=new o.MessageV0({header:r.message.header,staticAccountKeys:e,recentBlockhash:r.message.recentBlockhash,compiledInstructions:t,addressTableLookups:r.message.addressTableLookups});const p=new o.VersionedTransaction(d);return m.Buffer.from(p.serialize()).toString("base64")}else if(r instanceof o.Transaction){r.instructions.push(a);r.signatures=[];return r.serialize({requireAllSignatures:false}).toString("base64")}else{throw new Error("Invalid transaction type")}}validate(e,t,r="DEFAULT"){return this.detectTampering(e,t,r)}hasIssuerSignature(e,t){if(typeof e==="string"){try{e=this.deserializeTransaction(e)}catch{return false}}if("message"in e&&e.message){return this.hasIssuerSignatureVersioned(e,t)}else if("signatures"in e&&Array.isArray(e.signatures)){return this.hasIssuerSignatureLegacy(e,t)}else{return false}}decodeLegacyTransaction(e){for(const t of e.instructions){if(t.programId.equals(SolanaAdapter.MEMO_PROGRAM_ID)){const e=t.data;if(e&&e.length>0){try{const t=(new TextDecoder).decode(e);const r=p.ProtocolMetaParser.parse(t);if(r&&r.version==="1"){return r}}catch{}}}}return null}decodeVersionedTransaction(e){const t=e.message;if(t instanceof o.MessageV0){return this.decodeMessageV0(t)}else{return null}}decodeMessageV0(e){for(const t of e.compiledInstructions){const r=e.staticAccountKeys[t.programIdIndex];if(r.equals(SolanaAdapter.MEMO_PROGRAM_ID)){const e=t.data;if(e&&e.length>0){try{const t=(new TextDecoder).decode(e);const r=p.ProtocolMetaParser.parse(t);if(r&&r.version==="1"){return r}}catch{}}}}return null}hasIssuerSignatureLegacy(e,t){return e.signatures.some((e=>e.publicKey.toBase58()===t))}hasIssuerSignatureVersioned(e,t){const r=e.message;if(r instanceof o.MessageV0){for(const e of r.staticAccountKeys){if(e.toBase58()===t){return true}}}return false}validateTransactionIntegrity(e,t){const r=this.decodeMeta(e);if(!r){return false}if(!t.iss){return false}if(!this.hasIssuerSignature(e,t.iss)){return false}return r.version===t.version&&r.prefix===t.prefix&&r.initiator===t.initiator&&r.id===t.id&&r.iss===t.iss&&r.params===t.params}verifyCodeSignature(e){try{const t=this.getCodeSignatureMessage(e.code,e.timestamp,e.prefix);const r=(new TextEncoder).encode(t);const a=new o.PublicKey(e.pubkey).toBytes();const n=f.default.decode(e.signature);return l.sign.detached.verify(r,n,a)}catch(e){return false}}decodeFromBase64(e){return this.decodeMeta(e)}async signWithProtocolKey(e,t){try{if(!e.transaction?.transaction){throw new Error("No transaction found")}const r=this.deserializeTransaction(e.transaction.transaction);const a=this.decodeMeta(r);if(!a){throw new Error("Invalid transaction, protocol meta not found")}if(!this.validateTransactionIntegrity(r,a)){throw new Error("Invalid transaction, transaction integrity not valid")}if(r instanceof o.Transaction){r.partialSign(t)}else if(r instanceof o.VersionedTransaction){r.sign([t])}else{throw new Error("Invalid transaction type")}const n={...e.transaction,transaction:r.serialize({requireAllSignatures:false}).toString("base64")};const i={...e.json,transaction:n};return u.ActionCode.fromPayload(i)}catch(e){throw new Error(`Failed to sign transaction with protocol key: ${e instanceof Error?e.message:"Unknown error"}`)}}verifyFinalizedTransaction(e,t){try{if(e.transaction===null||e.transaction===undefined){return false}const r=e.transaction;if(!r.message||!r.signatures){return false}let a;if(r.message instanceof o.MessageV0){a=new o.VersionedTransaction(r.message)}else{const e=r.message;a=o.Transaction.populate(e,r.signatures)}const n=this.decodeMeta(a);if(!n){return false}if(!n.iss){return false}if(!t.codeHash){return false}if(!n.id||n.id!==t.codeHash){return false}if(n.prefix!==t.prefix){return false}if(n.initiator!==t.pubkey){return false}let i=null;try{i=new o.PublicKey(t.pubkey)}catch(e){return false}if(i){if(a instanceof o.VersionedTransaction){const e=a.message;if(e instanceof o.MessageV0){const t=e.staticAccountKeys.findIndex((e=>e.equals(i)));if(t===-1){return false}const r=e.header.numRequiredSignatures>0&&t<e.header.numRequiredSignatures;if(!r){return false}}else{return false}}else if(a instanceof o.Transaction){const e=a.compileMessage().accountKeys;const t=e.findIndex((e=>e.equals(i)));if(t===-1){return false}const r=t<a.compileMessage().header.numRequiredSignatures;if(!r){return false}}else{return false}}if(!this.hasIssuerSignature(a,n.iss)){return false}return true}catch(e){return false}}validateSignedMessage(e,t,r){try{const a=f.default.decode(r);const n=f.default.decode(t);const i=m.Buffer.from(e,"utf8");return l.sign.detached.verify(i,n,a)}catch(e){return false}}}t.SolanaAdapter=SolanaAdapter;SolanaAdapter.MEMO_PROGRAM_ID=d.MEMO_PROGRAM_ID},2137:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.CodeGenerator=void 0;const a=r(7009);const n=r(765);class CodeGenerator{static validatePrefix(e){if(e===n.PROTOCOL_CODE_PREFIX)return true;if(e.length<this.MIN_PREFIX_LENGTH||e.length>this.MAX_PREFIX_LENGTH)return false;return/^[A-Za-z]+$/.test(e)}static validateCodeFormat(e){if(!e||typeof e!=="string")return false;if(e.length<this.CODE_DIGITS)return false;const t=e.slice(-this.CODE_DIGITS);const r=e.slice(0,-this.CODE_DIGITS);if(t.length!==this.CODE_DIGITS)return false;if(!/^[0-9]{8}$/.test(t))return false;if(r.length>0){const e=r.toUpperCase();if(e===n.PROTOCOL_CODE_PREFIX){return true}if(e.length<this.MIN_PREFIX_LENGTH||e.length>this.MAX_PREFIX_LENGTH){return false}if(!/^[A-Za-z]+$/.test(e))return false}return true}static validateCodeDigits(e){if(!e||typeof e!=="string")return false;if(e.length<n.CODE_LENGTH)return false;if(e.length===n.CODE_LENGTH){return/^[0-9]{8}$/.test(e)}const t=e.slice(-n.CODE_LENGTH);if(!/^[0-9]{8}$/.test(t))return false;const r=e.slice(0,-n.CODE_LENGTH);if(r.length>0){const e=r.toUpperCase();if(e===n.PROTOCOL_CODE_PREFIX)return true;if(e.length<this.MIN_PREFIX_LENGTH||e.length>this.MAX_PREFIX_LENGTH){return false}if(!/^[A-Za-z]+$/.test(e))return false}return true}static normalizePrefix(e){if(e===n.PROTOCOL_CODE_PREFIX)return"";if(!this.validatePrefix(e)){throw new Error(`Invalid prefix: ${e}. Must be 3-12 letters or "${n.PROTOCOL_CODE_PREFIX}"`)}return e.toUpperCase()}static generateCode(e,t=n.PROTOCOL_CODE_PREFIX,r=Date.now()){const i=this.normalizePrefix(t);const s=`${i}:${e}:${r}`;const o=(0,a.sha256)(s);const d=parseInt(o.slice(0,16),16);const p=10**this.CODE_DIGITS;const c=d%p;const l=r;const u=l+this.TIME_WINDOW_MS;const m=c.toString().padStart(this.CODE_DIGITS,"0");const f=i+m;if(!this.validateCodeFormat(f)){throw new Error(`Generated code validation failed: ${f}`)}if(!this.validateCodeDigits(f)){throw new Error(`Generated code must be exactly 8 digits: ${f}`)}return{code:f,issuedAt:l,expiresAt:u}}static deriveCodeHash(e,t=n.PROTOCOL_CODE_PREFIX,r){const i=this.normalizePrefix(t);const s=r??Date.now();const o=`${i}:${e}:${s}`;const d=(0,a.sha256)(o);return d}static getExpectedCode(e,t,r=n.PROTOCOL_CODE_PREFIX){return this.generateCode(e,r,t).code}static validateCode(e,t,r,a=n.PROTOCOL_CODE_PREFIX){if(!this.validateCodeFormat(e)){return false}if(!this.validateCodeDigits(e)){return false}const i=this.getExpectedCode(t,r,a);const s=Date.now();const o=r>=0&&r<=s&&s<=r+this.TIME_WINDOW_MS;return e===i&&o}static isValidTimestamp(e){return e>=0&&e<=Date.now()+this.TIME_WINDOW_MS}}t.CodeGenerator=CodeGenerator;CodeGenerator.TIME_WINDOW_MS=n.CODE_TTL;CodeGenerator.CODE_DIGITS=n.CODE_LENGTH;CodeGenerator.MIN_PREFIX_LENGTH=n.MIN_PREFIX_LENGTH;CodeGenerator.MAX_PREFIX_LENGTH=n.MAX_PREFIX_LENGTH},765:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.SUPPORTED_CHAINS=t.MAX_PREFIX_LENGTH=t.MIN_PREFIX_LENGTH=t.PROTOCOL_CODE_PREFIX=t.CODE_TTL=t.CODE_LENGTH=t.PROTOCOL_PREFIX=t.PROTOCOL_VERSION=void 0;t.PROTOCOL_VERSION="1";t.PROTOCOL_PREFIX="actioncodes";t.CODE_LENGTH=8;t.CODE_TTL=1e3*60*2;t.PROTOCOL_CODE_PREFIX="DEFAULT";t.MIN_PREFIX_LENGTH=3;t.MAX_PREFIX_LENGTH=12;t.SUPPORTED_CHAINS=["solana"]},8200:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__exportStar||function(e,t){for(var r in e)if(r!=="default"&&!Object.prototype.hasOwnProperty.call(t,r))a(t,e,r)};Object.defineProperty(t,"__esModule",{value:true});n(r(2266),t);n(r(2224),t);n(r(2137),t);n(r(765),t);n(r(6759),t);n(r(1073),t);n(r(2342),t)},6759:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ProtocolMetaParser=void 0;const a=r(2137);const n=r(765);class ProtocolMetaParser{static parse(e){const t=e.match(this.PROTOCOL_REGEX);if(!t){return null}const[,r,a,i,s,o,d,p]=t;if(r!==n.PROTOCOL_PREFIX){return null}return{version:a,prefix:i,initiator:s,id:o,iss:d,params:p||undefined}}static serialize(e){let t=`${n.PROTOCOL_PREFIX}:v=${e.version}&pre=${e.prefix}&ini=${e.initiator}&id=${e.id}&iss=${e.iss}`;if(e.params){t+=`&p=${e.params}`}return t}static fromInitiator(e,t,r="DEFAULT",i,s){const o=a.CodeGenerator.deriveCodeHash(e,r,s);return{version:n.PROTOCOL_VERSION,prefix:r,initiator:e,id:o,iss:t,params:i}}static validateCode(e,t){const r=a.CodeGenerator.deriveCodeHash(e.initiator,e.prefix,t);return e.id===r}static validateMetaFromString(e,t){const r=this.parse(e);if(!r){return false}return this.validateCode(r,t)}}t.ProtocolMetaParser=ProtocolMetaParser;ProtocolMetaParser.PROTOCOL_REGEX=/^([^:]+):v=(\d+)&pre=([^&]*)&ini=([^&]*)&id=([^&]*)&iss=([^&]+)(?:&p=([^&]+))?$/},2342:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.SUPPORTED_CHAINS=t.ActionCodesProtocol=void 0;const a=r(2137);const n=r(6759);const i=r(1073);const s=r(765);class ActionCodesProtocol{constructor(e){this.adapters=new Map;this.config={version:s.PROTOCOL_VERSION,defaultPrefix:s.PROTOCOL_CODE_PREFIX,codeTTL:s.CODE_TTL,codeLength:s.CODE_LENGTH,maxPrefixLength:s.MAX_PREFIX_LENGTH,minPrefixLength:s.MIN_PREFIX_LENGTH,...e}}registerAdapter(e){this.adapters.set(e.chain,e)}getRegisteredChains(){return Array.from(this.adapters.keys())}isChainSupported(e){return this.adapters.has(e)}getChainAdapter(e){return this.adapters.get(e)}validateActionCode(e){const t=e.chain;if(!this.isChainSupported(t)){return false}if(e.expired){return false}const r=e.transaction;const a=this.getChainAdapter(t);if(e.intentType==="transaction"){if((e.status==="resolved"||e.status==="finalized")&&(!r||!r.transaction))return false}else if(e.intentType==="sign-only"){if((e.status==="resolved"||e.status==="finalized")&&(!r||!r.message))return false;if(e.status==="finalized"&&(!r||!r.signedMessage||!a||!a.validateSignedMessage(r.message||"",r.signedMessage,e.pubkey)))return false}return true}async createActionCode(e,t,r,n=this.config.defaultPrefix,s){if(!this.isChainSupported(r)){throw new Error(`Chain '${r}' is not supported. Registered chains: ${this.getRegisteredChains().join(", ")}`)}const o=this.getChainAdapter(r);if(!o){throw new Error(`No adapter found for chain '${r}'`)}const d=s||Date.now();const{code:p,expiresAt:c}=a.CodeGenerator.generateCode(e,n,d);const l=o.getCodeSignatureMessage(p,d,n);const u=await t(l);const m=i.ActionCode.fromPayload({code:p,pubkey:e,signature:u,timestamp:d,expiresAt:c,prefix:n,chain:r,status:"pending"});if(!this.validateActionCode(m)){throw new Error("Invalid action code")}if(!o.verifyCodeSignature(m)){throw new Error("Invalid signature for generated code")}return m}attachTransaction(e,t,r,a,n){const s=e.chain;if(!this.isChainSupported(s)){throw new Error(`Chain '${s}' is not supported`)}const o=this.getChainAdapter(s);if(!o){throw new Error(`No adapter found for chain '${s}'`)}const d=this.createProtocolMeta(e,r,a);const p=o.decodeMeta(t);let c;if(p&&p.id===d.id){c=t}else{c=o.injectMeta(t,d)}const l={transaction:c,txType:n||s};const u={...e.json,transaction:l,status:"resolved"};return i.ActionCode.fromPayload(u)}attachMessage(e,t,r,a){const n=e.chain;if(!this.isChainSupported(n)){throw new Error(`Chain '${n}' is not supported`)}const s=this.getChainAdapter(n);if(!s){throw new Error(`No adapter found for chain '${n}'`)}const o={...e.json,transaction:{...e.transaction,message:t,txType:a,intentType:"sign-only"},status:"resolved",metadata:r?{params:JSON.parse(r)}:undefined};const d=i.ActionCode.fromPayload(o);if(!this.validateActionCode(d)){throw new Error("Invalid action code after attaching message")}return d}finalizeActionCode(e,t){const r=e.transaction;if(!r){throw new Error("Cannot finalize ActionCode without attached transaction")}if(e.intentType==="transaction"){const a={...r,txSignature:t,intentType:"transaction"};const n={...e.json,transaction:a,status:"finalized"};return i.ActionCode.fromPayload(n)}else if(e.intentType==="sign-only"){if(!r.signedMessage&&!t){throw new Error("Cannot finalize sign-only ActionCode without signed message")}const a={...r,signedMessage:t,intentType:"sign-only"};const n={...e.json,transaction:a,status:"finalized"};return i.ActionCode.fromPayload(n)}else{throw new Error("Unknown intent type for ActionCode finalization")}}createProtocolMeta(e,t,r,a){return n.ProtocolMetaParser.fromInitiator(e.pubkey,t||e.pubkey,e.prefix,r,a||e.timestamp)}encodeProtocolMeta(e,t){const r=this.adapters.get(t);if(!r){throw new Error(`Chain '${t}' is not supported`)}return r.encodeMeta(e)}decodeProtocolMeta(e,t){const r=this.adapters.get(t);if(!r){return null}return r.decodeMeta(e)}validateTransaction(e,t,r,a){const n=this.adapters.get(t);if(!n){return false}return n.validate(e,r,a)}validateTransactionTyped(e,t,r,a){const n=this.getChainAdapter(t);if(!n){return false}return n.validate(e,r,a)}detectTampering(e,t,r,a){const n=this.getChainAdapter(t);if(!n){return false}return n.detectTampering(e,r,a)}decodeProtocolMetaTyped(e,t){const r=this.getChainAdapter(t);if(!r){return null}return r.decodeMeta(e)}getConfig(){return{...this.config}}updateConfig(e){this.config={...this.config,...e}}static create(){return new ActionCodesProtocol}static createWithConfig(e){return new ActionCodesProtocol(e)}}t.ActionCodesProtocol=ActionCodesProtocol;var o=r(765);Object.defineProperty(t,"SUPPORTED_CHAINS",{enumerable:true,get:function(){return o.SUPPORTED_CHAINS}})},6863:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ActionCodesClient=void 0;const a=r(8200);const n=r(5428);class ActionCodesClient{constructor(e="https://relay.ota.codes",t=new a.ActionCodesProtocol){this.baseUrl=e;this.protocol=t;this.protocol.registerAdapter(new a.SolanaAdapter)}async request(e,t,r){try{const a=await fetch(`${this.baseUrl}${t}`,{method:e,body:r?JSON.stringify(r):undefined,headers:{"Content-Type":"application/json"}});if(!a.ok){if(a.status===404)throw new n.CodeNotFoundError;if(a.status===401)throw new n.UnauthorizedError;if(a.status===410)throw new n.ExpiredCodeError;throw new Error(`Network request failed with status ${a.status} for path ${t}`)}return a.json()}catch(e){if(e instanceof n.ActionCodesBaseError)throw e;throw e}}async resolve(e){this.validateCode(e);const t=await this.request("POST",`/api/resolve`,{code:e});return a.ActionCode.fromPayload({...t,code:e})}async getStatus(e){this.validateCode(e);return this.request("GET",`/api/status/${e}`)}async*observeStatus(e,t={}){this.validateCode(e);const{interval:r=2e3,timeout:a=18e4}=t;const i=Date.now();let s=null;while(true){if(Date.now()-i>a){throw new Error(`Timeout while observing status of code ${e}`)}try{const t=await this.getStatus(e);if(!s||s.status!==t.status||s.hasTransaction!==t.hasTransaction||s.finalizedSignature!==t.finalizedSignature){yield t;s=t}if(t.status==="finalized"){break}await new Promise((e=>setTimeout(e,r)))}catch(e){if(e instanceof n.ExpiredCodeError||e instanceof n.CodeNotFoundError){throw e}await new Promise((e=>setTimeout(e,r)))}}}async register(e,t,r={}){try{const a=await this.protocol.createActionCode(e.toBase58(),t,"solana");const n={code:a.code,pubkey:e.toBase58(),signature:a.signature,timestamp:a.timestamp,prefix:a.prefix,chain:"solana",metadata:r};const i=await this.request("POST",`/api/register`,n);if(i.codeHash===a.codeHash){return a}else{throw new Error("Failed to register code")}}catch(e){if(e instanceof n.ActionCodesBaseError)throw e;throw e}}async attachTransaction(e,t,r){this.validateCode(e);const a=await this.resolve(e);const n={code:a.code,chain:"solana",intentType:"transaction",transaction:t,meta:r};return this.request("POST",`/api/attach`,n)}async attachMessage(e,t,r){this.validateCode(e);const a=await this.resolve(e);const n={code:a.code,chain:"solana",intentType:"sign-only",message:t,meta:r};return this.request("POST",`/api/attach`,n)}async finalizeTransaction(e,t){this.validateCode(e);const r={code:e,signature:t};return this.request("POST",`/api/finalize`,r)}async finalizeMessage(e,t){this.validateCode(e);const r={code:e,signedMessage:t};return this.request("POST",`/api/finalize`,r)}validateCode(e){if(!a.CodeGenerator.validateCodeFormat(e)){throw new n.InvalidCodeFormatError}}}t.ActionCodesClient=ActionCodesClient},5428:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.TaskStillInProgressError=t.TaskTimeoutError=t.TaskNotFoundError=t.UnsupportedPrefixError=t.ExpiredCodeError=t.UnauthorizedError=t.TransactionDecodingError=t.ActionSubmissionFailedError=t.CodeNotFoundError=t.InvalidCodeFormatError=t.ActionCodesBaseError=void 0;class ActionCodesBaseError extends Error{constructor(e,t,r){super(e);this.name=this.constructor.name;this.code=t;this.details=r}}t.ActionCodesBaseError=ActionCodesBaseError;class InvalidCodeFormatError extends ActionCodesBaseError{constructor(e){super("The provided code does not match the expected format.","INVALID_CODE_FORMAT",e)}}t.InvalidCodeFormatError=InvalidCodeFormatError;class CodeNotFoundError extends ActionCodesBaseError{constructor(e){super("The requested code could not be found.","CODE_NOT_FOUND",e)}}t.CodeNotFoundError=CodeNotFoundError;class ActionSubmissionFailedError extends ActionCodesBaseError{constructor(e){super("Failed to submit the action. Please try again.","ACTION_SUBMISSION_FAILED",e)}}t.ActionSubmissionFailedError=ActionSubmissionFailedError;class TransactionDecodingError extends ActionCodesBaseError{constructor(e){super("Unable to decode the transaction data.","TRANSACTION_DECODING_ERROR",e)}}t.TransactionDecodingError=TransactionDecodingError;class UnauthorizedError extends ActionCodesBaseError{constructor(e){super("You are not authorized to perform this action.","UNAUTHORIZED",e)}}t.UnauthorizedError=UnauthorizedError;class ExpiredCodeError extends ActionCodesBaseError{constructor(e){super("This code has expired and can no longer be used.","EXPIRED_CODE",e)}}t.ExpiredCodeError=ExpiredCodeError;class UnsupportedPrefixError extends ActionCodesBaseError{constructor(e){super("The code prefix is not supported by this SDK.","UNSUPPORTED_PREFIX",e)}}t.UnsupportedPrefixError=UnsupportedPrefixError;class TaskNotFoundError extends ActionCodesBaseError{constructor(e,t){super(`Task ${e} could not be found.`,"TASK_NOT_FOUND",t)}}t.TaskNotFoundError=TaskNotFoundError;class TaskTimeoutError extends ActionCodesBaseError{constructor(e,t,r){super(`Task ${e} did not complete within ${t}ms.`,"TASK_TIMEOUT",r)}}t.TaskTimeoutError=TaskTimeoutError;class TaskStillInProgressError extends ActionCodesBaseError{constructor(e,t,r){super(`Task ${e} is still in progress (status: ${t}).`,"TASK_STILL_IN_PROGRESS",r)}}t.TaskStillInProgressError=TaskStillInProgressError},6710:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__exportStar||function(e,t){for(var r in e)if(r!=="default"&&!Object.prototype.hasOwnProperty.call(t,r))a(t,e,r)};Object.defineProperty(t,"__esModule",{value:true});n(r(6863),t);n(r(5428),t)},4064:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.getHash=getHash;t.createCurve=createCurve;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(6635);function getHash(e){return{hash:e}}function createCurve(e,t){const create=t=>(0,a.weierstrass)({...e,hash:t});return{...create(t),create:create}}},4092:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.wNAF=void 0;t.negateCt=negateCt;t.normalizeZ=normalizeZ;t.mulEndoUnsafe=mulEndoUnsafe;t.pippenger=pippenger;t.precomputeMSMUnsafe=precomputeMSMUnsafe;t.validateBasic=validateBasic;t._createCurveFields=_createCurveFields;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(1145);const n=r(4161);const i=BigInt(0);const s=BigInt(1);function negateCt(e,t){const r=t.negate();return e?r:t}function normalizeZ(e,t){const r=(0,n.FpInvertBatch)(e.Fp,t.map((e=>e.Z)));return t.map(((t,a)=>e.fromAffine(t.toAffine(r[a]))))}function validateW(e,t){if(!Number.isSafeInteger(e)||e<=0||e>t)throw new Error("invalid window size, expected [1.."+t+"], got W="+e)}function calcWOpts(e,t){validateW(e,t);const r=Math.ceil(t/e)+1;const n=2**(e-1);const i=2**e;const s=(0,a.bitMask)(e);const o=BigInt(e);return{windows:r,windowSize:n,mask:s,maxNumber:i,shiftBy:o}}function calcOffsets(e,t,r){const{windowSize:a,mask:n,maxNumber:i,shiftBy:o}=r;let d=Number(e&n);let p=e>>o;if(d>a){d-=i;p+=s}const c=t*a;const l=c+Math.abs(d)-1;const u=d===0;const m=d<0;const f=t%2!==0;const g=c;return{nextN:p,offset:l,isZero:u,isNeg:m,isNegF:f,offsetF:g}}function validateMSMPoints(e,t){if(!Array.isArray(e))throw new Error("array expected");e.forEach(((e,r)=>{if(!(e instanceof t))throw new Error("invalid point at index "+r)}))}function validateMSMScalars(e,t){if(!Array.isArray(e))throw new Error("array of scalars expected");e.forEach(((e,r)=>{if(!t.isValid(e))throw new Error("invalid scalar at index "+r)}))}const o=new WeakMap;const d=new WeakMap;function getW(e){return d.get(e)||1}function assert0(e){if(e!==i)throw new Error("invalid wNAF")}class wNAF{constructor(e,t){this.BASE=e.BASE;this.ZERO=e.ZERO;this.Fn=e.Fn;this.bits=t}_unsafeLadder(e,t,r=this.ZERO){let a=e;while(t>i){if(t&s)r=r.add(a);a=a.double();t>>=s}return r}precomputeWindow(e,t){const{windows:r,windowSize:a}=calcWOpts(t,this.bits);const n=[];let i=e;let s=i;for(let e=0;e<r;e++){s=i;n.push(s);for(let e=1;e<a;e++){s=s.add(i);n.push(s)}i=s.double()}return n}wNAF(e,t,r){if(!this.Fn.isValid(r))throw new Error("invalid scalar");let a=this.ZERO;let n=this.BASE;const i=calcWOpts(e,this.bits);for(let e=0;e<i.windows;e++){const{nextN:s,offset:o,isZero:d,isNeg:p,isNegF:c,offsetF:l}=calcOffsets(r,e,i);r=s;if(d){n=n.add(negateCt(c,t[l]))}else{a=a.add(negateCt(p,t[o]))}}assert0(r);return{p:a,f:n}}wNAFUnsafe(e,t,r,a=this.ZERO){const n=calcWOpts(e,this.bits);for(let e=0;e<n.windows;e++){if(r===i)break;const{nextN:s,offset:o,isZero:d,isNeg:p}=calcOffsets(r,e,n);r=s;if(d){continue}else{const e=t[o];a=a.add(p?e.negate():e)}}assert0(r);return a}getPrecomputes(e,t,r){let a=o.get(t);if(!a){a=this.precomputeWindow(t,e);if(e!==1){if(typeof r==="function")a=r(a);o.set(t,a)}}return a}cached(e,t,r){const a=getW(e);return this.wNAF(a,this.getPrecomputes(a,e,r),t)}unsafe(e,t,r,a){const n=getW(e);if(n===1)return this._unsafeLadder(e,t,a);return this.wNAFUnsafe(n,this.getPrecomputes(n,e,r),t,a)}createCache(e,t){validateW(t,this.bits);d.set(e,t);o.delete(e)}hasCache(e){return getW(e)!==1}}t.wNAF=wNAF;function mulEndoUnsafe(e,t,r,a){let n=t;let o=e.ZERO;let d=e.ZERO;while(r>i||a>i){if(r&s)o=o.add(n);if(a&s)d=d.add(n);n=n.double();r>>=s;a>>=s}return{p1:o,p2:d}}function pippenger(e,t,r,n){validateMSMPoints(r,e);validateMSMScalars(n,t);const i=r.length;const s=n.length;if(i!==s)throw new Error("arrays of points and scalars must have equal length");const o=e.ZERO;const d=(0,a.bitLen)(BigInt(i));let p=1;if(d>12)p=d-3;else if(d>4)p=d-2;else if(d>0)p=2;const c=(0,a.bitMask)(p);const l=new Array(Number(c)+1).fill(o);const u=Math.floor((t.BITS-1)/p)*p;let m=o;for(let e=u;e>=0;e-=p){l.fill(o);for(let t=0;t<s;t++){const a=n[t];const i=Number(a>>BigInt(e)&c);l[i]=l[i].add(r[t])}let t=o;for(let e=l.length-1,r=o;e>0;e--){r=r.add(l[e]);t=t.add(r)}m=m.add(t);if(e!==0)for(let e=0;e<p;e++)m=m.double()}return m}function precomputeMSMUnsafe(e,t,r,n){validateW(n,t.BITS);validateMSMPoints(r,e);const i=e.ZERO;const s=2**n-1;const o=Math.ceil(t.BITS/n);const d=(0,a.bitMask)(n);const p=r.map((e=>{const t=[];for(let r=0,a=e;r<s;r++){t.push(a);a=a.add(e)}return t}));return e=>{validateMSMScalars(e,t);if(e.length>r.length)throw new Error("array of scalars must be smaller than array of points");let a=i;for(let t=0;t<o;t++){if(a!==i)for(let e=0;e<n;e++)a=a.double();const r=BigInt(o*n-(t+1)*n);for(let t=0;t<e.length;t++){const n=e[t];const i=Number(n>>r&d);if(!i)continue;a=a.add(p[t][i-1])}}return a}}function validateBasic(e){(0,n.validateField)(e.Fp);(0,a.validateObject)(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"});return Object.freeze({...(0,n.nLength)(e.n,e.nBitLength),...e,...{p:e.Fp.ORDER}})}function createField(e,t){if(t){if(t.ORDER!==e)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");(0,n.validateField)(t);return t}else{return(0,n.Field)(e)}}function _createCurveFields(e,t,r={}){if(!t||typeof t!=="object")throw new Error(`expected valid ${e} CURVE object`);for(const e of["p","n","h"]){const r=t[e];if(!(typeof r==="bigint"&&r>i))throw new Error(`CURVE.${e} must be positive bigint`)}const a=createField(t.p,r.Fp);const n=createField(t.n,r.Fn);const s=e==="weierstrass"?"b":"d";const o=["Gx","Gy","a",s];for(const e of o){if(!a.isValid(t[e]))throw new Error(`CURVE.${e} must be valid field element of CURVE.Fp`)}return{Fp:a,Fn:n}}},7255:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.PrimeEdwardsPoint=void 0;t.edwards=edwards;t.eddsa=eddsa;t.twistedEdwards=twistedEdwards;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(1145);const n=r(4092);const i=r(4161);const s=BigInt(0),o=BigInt(1),d=BigInt(2),p=BigInt(8);function isEdValidXY(e,t,r,a){const n=e.sqr(r);const i=e.sqr(a);const s=e.add(e.mul(t.a,n),i);const o=e.add(e.ONE,e.mul(t.d,e.mul(n,i)));return e.eql(s,o)}function edwards(e,t={}){const{Fp:r,Fn:i}=(0,n._createCurveFields)("edwards",e,t);const{h:c,n:l}=e;(0,a._validateObject)(t,{},{uvRatio:"function"});const u=d<<BigInt(i.BYTES*8)-o;const modP=e=>r.create(e);const m=t.uvRatio||((e,t)=>{try{return{isValid:true,value:r.sqrt(r.div(e,t))}}catch(e){return{isValid:false,value:s}}});if(!isEdValidXY(r,e,e.Gx,e.Gy))throw new Error("bad curve params: generator point");function acoord(e,t,r=false){const n=r?o:s;(0,a.aInRange)("coordinate "+e,t,n,u);return t}function aextpoint(e){if(!(e instanceof Point))throw new Error("ExtendedPoint expected")}const f=(0,a.memoized)(((e,t)=>{const{X:a,Y:n,Z:i}=e;const d=e.is0();if(t==null)t=d?p:r.inv(i);const c=modP(a*t);const l=modP(n*t);const u=r.mul(i,t);if(d)return{x:s,y:o};if(u!==o)throw new Error("invZ was invalid");return{x:c,y:l}}));const g=(0,a.memoized)((t=>{const{a:r,d:a}=e;if(t.is0())throw new Error("bad point: ZERO");const{X:n,Y:i,Z:s,T:o}=t;const d=modP(n*n);const p=modP(i*i);const c=modP(s*s);const l=modP(c*c);const u=modP(d*r);const m=modP(c*modP(u+p));const f=modP(l+modP(a*modP(d*p)));if(m!==f)throw new Error("bad point: equation left != right (1)");const g=modP(n*i);const y=modP(s*o);if(g!==y)throw new Error("bad point: equation left != right (2)");return true}));class Point{constructor(e,t,r,a){this.X=acoord("x",e);this.Y=acoord("y",t);this.Z=acoord("z",r,true);this.T=acoord("t",a);Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}get ex(){return this.X}get ey(){return this.Y}get ez(){return this.Z}get et(){return this.T}static normalizeZ(e){return(0,n.normalizeZ)(Point,e)}static msm(e,t){return(0,n.pippenger)(Point,i,e,t)}_setWindowSize(e){this.precompute(e)}static fromAffine(e){if(e instanceof Point)throw new Error("extended point not allowed");const{x:t,y:r}=e||{};acoord("x",t);acoord("y",r);return new Point(t,r,o,modP(t*r))}precompute(e=8,t=true){y.createCache(this,e);if(!t)this.multiply(d);return this}assertValidity(){g(this)}equals(e){aextpoint(e);const{X:t,Y:r,Z:a}=this;const{X:n,Y:i,Z:s}=e;const o=modP(t*s);const d=modP(n*a);const p=modP(r*s);const c=modP(i*a);return o===d&&p===c}is0(){return this.equals(Point.ZERO)}negate(){return new Point(modP(-this.X),this.Y,this.Z,modP(-this.T))}double(){const{a:t}=e;const{X:r,Y:a,Z:n}=this;const i=modP(r*r);const s=modP(a*a);const o=modP(d*modP(n*n));const p=modP(t*i);const c=r+a;const l=modP(modP(c*c)-i-s);const u=p+s;const m=u-o;const f=p-s;const g=modP(l*m);const y=modP(u*f);const _=modP(l*f);const v=modP(m*u);return new Point(g,y,v,_)}add(t){aextpoint(t);const{a:r,d:a}=e;const{X:n,Y:i,Z:s,T:o}=this;const{X:d,Y:p,Z:c,T:l}=t;const u=modP(n*d);const m=modP(i*p);const f=modP(o*a*l);const g=modP(s*c);const y=modP((n+i)*(d+p)-u-m);const _=g-f;const v=g+f;const b=modP(m-r*u);const w=modP(y*_);const E=modP(v*b);const R=modP(y*b);const T=modP(_*v);return new Point(w,E,T,R)}subtract(e){return this.add(e.negate())}multiply(e){const t=e;(0,a.aInRange)("scalar",t,o,l);const{p:r,f:i}=y.cached(this,t,(e=>(0,n.normalizeZ)(Point,e)));return(0,n.normalizeZ)(Point,[r,i])[0]}multiplyUnsafe(e,t=Point.ZERO){const r=e;(0,a.aInRange)("scalar",r,s,l);if(r===s)return Point.ZERO;if(this.is0()||r===o)return this;return y.unsafe(this,r,(e=>(0,n.normalizeZ)(Point,e)),t)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return y.unsafe(this,l).is0()}toAffine(e){return f(this,e)}clearCofactor(){if(c===o)return this;return this.multiplyUnsafe(c)}static fromBytes(e,t=false){(0,a.abytes)(e);return Point.fromHex(e,t)}static fromHex(t,n=false){const{d:i,a:d}=e;const p=r.BYTES;t=(0,a.ensureBytes)("pointHex",t,p);(0,a.abool)("zip215",n);const c=t.slice();const l=t[p-1];c[p-1]=l&~128;const f=(0,a.bytesToNumberLE)(c);const g=n?u:r.ORDER;(0,a.aInRange)("pointHex.y",f,s,g);const y=modP(f*f);const _=modP(y-o);const v=modP(i*y-d);let{isValid:b,value:w}=m(_,v);if(!b)throw new Error("Point.fromHex: invalid y coordinate");const E=(w&o)===o;const R=(l&128)!==0;if(!n&&w===s&&R)throw new Error("Point.fromHex: x=0 and x_0=1");if(R!==E)w=modP(-w);return Point.fromAffine({x:w,y:f})}toBytes(){const{x:e,y:t}=this.toAffine();const n=(0,a.numberToBytesLE)(t,r.BYTES);n[n.length-1]|=e&o?128:0;return n}toRawBytes(){return this.toBytes()}toHex(){return(0,a.bytesToHex)(this.toBytes())}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}Point.BASE=new Point(e.Gx,e.Gy,o,modP(e.Gx*e.Gy));Point.ZERO=new Point(s,o,o,s);Point.Fp=r;Point.Fn=i;const y=new n.wNAF(Point,i.BYTES*8);return Point}class PrimeEdwardsPoint{constructor(e){this.ep=e}static fromBytes(e){throw new Error("fromBytes must be implemented by subclass")}static fromHex(e){throw new Error("fromHex must be implemented by subclass")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}clearCofactor(){return this}assertValidity(){this.ep.assertValidity()}toAffine(e){return this.ep.toAffine(e)}toRawBytes(){return this.toBytes()}toHex(){return(0,a.bytesToHex)(this.toBytes())}toString(){return this.toHex()}isTorsionFree(){return true}isSmallOrder(){return false}add(e){this.assertSame(e);return this.init(this.ep.add(e.ep))}subtract(e){this.assertSame(e);return this.init(this.ep.subtract(e.ep))}multiply(e){return this.init(this.ep.multiply(e))}multiplyUnsafe(e){return this.init(this.ep.multiplyUnsafe(e))}double(){return this.init(this.ep.double())}negate(){return this.init(this.ep.negate())}precompute(e,t){return this.init(this.ep.precompute(e,t))}}t.PrimeEdwardsPoint=PrimeEdwardsPoint;function eddsa(e,t,r){if(typeof t!=="function")throw new Error('"hash" function param is required');(0,a._validateObject)(r,{},{adjustScalarBytes:"function",randomBytes:"function",domain:"function",prehash:"function",mapToCurve:"function"});const{prehash:n}=r;const{BASE:i,Fp:d,Fn:p}=e;const c=p.ORDER;const l=r.randomBytes||a.randomBytes;const u=r.adjustScalarBytes||(e=>e);const m=r.domain||((e,t,r)=>{(0,a.abool)("phflag",r);if(t.length||r)throw new Error("Contexts/pre-hash are not supported");return e});function modN(e){return p.create(e)}function modN_LE(e){return modN((0,a.bytesToNumberLE)(e))}function getPrivateScalar(e){const r=d.BYTES;e=(0,a.ensureBytes)("private key",e,r);const n=(0,a.ensureBytes)("hashed private key",t(e),2*r);const i=u(n.slice(0,r));const s=n.slice(r,2*r);const o=modN_LE(i);return{head:i,prefix:s,scalar:o}}function getExtendedPublicKey(e){const{head:t,prefix:r,scalar:a}=getPrivateScalar(e);const n=i.multiply(a);const s=n.toBytes();return{head:t,prefix:r,scalar:a,point:n,pointBytes:s}}function getPublicKey(e){return getExtendedPublicKey(e).pointBytes}function hashDomainToScalar(e=Uint8Array.of(),...r){const i=(0,a.concatBytes)(...r);return modN_LE(t(m(i,(0,a.ensureBytes)("context",e),!!n)))}function sign(e,t,r={}){e=(0,a.ensureBytes)("message",e);if(n)e=n(e);const{prefix:o,scalar:p,pointBytes:l}=getExtendedPublicKey(t);const u=hashDomainToScalar(r.context,o,e);const m=i.multiply(u).toBytes();const f=hashDomainToScalar(r.context,m,l,e);const g=modN(u+f*p);(0,a.aInRange)("signature.s",g,s,c);const y=d.BYTES;const _=(0,a.concatBytes)(m,(0,a.numberToBytesLE)(g,y));return(0,a.ensureBytes)("result",_,y*2)}const f={zip215:true};function verify(t,r,s,o=f){const{context:p,zip215:c}=o;const l=d.BYTES;t=(0,a.ensureBytes)("signature",t,2*l);r=(0,a.ensureBytes)("message",r);s=(0,a.ensureBytes)("publicKey",s,l);if(c!==undefined)(0,a.abool)("zip215",c);if(n)r=n(r);const u=(0,a.bytesToNumberLE)(t.slice(l,2*l));let m,g,y;try{m=e.fromHex(s,c);g=e.fromHex(t.slice(0,l),c);y=i.multiplyUnsafe(u)}catch(e){return false}if(!c&&m.isSmallOrder())return false;const _=hashDomainToScalar(p,g.toBytes(),m.toBytes(),r);const v=g.add(m.multiplyUnsafe(_));return v.subtract(y).clearCofactor().is0()}i.precompute(8);const g=d.BYTES;const y={secret:g,public:g,signature:2*g,seed:g};function randomSecretKey(e=l(y.seed)){return e}const _={getExtendedPublicKey:getExtendedPublicKey,randomSecretKey:randomSecretKey,isValidSecretKey:isValidSecretKey,isValidPublicKey:isValidPublicKey,randomPrivateKey:randomSecretKey,toMontgomery(t){const{y:r}=e.fromBytes(t);const a=g===32;if(!a&&g!==57)throw new Error("only defined for 25519 and 448");const n=a?d.div(o+r,o-r):d.div(r-o,r+o);return d.toBytes(n)},toMontgomeryPriv(e){(0,a.abytes)(e,g);const r=t(e.subarray(0,g));return u(r).subarray(0,g)},precompute(t=8,r=e.BASE){return r.precompute(t,false)}};function keygen(e){const t=_.randomSecretKey(e);return{secretKey:t,publicKey:getPublicKey(t)}}function isValidSecretKey(e){try{return!!p.fromBytes(e,false)}catch(e){return false}}function isValidPublicKey(t,r){try{return!!e.fromBytes(t,r)}catch(e){return false}}return Object.freeze({keygen:keygen,getPublicKey:getPublicKey,sign:sign,verify:verify,utils:_,Point:e,info:{type:"edwards",lengths:y}})}function _eddsa_legacy_opts_to_new(e){const t={a:e.a,d:e.d,p:e.Fp.ORDER,n:e.n,h:e.h,Gx:e.Gx,Gy:e.Gy};const r=e.Fp;const a=(0,i.Field)(t.n,e.nBitLength,true);const n={Fp:r,Fn:a,uvRatio:e.uvRatio};const s={randomBytes:e.randomBytes,adjustScalarBytes:e.adjustScalarBytes,domain:e.domain,prehash:e.prehash,mapToCurve:e.mapToCurve};return{CURVE:t,curveOpts:n,hash:e.hash,eddsaOpts:s}}function _eddsa_new_output_to_legacy(e,t){const r=Object.assign({},t,{ExtendedPoint:t.Point,CURVE:e});return r}function twistedEdwards(e){const{CURVE:t,curveOpts:r,hash:a,eddsaOpts:n}=_eddsa_legacy_opts_to_new(e);const i=edwards(t,r);const s=eddsa(i,a,n);return _eddsa_new_output_to_legacy(e,s)}},3823:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t._DST_scalar=void 0;t.expand_message_xmd=expand_message_xmd;t.expand_message_xof=expand_message_xof;t.hash_to_field=hash_to_field;t.isogenyMap=isogenyMap;t.createHasher=createHasher;const a=r(1145);const n=r(4161);const i=a.bytesToNumberBE;function i2osp(e,t){anum(e);anum(t);if(e<0||e>=1<<8*t)throw new Error("invalid I2OSP input: "+e);const r=Array.from({length:t}).fill(0);for(let a=t-1;a>=0;a--){r[a]=e&255;e>>>=8}return new Uint8Array(r)}function strxor(e,t){const r=new Uint8Array(e.length);for(let a=0;a<e.length;a++){r[a]=e[a]^t[a]}return r}function anum(e){if(!Number.isSafeInteger(e))throw new Error("number expected")}function normDST(e){if(!(0,a.isBytes)(e)&&typeof e!=="string")throw new Error("DST must be Uint8Array or string");return typeof e==="string"?(0,a.utf8ToBytes)(e):e}function expand_message_xmd(e,t,r,n){(0,a.abytes)(e);anum(r);t=normDST(t);if(t.length>255)t=n((0,a.concatBytes)((0,a.utf8ToBytes)("H2C-OVERSIZE-DST-"),t));const{outputLen:i,blockLen:s}=n;const o=Math.ceil(r/i);if(r>65535||o>255)throw new Error("expand_message_xmd: invalid lenInBytes");const d=(0,a.concatBytes)(t,i2osp(t.length,1));const p=i2osp(0,s);const c=i2osp(r,2);const l=new Array(o);const u=n((0,a.concatBytes)(p,e,c,i2osp(0,1),d));l[0]=n((0,a.concatBytes)(u,i2osp(1,1),d));for(let e=1;e<=o;e++){const t=[strxor(u,l[e-1]),i2osp(e+1,1),d];l[e]=n((0,a.concatBytes)(...t))}const m=(0,a.concatBytes)(...l);return m.slice(0,r)}function expand_message_xof(e,t,r,n,i){(0,a.abytes)(e);anum(r);t=normDST(t);if(t.length>255){const e=Math.ceil(2*n/8);t=i.create({dkLen:e}).update((0,a.utf8ToBytes)("H2C-OVERSIZE-DST-")).update(t).digest()}if(r>65535||t.length>255)throw new Error("expand_message_xof: invalid lenInBytes");return i.create({dkLen:r}).update(e).update(i2osp(r,2)).update(t).update(i2osp(t.length,1)).digest()}function hash_to_field(e,t,r){(0,a._validateObject)(r,{p:"bigint",m:"number",k:"number",hash:"function"});const{p:s,k:o,m:d,hash:p,expand:c,DST:l}=r;if(!(0,a.isHash)(r.hash))throw new Error("expected valid hash");(0,a.abytes)(e);anum(t);const u=s.toString(2).length;const m=Math.ceil((u+o)/8);const f=t*d*m;let g;if(c==="xmd"){g=expand_message_xmd(e,l,f,p)}else if(c==="xof"){g=expand_message_xof(e,l,f,o,p)}else if(c==="_internal_pass"){g=e}else{throw new Error('expand must be "xmd" or "xof"')}const y=new Array(t);for(let e=0;e<t;e++){const t=new Array(d);for(let r=0;r<d;r++){const a=m*(r+e*d);const o=g.subarray(a,a+m);t[r]=(0,n.mod)(i(o),s)}y[e]=t}return y}function isogenyMap(e,t){const r=t.map((e=>Array.from(e).reverse()));return(t,a)=>{const[i,s,o,d]=r.map((r=>r.reduce(((r,a)=>e.add(e.mul(r,t),a)))));const[p,c]=(0,n.FpInvertBatch)(e,[s,d],true);t=e.mul(i,p);a=e.mul(a,e.mul(o,c));return{x:t,y:a}}}t._DST_scalar=(0,a.utf8ToBytes)("HashToScalar-");function createHasher(e,r,a){if(typeof r!=="function")throw new Error("mapToCurve() must be defined");function map(t){return e.fromAffine(r(t))}function clear(t){const r=t.clearCofactor();if(r.equals(e.ZERO))return e.ZERO;r.assertValidity();return r}return{defaults:a,hashToCurve(e,t){const r=Object.assign({},a,t);const n=hash_to_field(e,2,r);const i=map(n[0]);const s=map(n[1]);return clear(i.add(s))},encodeToCurve(e,t){const r=a.encodeDST?{DST:a.encodeDST}:{};const n=Object.assign({},a,r,t);const i=hash_to_field(e,1,n);const s=map(i[0]);return clear(s)},mapToCurve(e){if(!Array.isArray(e))throw new Error("expected array of bigints");for(const t of e)if(typeof t!=="bigint")throw new Error("expected array of bigints");return clear(map(e))},hashToScalar(r,n){const i=e.Fn.ORDER;const s=Object.assign({},a,{p:i,m:1,DST:t._DST_scalar},n);return hash_to_field(r,1,s)[0][0]}}}},4161:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isNegativeLE=void 0;t.mod=mod;t.pow=pow;t.pow2=pow2;t.invert=invert;t.tonelliShanks=tonelliShanks;t.FpSqrt=FpSqrt;t.validateField=validateField;t.FpPow=FpPow;t.FpInvertBatch=FpInvertBatch;t.FpDiv=FpDiv;t.FpLegendre=FpLegendre;t.FpIsSquare=FpIsSquare;t.nLength=nLength;t.Field=Field;t.FpSqrtOdd=FpSqrtOdd;t.FpSqrtEven=FpSqrtEven;t.hashToPrivateScalar=hashToPrivateScalar;t.getFieldBytesLength=getFieldBytesLength;t.getMinHashLength=getMinHashLength;t.mapHashToField=mapHashToField;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(1145);const n=BigInt(0),i=BigInt(1),s=BigInt(2),o=BigInt(3);const d=BigInt(4),p=BigInt(5),c=BigInt(7);const l=BigInt(8),u=BigInt(9),m=BigInt(16);function mod(e,t){const r=e%t;return r>=n?r:t+r}function pow(e,t,r){return FpPow(Field(r),e,t)}function pow2(e,t,r){let a=e;while(t-- >n){a*=a;a%=r}return a}function invert(e,t){if(e===n)throw new Error("invert: expected non-zero number");if(t<=n)throw new Error("invert: expected positive modulus, got "+t);let r=mod(e,t);let a=t;let s=n,o=i,d=i,p=n;while(r!==n){const e=a/r;const t=a%r;const n=s-d*e;const i=o-p*e;a=r,r=t,s=d,o=p,d=n,p=i}const c=a;if(c!==i)throw new Error("invert: does not exist");return mod(s,t)}function assertIsSquare(e,t,r){if(!e.eql(e.sqr(t),r))throw new Error("Cannot find square root")}function sqrt3mod4(e,t){const r=(e.ORDER+i)/d;const a=e.pow(t,r);assertIsSquare(e,a,t);return a}function sqrt5mod8(e,t){const r=(e.ORDER-p)/l;const a=e.mul(t,s);const n=e.pow(a,r);const i=e.mul(t,n);const o=e.mul(e.mul(i,s),n);const d=e.mul(i,e.sub(o,e.ONE));assertIsSquare(e,d,t);return d}function sqrt9mod16(e){const t=Field(e);const r=tonelliShanks(e);const a=r(t,t.neg(t.ONE));const n=r(t,a);const i=r(t,t.neg(a));const s=(e+c)/m;return(e,t)=>{let r=e.pow(t,s);let o=e.mul(r,a);const d=e.mul(r,n);const p=e.mul(r,i);const c=e.eql(e.sqr(o),t);const l=e.eql(e.sqr(d),t);r=e.cmov(r,o,c);o=e.cmov(p,d,l);const u=e.eql(e.sqr(o),t);const m=e.cmov(r,o,u);assertIsSquare(e,m,t);return m}}function tonelliShanks(e){if(e<o)throw new Error("sqrt is not defined for small field");let t=e-i;let r=0;while(t%s===n){t/=s;r++}let a=s;const d=Field(e);while(FpLegendre(d,a)===1){if(a++>1e3)throw new Error("Cannot find square root: probably non-prime P")}if(r===1)return sqrt3mod4;let p=d.pow(a,t);const c=(t+i)/s;return function tonelliSlow(e,a){if(e.is0(a))return a;if(FpLegendre(e,a)!==1)throw new Error("Cannot find square root");let n=r;let s=e.mul(e.ONE,p);let o=e.pow(a,t);let d=e.pow(a,c);while(!e.eql(o,e.ONE)){if(e.is0(o))return e.ZERO;let t=1;let r=e.sqr(o);while(!e.eql(r,e.ONE)){t++;r=e.sqr(r);if(t===n)throw new Error("Cannot find square root")}const a=i<<BigInt(n-t-1);const p=e.pow(s,a);n=t;s=e.sqr(p);o=e.mul(o,s);d=e.mul(d,p)}return d}}function FpSqrt(e){if(e%d===o)return sqrt3mod4;if(e%l===p)return sqrt5mod8;if(e%m===u)return sqrt9mod16(e);return tonelliShanks(e)}const isNegativeLE=(e,t)=>(mod(e,t)&i)===i;t.isNegativeLE=isNegativeLE;const f=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function validateField(e){const t={ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"};const r=f.reduce(((e,t)=>{e[t]="function";return e}),t);(0,a._validateObject)(e,r);return e}function FpPow(e,t,r){if(r<n)throw new Error("invalid exponent, negatives unsupported");if(r===n)return e.ONE;if(r===i)return t;let a=e.ONE;let s=t;while(r>n){if(r&i)a=e.mul(a,s);s=e.sqr(s);r>>=i}return a}function FpInvertBatch(e,t,r=false){const a=new Array(t.length).fill(r?e.ZERO:undefined);const n=t.reduce(((t,r,n)=>{if(e.is0(r))return t;a[n]=t;return e.mul(t,r)}),e.ONE);const i=e.inv(n);t.reduceRight(((t,r,n)=>{if(e.is0(r))return t;a[n]=e.mul(t,a[n]);return e.mul(t,r)}),i);return a}function FpDiv(e,t,r){return e.mul(t,typeof r==="bigint"?invert(r,e.ORDER):e.inv(r))}function FpLegendre(e,t){const r=(e.ORDER-i)/s;const a=e.pow(t,r);const n=e.eql(a,e.ONE);const o=e.eql(a,e.ZERO);const d=e.eql(a,e.neg(e.ONE));if(!n&&!o&&!d)throw new Error("invalid Legendre symbol result");return n?1:o?0:-1}function FpIsSquare(e,t){const r=FpLegendre(e,t);return r===1}function nLength(e,t){if(t!==undefined)(0,a.anumber)(t);const r=t!==undefined?t:e.toString(2).length;const n=Math.ceil(r/8);return{nBitLength:r,nByteLength:n}}function Field(e,t,r=false,s={}){if(e<=n)throw new Error("invalid field: expected ORDER > 0, got "+e);let o=undefined;let d=undefined;let p=false;let c=undefined;if(typeof t==="object"&&t!=null){if(s.sqrt||r)throw new Error("cannot specify opts in two arguments");const e=t;if(e.BITS)o=e.BITS;if(e.sqrt)d=e.sqrt;if(typeof e.isLE==="boolean")r=e.isLE;if(typeof e.modOnDecode==="boolean")p=e.modOnDecode;c=e.allowedLengths}else{if(typeof t==="number")o=t;if(s.sqrt)d=s.sqrt}const{nBitLength:l,nByteLength:u}=nLength(e,o);if(u>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let m;const f=Object.freeze({ORDER:e,isLE:r,BITS:l,BYTES:u,MASK:(0,a.bitMask)(l),ZERO:n,ONE:i,allowedLengths:c,create:t=>mod(t,e),isValid:t=>{if(typeof t!=="bigint")throw new Error("invalid field element: expected bigint, got "+typeof t);return n<=t&&t<e},is0:e=>e===n,isValidNot0:e=>!f.is0(e)&&f.isValid(e),isOdd:e=>(e&i)===i,neg:t=>mod(-t,e),eql:(e,t)=>e===t,sqr:t=>mod(t*t,e),add:(t,r)=>mod(t+r,e),sub:(t,r)=>mod(t-r,e),mul:(t,r)=>mod(t*r,e),pow:(e,t)=>FpPow(f,e,t),div:(t,r)=>mod(t*invert(r,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>invert(t,e),sqrt:d||(t=>{if(!m)m=FpSqrt(e);return m(f,t)}),toBytes:e=>r?(0,a.numberToBytesLE)(e,u):(0,a.numberToBytesBE)(e,u),fromBytes:(t,n=true)=>{if(c){if(!c.includes(t.length)||t.length>u){throw new Error("Field.fromBytes: expected "+c+" bytes, got "+t.length)}const e=new Uint8Array(u);e.set(t,r?0:e.length-t.length);t=e}if(t.length!==u)throw new Error("Field.fromBytes: expected "+u+" bytes, got "+t.length);let i=r?(0,a.bytesToNumberLE)(t):(0,a.bytesToNumberBE)(t);if(p)i=mod(i,e);if(!n)if(!f.isValid(i))throw new Error("invalid field element: outside of range 0..ORDER");return i},invertBatch:e=>FpInvertBatch(f,e),cmov:(e,t,r)=>r?t:e});return Object.freeze(f)}function FpSqrtOdd(e,t){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const r=e.sqrt(t);return e.isOdd(r)?r:e.neg(r)}function FpSqrtEven(e,t){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const r=e.sqrt(t);return e.isOdd(r)?e.neg(r):r}function hashToPrivateScalar(e,t,r=false){e=(0,a.ensureBytes)("privateHash",e);const n=e.length;const s=nLength(t).nByteLength+8;if(s<24||n<s||n>1024)throw new Error("hashToPrivateScalar: expected "+s+"-1024 bytes of input, got "+n);const o=r?(0,a.bytesToNumberLE)(e):(0,a.bytesToNumberBE)(e);return mod(o,t-i)+i}function getFieldBytesLength(e){if(typeof e!=="bigint")throw new Error("field order must be bigint");const t=e.toString(2).length;return Math.ceil(t/8)}function getMinHashLength(e){const t=getFieldBytesLength(e);return t+Math.ceil(t/2)}function mapHashToField(e,t,r=false){const n=e.length;const s=getFieldBytesLength(t);const o=getMinHashLength(t);if(n<16||n<o||n>1024)throw new Error("expected "+o+"-1024 bytes of input, got "+n);const d=r?(0,a.bytesToNumberLE)(e):(0,a.bytesToNumberBE)(e);const p=mod(d,t-i)+i;return r?(0,a.numberToBytesLE)(p,s):(0,a.numberToBytesBE)(p,s)}},280:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.montgomery=montgomery;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(1145);const n=r(4161);const i=BigInt(0);const s=BigInt(1);const o=BigInt(2);function validateOpts(e){(0,a._validateObject)(e,{adjustScalarBytes:"function",powPminus2:"function"});return Object.freeze({...e})}function montgomery(e){const t=validateOpts(e);const{P:r,type:d,adjustScalarBytes:p,powPminus2:c,randomBytes:l}=t;const u=d==="x25519";if(!u&&d!=="x448")throw new Error("invalid type");const m=l||a.randomBytes;const f=u?255:448;const g=u?32:56;const y=u?BigInt(9):BigInt(5);const _=u?BigInt(121665):BigInt(39081);const v=u?o**BigInt(254):o**BigInt(447);const b=u?BigInt(8)*o**BigInt(251)-s:BigInt(4)*o**BigInt(445)-s;const w=v+b+s;const modP=e=>(0,n.mod)(e,r);const E=encodeU(y);function encodeU(e){return(0,a.numberToBytesLE)(modP(e),g)}function decodeU(e){const t=(0,a.ensureBytes)("u coordinate",e,g);if(u)t[31]&=127;return modP((0,a.bytesToNumberLE)(t))}function decodeScalar(e){return(0,a.bytesToNumberLE)(p((0,a.ensureBytes)("scalar",e,g)))}function scalarMult(e,t){const r=montgomeryLadder(decodeU(t),decodeScalar(e));if(r===i)throw new Error("invalid private or public key received");return encodeU(r)}function scalarMultBase(e){return scalarMult(e,E)}function cswap(e,t,r){const a=modP(e*(t-r));t=modP(t-a);r=modP(r+a);return{x_2:t,x_3:r}}function montgomeryLadder(e,t){(0,a.aInRange)("u",e,i,r);(0,a.aInRange)("scalar",t,v,w);const n=t;const o=e;let d=s;let p=i;let l=e;let u=s;let m=i;for(let e=BigInt(f-1);e>=i;e--){const t=n>>e&s;m^=t;({x_2:d,x_3:l}=cswap(m,d,l));({x_2:p,x_3:u}=cswap(m,p,u));m=t;const r=d+p;const a=modP(r*r);const i=d-p;const c=modP(i*i);const f=a-c;const g=l+u;const y=l-u;const v=modP(y*r);const b=modP(g*i);const w=v+b;const E=v-b;l=modP(w*w);u=modP(o*modP(E*E));d=modP(a*c);p=modP(f*(a+modP(_*f)))}({x_2:d,x_3:l}=cswap(m,d,l));({x_2:p,x_3:u}=cswap(m,p,u));const g=c(p);return modP(d*g)}const randomSecretKey=(e=m(g))=>e;const R={randomSecretKey:randomSecretKey,randomPrivateKey:randomSecretKey};function keygen(e){const t=R.randomSecretKey(e);return{secretKey:t,publicKey:scalarMultBase(t)}}const T={secret:g,public:g,seed:g};return{keygen:keygen,getSharedSecret:(e,t)=>scalarMult(e,t),getPublicKey:e=>scalarMultBase(e),scalarMult:scalarMult,scalarMultBase:scalarMultBase,utils:R,GuBytes:E.slice(),info:{type:"montgomery",lengths:T}}}},6635:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.DER=t.DERErr=void 0;t._splitEndoScalar=_splitEndoScalar;t._legacyHelperEquat=_legacyHelperEquat;t._normFnElement=_normFnElement;t.weierstrassN=weierstrassN;t.weierstrassPoints=weierstrassPoints;t.SWUFpSqrtRatio=SWUFpSqrtRatio;t.mapToCurveSimpleSWU=mapToCurveSimpleSWU;t.ecdsa=ecdsa;t.weierstrass=weierstrass;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(1914);const n=r(6164);const i=r(1145);const s=r(4092);const o=r(4161);const divNearest=(e,t)=>(e+(e>=0?t:-t)/c)/t;function _splitEndoScalar(e,t,r){const[[a,n],[s,o]]=t;const c=divNearest(o*e,r);const l=divNearest(-n*e,r);let u=e-c*a-l*s;let m=-c*n-l*o;const f=u<d;const g=m<d;if(f)u=-u;if(g)m=-m;const y=(0,i.bitMask)(Math.ceil((0,i.bitLen)(r)/2))+p;if(u<d||u>=y||m<d||m>=y){throw new Error("splitScalar (endomorphism): failed, k="+e)}return{k1neg:f,k1:u,k2neg:g,k2:m}}function validateSigVerOpts(e){if(e.lowS!==undefined)(0,i.abool)("lowS",e.lowS);if(e.prehash!==undefined)(0,i.abool)("prehash",e.prehash)}class DERErr extends Error{constructor(e=""){super(e)}}t.DERErr=DERErr;t.DER={Err:DERErr,_tlv:{encode:(e,r)=>{const{Err:a}=t.DER;if(e<0||e>256)throw new a("tlv.encode: wrong tag");if(r.length&1)throw new a("tlv.encode: unpadded data");const n=r.length/2;const s=(0,i.numberToHexUnpadded)(n);if(s.length/2&128)throw new a("tlv.encode: long form length too big");const o=n>127?(0,i.numberToHexUnpadded)(s.length/2|128):"";const d=(0,i.numberToHexUnpadded)(e);return d+o+s+r},decode(e,r){const{Err:a}=t.DER;let n=0;if(e<0||e>256)throw new a("tlv.encode: wrong tag");if(r.length<2||r[n++]!==e)throw new a("tlv.decode: wrong tlv");const i=r[n++];const s=!!(i&128);let o=0;if(!s)o=i;else{const e=i&127;if(!e)throw new a("tlv.decode(long): indefinite length not supported");if(e>4)throw new a("tlv.decode(long): byte length is too big");const t=r.subarray(n,n+e);if(t.length!==e)throw new a("tlv.decode: length bytes not complete");if(t[0]===0)throw new a("tlv.decode(long): zero leftmost byte");for(const e of t)o=o<<8|e;n+=e;if(o<128)throw new a("tlv.decode(long): not minimal encoding")}const d=r.subarray(n,n+o);if(d.length!==o)throw new a("tlv.decode: wrong value length");return{v:d,l:r.subarray(n+o)}}},_int:{encode(e){const{Err:r}=t.DER;if(e<d)throw new r("integer: negative integers are not allowed");let a=(0,i.numberToHexUnpadded)(e);if(Number.parseInt(a[0],16)&8)a="00"+a;if(a.length&1)throw new r("unexpected DER parsing assertion: unpadded hex");return a},decode(e){const{Err:r}=t.DER;if(e[0]&128)throw new r("invalid signature integer: negative");if(e[0]===0&&!(e[1]&128))throw new r("invalid signature integer: unnecessary leading zero");return(0,i.bytesToNumberBE)(e)}},toSig(e){const{Err:r,_int:a,_tlv:n}=t.DER;const s=(0,i.ensureBytes)("signature",e);const{v:o,l:d}=n.decode(48,s);if(d.length)throw new r("invalid signature: left bytes after parsing");const{v:p,l:c}=n.decode(2,o);const{v:l,l:u}=n.decode(2,c);if(u.length)throw new r("invalid signature: left bytes after parsing");return{r:a.decode(p),s:a.decode(l)}},hexFromSig(e){const{_tlv:r,_int:a}=t.DER;const n=r.encode(2,a.encode(e.r));const i=r.encode(2,a.encode(e.s));const s=n+i;return r.encode(48,s)}};const d=BigInt(0),p=BigInt(1),c=BigInt(2),l=BigInt(3),u=BigInt(4);function _legacyHelperEquat(e,t,r){function weierstrassEquation(a){const n=e.sqr(a);const i=e.mul(n,a);return e.add(e.add(i,e.mul(a,t)),r)}return weierstrassEquation}function _normFnElement(e,t){const{BYTES:r}=e;let a;if(typeof t==="bigint"){a=t}else{let n=(0,i.ensureBytes)("private key",t);try{a=e.fromBytes(n)}catch(e){throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof t}`)}}if(!e.isValidNot0(a))throw new Error("invalid private key: out of range [1..N-1]");return a}function weierstrassN(e,t={}){const{Fp:r,Fn:a}=(0,s._createCurveFields)("weierstrass",e,t);const{h:n,n:o}=e;(0,i._validateObject)(t,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:c}=t;if(c){if(!r.is0(e.a)||typeof c.beta!=="bigint"||!Array.isArray(c.basises)){throw new Error('invalid endo: expected "beta": bigint and "basises": array')}}function assertCompressionIsSupported(){if(!r.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}function pointToBytes(e,t,a){const{x:n,y:s}=t.toAffine();const o=r.toBytes(n);(0,i.abool)("isCompressed",a);if(a){assertCompressionIsSupported();const e=!r.isOdd(s);return(0,i.concatBytes)(pprefix(e),o)}else{return(0,i.concatBytes)(Uint8Array.of(4),o,r.toBytes(s))}}function pointFromBytes(e){(0,i.abytes)(e);const t=r.BYTES;const a=t+1;const n=2*t+1;const s=e.length;const o=e[0];const d=e.subarray(1);if(s===a&&(o===2||o===3)){const e=r.fromBytes(d);if(!r.isValid(e))throw new Error("bad point: is not on curve, wrong x");const t=g(e);let a;try{a=r.sqrt(t)}catch(e){const t=e instanceof Error?": "+e.message:"";throw new Error("bad point: is not on curve, sqrt error"+t)}assertCompressionIsSupported();const n=r.isOdd(a);const i=(o&1)===1;if(i!==n)a=r.neg(a);return{x:e,y:a}}else if(s===n&&o===4){const e=r.fromBytes(d.subarray(t*0,t*1));const a=r.fromBytes(d.subarray(t*1,t*2));if(!isValidXY(e,a))throw new Error("bad point: is not on curve");return{x:e,y:a}}else{throw new Error(`bad point: got length ${s}, expected compressed=${a} or uncompressed=${n}`)}}const m=t.toBytes||pointToBytes;const f=t.fromBytes||pointFromBytes;const g=_legacyHelperEquat(r,e.a,e.b);function isValidXY(e,t){const a=r.sqr(t);const n=g(e);return r.eql(a,n)}if(!isValidXY(e.Gx,e.Gy))throw new Error("bad curve params: generator point");const y=r.mul(r.pow(e.a,l),u);const _=r.mul(r.sqr(e.b),BigInt(27));if(r.is0(r.add(y,_)))throw new Error("bad curve params: a or b");function acoord(e,t,a=false){if(!r.isValid(t)||a&&r.is0(t))throw new Error(`bad point coordinate ${e}`);return t}function aprjpoint(e){if(!(e instanceof Point))throw new Error("ProjectivePoint expected")}function splitEndoScalarN(e){if(!c||!c.basises)throw new Error("no endo");return _splitEndoScalar(e,c.basises,a.ORDER)}const v=(0,i.memoized)(((e,t)=>{const{X:a,Y:n,Z:i}=e;if(r.eql(i,r.ONE))return{x:a,y:n};const s=e.is0();if(t==null)t=s?r.ONE:r.inv(i);const o=r.mul(a,t);const d=r.mul(n,t);const p=r.mul(i,t);if(s)return{x:r.ZERO,y:r.ZERO};if(!r.eql(p,r.ONE))throw new Error("invZ was invalid");return{x:o,y:d}}));const b=(0,i.memoized)((e=>{if(e.is0()){if(t.allowInfinityPoint&&!r.is0(e.Y))return;throw new Error("bad point: ZERO")}const{x:a,y:n}=e.toAffine();if(!r.isValid(a)||!r.isValid(n))throw new Error("bad point: x or y not field elements");if(!isValidXY(a,n))throw new Error("bad point: equation left != right");if(!e.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return true}));function finishEndo(e,t,a,n,i){a=new Point(r.mul(a.X,e),a.Y,a.Z);t=(0,s.negateCt)(n,t);a=(0,s.negateCt)(i,a);return t.add(a)}class Point{constructor(e,t,r){this.X=acoord("x",e);this.Y=acoord("y",t,true);this.Z=acoord("z",r);Object.freeze(this)}static fromAffine(e){const{x:t,y:a}=e||{};if(!e||!r.isValid(t)||!r.isValid(a))throw new Error("invalid affine point");if(e instanceof Point)throw new Error("projective point not allowed");if(r.is0(t)&&r.is0(a))return Point.ZERO;return new Point(t,a,r.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}get px(){return this.X}get py(){return this.X}get pz(){return this.Z}static normalizeZ(e){return(0,s.normalizeZ)(Point,e)}static fromBytes(e){(0,i.abytes)(e);return Point.fromHex(e)}static fromHex(e){const t=Point.fromAffine(f((0,i.ensureBytes)("pointHex",e)));t.assertValidity();return t}static fromPrivateKey(e){return Point.BASE.multiply(_normFnElement(a,e))}static msm(e,t){return(0,s.pippenger)(Point,a,e,t)}_setWindowSize(e){this.precompute(e)}precompute(e=8,t=true){E.createCache(this,e);if(!t)this.multiply(l);return this}assertValidity(){b(this)}hasEvenY(){const{y:e}=this.toAffine();if(!r.isOdd)throw new Error("Field doesn't support isOdd");return!r.isOdd(e)}equals(e){aprjpoint(e);const{X:t,Y:a,Z:n}=this;const{X:i,Y:s,Z:o}=e;const d=r.eql(r.mul(t,o),r.mul(i,n));const p=r.eql(r.mul(a,o),r.mul(s,n));return d&&p}negate(){return new Point(this.X,r.neg(this.Y),this.Z)}double(){const{a:t,b:a}=e;const n=r.mul(a,l);const{X:i,Y:s,Z:o}=this;let d=r.ZERO,p=r.ZERO,c=r.ZERO;let u=r.mul(i,i);let m=r.mul(s,s);let f=r.mul(o,o);let g=r.mul(i,s);g=r.add(g,g);c=r.mul(i,o);c=r.add(c,c);d=r.mul(t,c);p=r.mul(n,f);p=r.add(d,p);d=r.sub(m,p);p=r.add(m,p);p=r.mul(d,p);d=r.mul(g,d);c=r.mul(n,c);f=r.mul(t,f);g=r.sub(u,f);g=r.mul(t,g);g=r.add(g,c);c=r.add(u,u);u=r.add(c,u);u=r.add(u,f);u=r.mul(u,g);p=r.add(p,u);f=r.mul(s,o);f=r.add(f,f);u=r.mul(f,g);d=r.sub(d,u);c=r.mul(f,m);c=r.add(c,c);c=r.add(c,c);return new Point(d,p,c)}add(t){aprjpoint(t);const{X:a,Y:n,Z:i}=this;const{X:s,Y:o,Z:d}=t;let p=r.ZERO,c=r.ZERO,u=r.ZERO;const m=e.a;const f=r.mul(e.b,l);let g=r.mul(a,s);let y=r.mul(n,o);let _=r.mul(i,d);let v=r.add(a,n);let b=r.add(s,o);v=r.mul(v,b);b=r.add(g,y);v=r.sub(v,b);b=r.add(a,i);let w=r.add(s,d);b=r.mul(b,w);w=r.add(g,_);b=r.sub(b,w);w=r.add(n,i);p=r.add(o,d);w=r.mul(w,p);p=r.add(y,_);w=r.sub(w,p);u=r.mul(m,b);p=r.mul(f,_);u=r.add(p,u);p=r.sub(y,u);u=r.add(y,u);c=r.mul(p,u);y=r.add(g,g);y=r.add(y,g);_=r.mul(m,_);b=r.mul(f,b);y=r.add(y,_);_=r.sub(g,_);_=r.mul(m,_);b=r.add(b,_);g=r.mul(y,b);c=r.add(c,g);g=r.mul(w,b);p=r.mul(v,p);p=r.sub(p,g);g=r.mul(v,y);u=r.mul(w,u);u=r.add(u,g);return new Point(p,c,u)}subtract(e){return this.add(e.negate())}is0(){return this.equals(Point.ZERO)}multiply(e){const{endo:r}=t;if(!a.isValidNot0(e))throw new Error("invalid scalar: out of range");let n,i;const mul=e=>E.cached(this,e,(e=>(0,s.normalizeZ)(Point,e)));if(r){const{k1neg:t,k1:a,k2neg:s,k2:o}=splitEndoScalarN(e);const{p:d,f:p}=mul(a);const{p:c,f:l}=mul(o);i=p.add(l);n=finishEndo(r.beta,d,c,t,s)}else{const{p:t,f:r}=mul(e);n=t;i=r}return(0,s.normalizeZ)(Point,[n,i])[0]}multiplyUnsafe(e){const{endo:r}=t;const n=this;if(!a.isValid(e))throw new Error("invalid scalar: out of range");if(e===d||n.is0())return Point.ZERO;if(e===p)return n;if(E.hasCache(this))return this.multiply(e);if(r){const{k1neg:t,k1:a,k2neg:i,k2:o}=splitEndoScalarN(e);const{p1:d,p2:p}=(0,s.mulEndoUnsafe)(Point,n,a,o);return finishEndo(r.beta,d,p,t,i)}else{return E.unsafe(n,e)}}multiplyAndAddUnsafe(e,t,r){const a=this.multiplyUnsafe(t).add(e.multiplyUnsafe(r));return a.is0()?undefined:a}toAffine(e){return v(this,e)}isTorsionFree(){const{isTorsionFree:e}=t;if(n===p)return true;if(e)return e(Point,this);return E.unsafe(this,o).is0()}clearCofactor(){const{clearCofactor:e}=t;if(n===p)return this;if(e)return e(Point,this);return this.multiplyUnsafe(n)}isSmallOrder(){return this.multiplyUnsafe(n).is0()}toBytes(e=true){(0,i.abool)("isCompressed",e);this.assertValidity();return m(Point,this,e)}toRawBytes(e=true){return this.toBytes(e)}toHex(e=true){return(0,i.bytesToHex)(this.toBytes(e))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}Point.BASE=new Point(e.Gx,e.Gy,r.ONE);Point.ZERO=new Point(r.ZERO,r.ONE,r.ZERO);Point.Fp=r;Point.Fn=a;const w=a.BITS;const E=new s.wNAF(Point,t.endo?Math.ceil(w/2):w);return Point}function weierstrassPoints(e){const{CURVE:t,curveOpts:r}=_weierstrass_legacy_opts_to_new(e);const a=weierstrassN(t,r);return _weierstrass_new_output_to_legacy(e,a)}function pprefix(e){return Uint8Array.of(e?2:3)}function SWUFpSqrtRatio(e,t){const r=e.ORDER;let a=d;for(let e=r-p;e%c===d;e/=c)a+=p;const n=a;const i=c<<n-p-p;const s=i*c;const o=(r-p)/s;const m=(o-p)/c;const f=s-p;const g=i;const y=e.pow(t,o);const _=e.pow(t,(o+p)/c);let sqrtRatio=(t,r)=>{let a=y;let i=e.pow(r,f);let s=e.sqr(i);s=e.mul(s,r);let o=e.mul(t,s);o=e.pow(o,m);o=e.mul(o,i);i=e.mul(o,r);s=e.mul(o,t);let d=e.mul(s,i);o=e.pow(d,g);let l=e.eql(o,e.ONE);i=e.mul(s,_);o=e.mul(d,a);s=e.cmov(i,s,l);d=e.cmov(o,d,l);for(let t=n;t>p;t--){let r=t-c;r=c<<r-p;let n=e.pow(d,r);const o=e.eql(n,e.ONE);i=e.mul(s,a);a=e.mul(a,a);n=e.mul(d,a);s=e.cmov(i,s,o);d=e.cmov(n,d,o)}return{isValid:l,value:s}};if(e.ORDER%u===l){const r=(e.ORDER-l)/u;const a=e.sqrt(e.neg(t));sqrtRatio=(t,n)=>{let i=e.sqr(n);const s=e.mul(t,n);i=e.mul(i,s);let o=e.pow(i,r);o=e.mul(o,s);const d=e.mul(o,a);const p=e.mul(e.sqr(o),n);const c=e.eql(p,t);let l=e.cmov(d,o,c);return{isValid:c,value:l}}}return sqrtRatio}function mapToCurveSimpleSWU(e,t){(0,o.validateField)(e);const{A:r,B:a,Z:n}=t;if(!e.isValid(r)||!e.isValid(a)||!e.isValid(n))throw new Error("mapToCurveSimpleSWU: invalid opts");const i=SWUFpSqrtRatio(e,n);if(!e.isOdd)throw new Error("Field does not have .isOdd()");return t=>{let s,d,p,c,l,u,m,f;s=e.sqr(t);s=e.mul(s,n);d=e.sqr(s);d=e.add(d,s);p=e.add(d,e.ONE);p=e.mul(p,a);c=e.cmov(n,e.neg(d),!e.eql(d,e.ZERO));c=e.mul(c,r);d=e.sqr(p);u=e.sqr(c);l=e.mul(u,r);d=e.add(d,l);d=e.mul(d,p);u=e.mul(u,c);l=e.mul(u,a);d=e.add(d,l);m=e.mul(s,p);const{isValid:g,value:y}=i(d,u);f=e.mul(s,t);f=e.mul(f,y);m=e.cmov(m,p,g);f=e.cmov(f,y,g);const _=e.isOdd(t)===e.isOdd(f);f=e.cmov(e.neg(f),f,_);const v=(0,o.FpInvertBatch)(e,[c],true)[0];m=e.mul(m,v);return{x:m,y:f}}}function ecdsa(e,r,s={}){(0,n.ahash)(r);(0,i._validateObject)(s,{},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const l=s.randomBytes||i.randomBytes;const u=s.hmac||((e,...t)=>(0,a.hmac)(r,e,(0,i.concatBytes)(...t)));const{Fp:m,Fn:f}=e;const{ORDER:g,BITS:y}=f;const _=(0,o.getMinHashLength)(g);const v={secret:f.BYTES,public:1+m.BYTES,publicUncompressed:1+2*m.BYTES,signature:2*f.BYTES,seed:_};function isBiggerThanHalfOrder(e){const t=g>>p;return e>t}function normalizeS(e){return isBiggerThanHalfOrder(e)?f.neg(e):e}function aValidRS(e,t){if(!f.isValidNot0(t))throw new Error(`invalid signature ${e}: out of range 1..CURVE.n`)}class Signature{constructor(e,t,r){aValidRS("r",e);aValidRS("s",t);this.r=e;this.s=t;if(r!=null)this.recovery=r;Object.freeze(this)}static fromBytes(e,r="compact"){if(r==="compact"){const t=f.BYTES;(0,i.abytes)(e,t*2);const r=e.subarray(0,t);const a=e.subarray(t,t*2);return new Signature(f.fromBytes(r),f.fromBytes(a))}if(r==="der"){(0,i.abytes)(e);const{r:r,s:a}=t.DER.toSig(e);return new Signature(r,a)}throw new Error("invalid format")}static fromHex(e,t){return this.fromBytes((0,i.hexToBytes)(e),t)}addRecoveryBit(e){return new Signature(this.r,this.s,e)}recoverPublicKey(t){const r=m.ORDER;const{r:a,s:n,recovery:s}=this;if(s==null||![0,1,2,3].includes(s))throw new Error("recovery id invalid");const o=g*c<r;if(o&&s>1)throw new Error("recovery id is ambiguous for h>1 curve");const d=s===2||s===3?a+g:a;if(!m.isValid(d))throw new Error("recovery id 2 or 3 invalid");const p=m.toBytes(d);const l=e.fromHex((0,i.concatBytes)(pprefix((s&1)===0),p));const u=f.inv(d);const y=E((0,i.ensureBytes)("msgHash",t));const _=f.create(-y*u);const v=f.create(n*u);const b=e.BASE.multiplyUnsafe(_).add(l.multiplyUnsafe(v));if(b.is0())throw new Error("point at infinify");b.assertValidity();return b}hasHighS(){return isBiggerThanHalfOrder(this.s)}normalizeS(){return this.hasHighS()?new Signature(this.r,f.neg(this.s),this.recovery):this}toBytes(e="compact"){if(e==="compact")return(0,i.concatBytes)(f.toBytes(this.r),f.toBytes(this.s));if(e==="der")return(0,i.hexToBytes)(t.DER.hexFromSig(this));throw new Error("invalid format")}toHex(e){return(0,i.bytesToHex)(this.toBytes(e))}assertValidity(){}static fromCompact(e){return Signature.fromBytes((0,i.ensureBytes)("sig",e),"compact")}static fromDER(e){return Signature.fromBytes((0,i.ensureBytes)("sig",e),"der")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return(0,i.bytesToHex)(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return(0,i.bytesToHex)(this.toBytes("compact"))}}function isValidSecretKey(e){try{return!!_normFnElement(f,e)}catch(e){return false}}function isValidPublicKey(t,r){try{const a=t.length;if(r===true&&a!==v.public)return false;if(r===false&&a!==v.publicUncompressed)return false;return!!e.fromBytes(t)}catch(e){return false}}function randomSecretKey(e=l(_)){return(0,o.mapHashToField)(e,g)}const b={isValidSecretKey:isValidSecretKey,isValidPublicKey:isValidPublicKey,randomSecretKey:randomSecretKey,isValidPrivateKey:isValidSecretKey,randomPrivateKey:randomSecretKey,normPrivateKeyToScalar:e=>_normFnElement(f,e),precompute(t=8,r=e.BASE){return r.precompute(t,false)}};function getPublicKey(t,r=true){return e.BASE.multiply(_normFnElement(f,t)).toBytes(r)}function isProbPub(t){if(typeof t==="bigint")return false;if(t instanceof e)return true;if(f.allowedLengths||v.secret===v.public)return undefined;const r=(0,i.ensureBytes)("key",t).length;return r===v.public||r===v.publicUncompressed}function getSharedSecret(t,r,a=true){if(isProbPub(t)===true)throw new Error("first arg must be private key");if(isProbPub(r)===false)throw new Error("second arg must be public key");const n=_normFnElement(f,t);const i=e.fromHex(r);return i.multiply(n).toBytes(a)}const w=s.bits2int||function(e){if(e.length>8192)throw new Error("input is too large");const t=(0,i.bytesToNumberBE)(e);const r=e.length*8-y;return r>0?t>>BigInt(r):t};const E=s.bits2int_modN||function(e){return f.create(w(e))};const R=(0,i.bitMask)(y);function int2octets(e){(0,i.aInRange)("num < 2^"+y,e,d,R);return f.toBytes(e)}function prepSig(t,a,n=T){if(["recovered","canonical"].some((e=>e in n)))throw new Error("sign() legacy options not supported");let{lowS:s,prehash:o,extraEntropy:c}=n;if(s==null)s=true;t=(0,i.ensureBytes)("msgHash",t);validateSigVerOpts(n);if(o)t=(0,i.ensureBytes)("prehashed msgHash",r(t));const u=E(t);const m=_normFnElement(f,a);const g=[int2octets(m),int2octets(u)];if(c!=null&&c!==false){const e=c===true?l(v.secret):c;g.push((0,i.ensureBytes)("extraEntropy",e))}const y=(0,i.concatBytes)(...g);const _=u;function k2sig(t){const r=w(t);if(!f.isValidNot0(r))return;const a=f.inv(r);const n=e.BASE.multiply(r).toAffine();const i=f.create(n.x);if(i===d)return;const o=f.create(a*f.create(_+i*m));if(o===d)return;let c=(n.x===i?0:2)|Number(n.y&p);let l=o;if(s&&isBiggerThanHalfOrder(o)){l=normalizeS(o);c^=1}return new Signature(i,l,c)}return{seed:y,k2sig:k2sig}}const T={lowS:s.lowS,prehash:false};const O={lowS:s.lowS,prehash:false};function sign(e,t,a=T){const{seed:n,k2sig:s}=prepSig(e,t,a);const o=(0,i.createHmacDrbg)(r.outputLen,f.BYTES,u);return o(n,s)}e.BASE.precompute(8);function verify(a,n,s,o=O){const d=a;n=(0,i.ensureBytes)("msgHash",n);s=(0,i.ensureBytes)("publicKey",s);validateSigVerOpts(o);const{lowS:p,prehash:c,format:l}=o;if("strict"in o)throw new Error("options.strict was renamed to lowS");let u=undefined;let m;if(l===undefined){const e=typeof d==="string"||(0,i.isBytes)(d);const r=!e&&d!==null&&typeof d==="object"&&typeof d.r==="bigint"&&typeof d.s==="bigint";if(!e&&!r)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");if(r){u=new Signature(d.r,d.s)}else if(e){try{u=Signature.fromDER(d)}catch(e){if(!(e instanceof t.DER.Err))throw e}if(!u){try{u=Signature.fromCompact(d)}catch(e){return false}}}}else{if(l==="compact"||l==="der"){if(typeof d!=="string"&&!(0,i.isBytes)(d))throw new Error('"der" / "compact" format expects Uint8Array signature');u=Signature.fromBytes((0,i.ensureBytes)("sig",d),l)}else if(l==="js"){if(!(d instanceof Signature))throw new Error('"js" format expects Signature instance');u=d}else{throw new Error('format must be "compact", "der" or "js"')}}if(!u)return false;try{m=e.fromHex(s);if(p&&u.hasHighS())return false;if(c)n=r(n);const{r:t,s:a}=u;const i=E(n);const o=f.inv(a);const d=f.create(i*o);const l=f.create(t*o);const g=e.BASE.multiplyUnsafe(d).add(m.multiplyUnsafe(l));if(g.is0())return false;const y=f.create(g.x);return y===t}catch(e){return false}}function keygen(e){const t=b.randomSecretKey(e);return{secretKey:t,publicKey:getPublicKey(t)}}return Object.freeze({keygen:keygen,getPublicKey:getPublicKey,sign:sign,verify:verify,getSharedSecret:getSharedSecret,utils:b,Point:e,Signature:Signature,info:{type:"weierstrass",lengths:v,publicKeyHasPrefix:true}})}function _weierstrass_legacy_opts_to_new(e){const t={a:e.a,b:e.b,p:e.Fp.ORDER,n:e.n,h:e.h,Gx:e.Gx,Gy:e.Gy};const r=e.Fp;let a=e.allowedPrivateKeyLengths?Array.from(new Set(e.allowedPrivateKeyLengths.map((e=>Math.ceil(e/2))))):undefined;const n=(0,o.Field)(t.n,{BITS:e.nBitLength,allowedLengths:a,modOnDecode:e.wrapPrivateKey});const i={Fp:r,Fn:n,allowInfinityPoint:e.allowInfinityPoint,endo:e.endo,isTorsionFree:e.isTorsionFree,clearCofactor:e.clearCofactor,fromBytes:e.fromBytes,toBytes:e.toBytes};return{CURVE:t,curveOpts:i}}function _ecdsa_legacy_opts_to_new(e){const{CURVE:t,curveOpts:r}=_weierstrass_legacy_opts_to_new(e);const a={hmac:e.hmac,randomBytes:e.randomBytes,lowS:e.lowS,bits2int:e.bits2int,bits2int_modN:e.bits2int_modN};return{CURVE:t,curveOpts:r,hash:e.hash,ecdsaOpts:a}}function _weierstrass_new_output_to_legacy(e,t){const{Fp:r,Fn:a}=t;function isWithinCurveOrder(e){return(0,i.inRange)(e,p,a.ORDER)}const n=_legacyHelperEquat(r,e.a,e.b);return Object.assign({},{CURVE:e,Point:t,ProjectivePoint:t,normPrivateKeyToScalar:e=>_normFnElement(a,e),weierstrassEquation:n,isWithinCurveOrder:isWithinCurveOrder})}function _ecdsa_new_output_to_legacy(e,t){return Object.assign({},t,{ProjectivePoint:t.Point,CURVE:e})}function weierstrass(e){const{CURVE:t,curveOpts:r,hash:a,ecdsaOpts:n}=_ecdsa_legacy_opts_to_new(e);const i=weierstrassN(t,r);const s=ecdsa(i,a,n);return _ecdsa_new_output_to_legacy(e,s)}},6153:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ED25519_TORSION_SUBGROUP=t.hash_to_ristretto255=t.hashToRistretto255=t.encodeToCurve=t.hashToCurve=t.ristretto255_hasher=t.ristretto255=t.RistrettoPoint=t.ed25519_hasher=t.edwardsToMontgomery=t.x25519=t.ed25519ph=t.ed25519ctx=t.ed25519=void 0;t.edwardsToMontgomeryPub=edwardsToMontgomeryPub;t.edwardsToMontgomeryPriv=edwardsToMontgomeryPriv;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(4121);const n=r(6164);const i=r(4092);const s=r(7255);const o=r(3823);const d=r(4161);const p=r(280);const c=r(1145);const l=BigInt(0),u=BigInt(1),m=BigInt(2),f=BigInt(3);const g=BigInt(5),y=BigInt(8);const _={p:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:y,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")};function ed25519_pow_2_252_3(e){const t=BigInt(10),r=BigInt(20),a=BigInt(40),n=BigInt(80);const i=_.p;const s=e*e%i;const o=s*e%i;const p=(0,d.pow2)(o,m,i)*o%i;const c=(0,d.pow2)(p,u,i)*e%i;const l=(0,d.pow2)(c,g,i)*c%i;const f=(0,d.pow2)(l,t,i)*l%i;const y=(0,d.pow2)(f,r,i)*f%i;const v=(0,d.pow2)(y,a,i)*y%i;const b=(0,d.pow2)(v,n,i)*v%i;const w=(0,d.pow2)(b,n,i)*v%i;const E=(0,d.pow2)(w,t,i)*l%i;const R=(0,d.pow2)(E,m,i)*e%i;return{pow_p_5_8:R,b2:o}}function adjustScalarBytes(e){e[0]&=248;e[31]&=127;e[31]|=64;return e}const v=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");function uvRatio(e,t){const r=_.p;const a=(0,d.mod)(t*t*t,r);const n=(0,d.mod)(a*a*t,r);const i=ed25519_pow_2_252_3(e*n).pow_p_5_8;let s=(0,d.mod)(e*a*i,r);const o=(0,d.mod)(t*s*s,r);const p=s;const c=(0,d.mod)(s*v,r);const l=o===e;const u=o===(0,d.mod)(-e,r);const m=o===(0,d.mod)(-e*v,r);if(l)s=p;if(u||m)s=c;if((0,d.isNegativeLE)(s,r))s=(0,d.mod)(-s,r);return{isValid:l||u,value:s}}const b=(()=>(0,d.Field)(_.p,{isLE:true}))();const w=(()=>(0,d.Field)(_.n,{isLE:true}))();const E=(()=>({..._,Fp:b,hash:a.sha512,adjustScalarBytes:adjustScalarBytes,uvRatio:uvRatio}))();t.ed25519=(()=>(0,s.twistedEdwards)(E))();function ed25519_domain(e,t,r){if(t.length>255)throw new Error("Context is too big");return(0,n.concatBytes)((0,n.utf8ToBytes)("SigEd25519 no Ed25519 collisions"),new Uint8Array([r?1:0,t.length]),t,e)}t.ed25519ctx=(()=>(0,s.twistedEdwards)({...E,domain:ed25519_domain}))();t.ed25519ph=(()=>(0,s.twistedEdwards)(Object.assign({},E,{domain:ed25519_domain,prehash:a.sha512})))();t.x25519=(()=>{const e=_.p;return(0,p.montgomery)({P:e,type:"x25519",powPminus2:t=>{const{pow_p_5_8:r,b2:a}=ed25519_pow_2_252_3(t);return(0,d.mod)((0,d.pow2)(r,f,e)*a,e)},adjustScalarBytes:adjustScalarBytes})})();function edwardsToMontgomeryPub(e){return t.ed25519.utils.toMontgomery((0,c.ensureBytes)("pub",e))}t.edwardsToMontgomery=edwardsToMontgomeryPub;function edwardsToMontgomeryPriv(e){return t.ed25519.utils.toMontgomeryPriv((0,c.ensureBytes)("pub",e))}const R=(()=>(b.ORDER+f)/y)();const T=(()=>b.pow(m,R))();const O=(()=>b.sqrt(b.neg(b.ONE)))();function map_to_curve_elligator2_curve25519(e){const t=(b.ORDER-g)/y;const r=BigInt(486662);let a=b.sqr(e);a=b.mul(a,m);let n=b.add(a,b.ONE);let i=b.neg(r);let s=b.sqr(n);let o=b.mul(s,n);let d=b.mul(a,r);d=b.mul(d,i);d=b.add(d,s);d=b.mul(d,i);let p=b.sqr(o);s=b.sqr(p);p=b.mul(p,o);p=b.mul(p,d);s=b.mul(s,p);let c=b.pow(s,t);c=b.mul(c,p);let l=b.mul(c,O);s=b.sqr(c);s=b.mul(s,o);let f=b.eql(s,d);let _=b.cmov(l,c,f);let v=b.mul(i,a);let w=b.mul(c,e);w=b.mul(w,T);let E=b.mul(w,O);let R=b.mul(d,a);s=b.sqr(w);s=b.mul(s,o);let N=b.eql(s,R);let C=b.cmov(E,w,N);s=b.sqr(_);s=b.mul(s,o);let k=b.eql(s,d);let I=b.cmov(v,i,k);let x=b.cmov(C,_,k);let B=b.isOdd(x);x=b.cmov(x,b.neg(x),k!==B);return{xMn:I,xMd:n,yMn:x,yMd:u}}const N=(()=>(0,d.FpSqrtEven)(b,b.neg(BigInt(486664))))();function map_to_curve_elligator2_edwards25519(e){const{xMn:t,xMd:r,yMn:a,yMd:n}=map_to_curve_elligator2_curve25519(e);let i=b.mul(t,n);i=b.mul(i,N);let s=b.mul(r,a);let o=b.sub(t,r);let p=b.add(t,r);let c=b.mul(s,p);let l=b.eql(c,b.ZERO);i=b.cmov(i,b.ZERO,l);s=b.cmov(s,b.ONE,l);o=b.cmov(o,b.ONE,l);p=b.cmov(p,b.ONE,l);const[u,m]=(0,d.FpInvertBatch)(b,[s,p],true);return{x:b.mul(i,u),y:b.mul(o,m)}}t.ed25519_hasher=(()=>(0,o.createHasher)(t.ed25519.Point,(e=>map_to_curve_elligator2_edwards25519(e[0])),{DST:"edwards25519_XMD:SHA-512_ELL2_RO_",encodeDST:"edwards25519_XMD:SHA-512_ELL2_NU_",p:b.ORDER,m:1,k:128,expand:"xmd",hash:a.sha512}))();const C=v;const k=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235");const I=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578");const x=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838");const B=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");const invertSqrt=e=>uvRatio(u,e);const P=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");const bytes255ToNumberLE=e=>t.ed25519.CURVE.Fp.create((0,c.bytesToNumberLE)(e)&P);function calcElligatorRistrettoMap(e){const{d:r}=t.ed25519.CURVE;const a=t.ed25519.CURVE.Fp.ORDER;const n=t.ed25519.CURVE.Fp.create;const i=n(C*e*e);const s=n((i+u)*x);let o=BigInt(-1);const p=n((o-r*i)*n(i+r));let{isValid:c,value:l}=uvRatio(s,p);let m=n(l*e);if(!(0,d.isNegativeLE)(m,a))m=n(-m);if(!c)l=m;if(!c)o=i;const f=n(o*(i-u)*B-p);const g=l*l;const y=n((l+l)*p);const _=n(f*k);const v=n(u-g);const b=n(u+g);return new t.ed25519.Point(n(y*b),n(v*_),n(_*b),n(y*v))}function ristretto255_map(e){(0,n.abytes)(e,64);const t=bytes255ToNumberLE(e.subarray(0,32));const r=calcElligatorRistrettoMap(t);const a=bytes255ToNumberLE(e.subarray(32,64));const i=calcElligatorRistrettoMap(a);return new _RistrettoPoint(r.add(i))}class _RistrettoPoint extends s.PrimeEdwardsPoint{constructor(e){super(e)}static fromAffine(e){return new _RistrettoPoint(t.ed25519.Point.fromAffine(e))}assertSame(e){if(!(e instanceof _RistrettoPoint))throw new Error("RistrettoPoint expected")}init(e){return new _RistrettoPoint(e)}static hashToCurve(e){return ristretto255_map((0,c.ensureBytes)("ristrettoHash",e,64))}static fromBytes(e){(0,n.abytes)(e,32);const{a:r,d:a}=t.ed25519.CURVE;const i=b.ORDER;const s=b.create;const o=bytes255ToNumberLE(e);if(!(0,c.equalBytes)((0,c.numberToBytesLE)(o,32),e)||(0,d.isNegativeLE)(o,i))throw new Error("invalid ristretto255 encoding 1");const p=s(o*o);const m=s(u+r*p);const f=s(u-r*p);const g=s(m*m);const y=s(f*f);const _=s(r*a*g-y);const{isValid:v,value:w}=invertSqrt(s(_*y));const E=s(w*f);const R=s(w*E*_);let T=s((o+o)*E);if((0,d.isNegativeLE)(T,i))T=s(-T);const O=s(m*R);const N=s(T*O);if(!v||(0,d.isNegativeLE)(N,i)||O===l)throw new Error("invalid ristretto255 encoding 2");return new _RistrettoPoint(new t.ed25519.Point(T,O,u,N))}static fromHex(e){return _RistrettoPoint.fromBytes((0,c.ensureBytes)("ristrettoHex",e,32))}static msm(e,r){return(0,i.pippenger)(_RistrettoPoint,t.ed25519.Point.Fn,e,r)}toBytes(){let{X:e,Y:t,Z:r,T:a}=this.ep;const n=b.ORDER;const i=b.create;const s=i(i(r+t)*i(r-t));const o=i(e*t);const p=i(o*o);const{value:l}=invertSqrt(i(s*p));const u=i(l*s);const m=i(l*o);const f=i(u*m*a);let g;if((0,d.isNegativeLE)(a*f,n)){let r=i(t*C);let a=i(e*C);e=r;t=a;g=i(u*I)}else{g=m}if((0,d.isNegativeLE)(e*f,n))t=i(-t);let y=i((r-t)*g);if((0,d.isNegativeLE)(y,n))y=i(-y);return(0,c.numberToBytesLE)(y,32)}equals(e){this.assertSame(e);const{X:t,Y:r}=this.ep;const{X:a,Y:n}=e.ep;const i=b.create;const s=i(t*n)===i(r*a);const o=i(r*n)===i(t*a);return s||o}is0(){return this.equals(_RistrettoPoint.ZERO)}}_RistrettoPoint.BASE=(()=>new _RistrettoPoint(t.ed25519.Point.BASE))();_RistrettoPoint.ZERO=(()=>new _RistrettoPoint(t.ed25519.Point.ZERO))();_RistrettoPoint.Fp=b;_RistrettoPoint.Fn=w;t.RistrettoPoint=_RistrettoPoint;t.ristretto255={Point:_RistrettoPoint};t.ristretto255_hasher={hashToCurve(e,t){const r=t?.DST||"ristretto255_XMD:SHA-512_R255MAP_RO_";return ristretto255_map((0,o.expand_message_xmd)(e,r,64,a.sha512))},hashToScalar(e,t={DST:o._DST_scalar}){return w.create((0,c.bytesToNumberLE)((0,o.expand_message_xmd)(e,t.DST,64,a.sha512)))}};t.hashToCurve=(()=>t.ed25519_hasher.hashToCurve)();t.encodeToCurve=(()=>t.ed25519_hasher.encodeToCurve)();t.hashToRistretto255=(()=>t.ristretto255_hasher.hashToCurve)();t.hash_to_ristretto255=(()=>t.ristretto255_hasher.hashToCurve)();t.ED25519_TORSION_SUBGROUP=["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"]},76:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.encodeToCurve=t.hashToCurve=t.secp256k1_hasher=t.schnorr=t.secp256k1=void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(4121);const n=r(6164);const i=r(4064);const s=r(3823);const o=r(4161);const d=r(6635);const p=r(1145);const c={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:BigInt(1),a:BigInt(0),b:BigInt(7),Gx:BigInt("0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),Gy:BigInt("0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8")};const l={beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),basises:[[BigInt("0x3086d221a7d46bcde86c90e49284eb15"),-BigInt("0xe4437ed6010e88286f547fa90abfe4c3")],[BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),BigInt("0x3086d221a7d46bcde86c90e49284eb15")]]};const u=BigInt(0);const m=BigInt(1);const f=BigInt(2);function sqrtMod(e){const t=c.p;const r=BigInt(3),a=BigInt(6),n=BigInt(11),i=BigInt(22);const s=BigInt(23),d=BigInt(44),p=BigInt(88);const l=e*e*e%t;const u=l*l*e%t;const m=(0,o.pow2)(u,r,t)*u%t;const y=(0,o.pow2)(m,r,t)*u%t;const _=(0,o.pow2)(y,f,t)*l%t;const v=(0,o.pow2)(_,n,t)*_%t;const b=(0,o.pow2)(v,i,t)*v%t;const w=(0,o.pow2)(b,d,t)*b%t;const E=(0,o.pow2)(w,p,t)*w%t;const R=(0,o.pow2)(E,d,t)*b%t;const T=(0,o.pow2)(R,r,t)*u%t;const O=(0,o.pow2)(T,s,t)*v%t;const N=(0,o.pow2)(O,a,t)*l%t;const C=(0,o.pow2)(N,f,t);if(!g.eql(g.sqr(C),e))throw new Error("Cannot find square root");return C}const g=(0,o.Field)(c.p,undefined,undefined,{sqrt:sqrtMod});t.secp256k1=(0,i.createCurve)({...c,Fp:g,lowS:true,endo:l},a.sha256);const y={};function taggedHash(e,...t){let r=y[e];if(r===undefined){const t=(0,a.sha256)(Uint8Array.from(e,(e=>e.charCodeAt(0))));r=(0,p.concatBytes)(t,t);y[e]=r}return(0,a.sha256)((0,p.concatBytes)(r,...t))}const pointToBytes=e=>e.toBytes(true).slice(1);const numTo32b=e=>(0,p.numberToBytesBE)(e,32);const modP=e=>(0,o.mod)(e,c.p);const modN=e=>(0,o.mod)(e,c.n);const _=(()=>t.secp256k1.Point)();const hasEven=e=>e%f===u;function schnorrGetExtPubKey(e){let t=(0,d._normFnElement)(_.Fn,e);let r=_.BASE.multiply(t);const a=hasEven(r.y)?t:modN(-t);return{scalar:a,bytes:pointToBytes(r)}}function lift_x(e){(0,p.aInRange)("x",e,m,c.p);const t=modP(e*e);const r=modP(t*e+BigInt(7));let a=sqrtMod(r);if(!hasEven(a))a=modP(-a);const n=_.fromAffine({x:e,y:a});n.assertValidity();return n}const v=p.bytesToNumberBE;function challenge(...e){return modN(v(taggedHash("BIP0340/challenge",...e)))}function schnorrGetPublicKey(e){return schnorrGetExtPubKey(e).bytes}function schnorrSign(e,t,r=(0,n.randomBytes)(32)){const a=(0,p.ensureBytes)("message",e);const{bytes:i,scalar:s}=schnorrGetExtPubKey(t);const o=(0,p.ensureBytes)("auxRand",r,32);const d=numTo32b(s^v(taggedHash("BIP0340/aux",o)));const c=taggedHash("BIP0340/nonce",d,i,a);const l=modN(v(c));if(l===u)throw new Error("sign failed: k is zero");const{bytes:m,scalar:f}=schnorrGetExtPubKey(l);const g=challenge(m,i,a);const y=new Uint8Array(64);y.set(m,0);y.set(numTo32b(modN(f+g*s)),32);if(!schnorrVerify(y,a,i))throw new Error("sign: Invalid signature produced");return y}function schnorrVerify(e,t,r){const a=(0,p.ensureBytes)("signature",e,64);const n=(0,p.ensureBytes)("message",t);const i=(0,p.ensureBytes)("publicKey",r,32);try{const e=lift_x(v(i));const t=v(a.subarray(0,32));if(!(0,p.inRange)(t,m,c.p))return false;const r=v(a.subarray(32,64));if(!(0,p.inRange)(r,m,c.n))return false;const s=challenge(numTo32b(t),pointToBytes(e),n);const o=_.BASE.multiplyUnsafe(r).add(e.multiplyUnsafe(modN(-s)));const{x:d,y:l}=o.toAffine();if(o.is0()||!hasEven(l)||d!==t)return false;return true}catch(e){return false}}t.schnorr=(()=>{const e=32;const r=48;const randomSecretKey=(e=(0,n.randomBytes)(r))=>(0,o.mapHashToField)(e,c.n);t.secp256k1.utils.randomSecretKey;function keygen(e){const t=randomSecretKey(e);return{secretKey:t,publicKey:schnorrGetPublicKey(t)}}return{keygen:keygen,getPublicKey:schnorrGetPublicKey,sign:schnorrSign,verify:schnorrVerify,Point:_,utils:{randomSecretKey:randomSecretKey,randomPrivateKey:randomSecretKey,taggedHash:taggedHash,lift_x:lift_x,pointToBytes:pointToBytes,numberToBytesBE:p.numberToBytesBE,bytesToNumberBE:p.bytesToNumberBE,mod:o.mod},info:{type:"weierstrass",publicKeyHasPrefix:false,lengths:{secret:e,public:e,signature:e*2,seed:r}}}})();const b=(()=>(0,s.isogenyMap)(g,[["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7","0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581","0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262","0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b","0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14","0x0000000000000000000000000000000000000000000000000000000000000001"],["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c","0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3","0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931","0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b","0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573","0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f","0x0000000000000000000000000000000000000000000000000000000000000001"]].map((e=>e.map((e=>BigInt(e)))))))();const w=(()=>(0,d.mapToCurveSimpleSWU)(g,{A:BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),B:BigInt("1771"),Z:g.create(BigInt("-11"))}))();t.secp256k1_hasher=(()=>(0,s.createHasher)(t.secp256k1.Point,(e=>{const{x:t,y:r}=w(g.create(e[0]));return b(t,r)}),{DST:"secp256k1_XMD:SHA-256_SSWU_RO_",encodeDST:"secp256k1_XMD:SHA-256_SSWU_NU_",p:g.ORDER,m:1,k:128,expand:"xmd",hash:a.sha256}))();t.hashToCurve=(()=>t.secp256k1_hasher.hashToCurve)();t.encodeToCurve=(()=>t.secp256k1_hasher.encodeToCurve)()},1145:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.notImplemented=t.bitMask=t.utf8ToBytes=t.randomBytes=t.isBytes=t.hexToBytes=t.concatBytes=t.bytesToUtf8=t.bytesToHex=t.anumber=t.abytes=void 0;t.abool=abool;t.numberToHexUnpadded=numberToHexUnpadded;t.hexToNumber=hexToNumber;t.bytesToNumberBE=bytesToNumberBE;t.bytesToNumberLE=bytesToNumberLE;t.numberToBytesBE=numberToBytesBE;t.numberToBytesLE=numberToBytesLE;t.numberToVarBytesBE=numberToVarBytesBE;t.ensureBytes=ensureBytes;t.equalBytes=equalBytes;t.inRange=inRange;t.aInRange=aInRange;t.bitLen=bitLen;t.bitGet=bitGet;t.bitSet=bitSet;t.createHmacDrbg=createHmacDrbg;t.validateObject=validateObject;t.isHash=isHash;t._validateObject=_validateObject;t.memoized=memoized;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=r(6164);var n=r(6164);Object.defineProperty(t,"abytes",{enumerable:true,get:function(){return n.abytes}});Object.defineProperty(t,"anumber",{enumerable:true,get:function(){return n.anumber}});Object.defineProperty(t,"bytesToHex",{enumerable:true,get:function(){return n.bytesToHex}});Object.defineProperty(t,"bytesToUtf8",{enumerable:true,get:function(){return n.bytesToUtf8}});Object.defineProperty(t,"concatBytes",{enumerable:true,get:function(){return n.concatBytes}});Object.defineProperty(t,"hexToBytes",{enumerable:true,get:function(){return n.hexToBytes}});Object.defineProperty(t,"isBytes",{enumerable:true,get:function(){return n.isBytes}});Object.defineProperty(t,"randomBytes",{enumerable:true,get:function(){return n.randomBytes}});Object.defineProperty(t,"utf8ToBytes",{enumerable:true,get:function(){return n.utf8ToBytes}});const i=BigInt(0);const s=BigInt(1);function abool(e,t){if(typeof t!=="boolean")throw new Error(e+" boolean expected, got "+t)}function numberToHexUnpadded(e){const t=e.toString(16);return t.length&1?"0"+t:t}function hexToNumber(e){if(typeof e!=="string")throw new Error("hex string expected, got "+typeof e);return e===""?i:BigInt("0x"+e)}function bytesToNumberBE(e){return hexToNumber((0,a.bytesToHex)(e))}function bytesToNumberLE(e){(0,a.abytes)(e);return hexToNumber((0,a.bytesToHex)(Uint8Array.from(e).reverse()))}function numberToBytesBE(e,t){return(0,a.hexToBytes)(e.toString(16).padStart(t*2,"0"))}function numberToBytesLE(e,t){return numberToBytesBE(e,t).reverse()}function numberToVarBytesBE(e){return(0,a.hexToBytes)(numberToHexUnpadded(e))}function ensureBytes(e,t,r){let n;if(typeof t==="string"){try{n=(0,a.hexToBytes)(t)}catch(t){throw new Error(e+" must be hex string or Uint8Array, cause: "+t)}}else if((0,a.isBytes)(t)){n=Uint8Array.from(t)}else{throw new Error(e+" must be hex string or Uint8Array")}const i=n.length;if(typeof r==="number"&&i!==r)throw new Error(e+" of length "+r+" expected, got "+i);return n}function equalBytes(e,t){if(e.length!==t.length)return false;let r=0;for(let a=0;a<e.length;a++)r|=e[a]^t[a];return r===0}const isPosBig=e=>typeof e==="bigint"&&i<=e;function inRange(e,t,r){return isPosBig(e)&&isPosBig(t)&&isPosBig(r)&&t<=e&&e<r}function aInRange(e,t,r,a){if(!inRange(t,r,a))throw new Error("expected valid "+e+": "+r+" <= n < "+a+", got "+t)}function bitLen(e){let t;for(t=0;e>i;e>>=s,t+=1);return t}function bitGet(e,t){return e>>BigInt(t)&s}function bitSet(e,t,r){return e|(r?s:i)<<BigInt(t)}const bitMask=e=>(s<<BigInt(e))-s;t.bitMask=bitMask;function createHmacDrbg(e,t,r){if(typeof e!=="number"||e<2)throw new Error("hashLen must be a number");if(typeof t!=="number"||t<2)throw new Error("qByteLen must be a number");if(typeof r!=="function")throw new Error("hmacFn must be a function");const u8n=e=>new Uint8Array(e);const u8of=e=>Uint8Array.of(e);let n=u8n(e);let i=u8n(e);let s=0;const reset=()=>{n.fill(1);i.fill(0);s=0};const h=(...e)=>r(i,n,...e);const reseed=(e=u8n(0))=>{i=h(u8of(0),e);n=h();if(e.length===0)return;i=h(u8of(1),e);n=h()};const gen=()=>{if(s++>=1e3)throw new Error("drbg: tried 1000 values");let e=0;const r=[];while(e<t){n=h();const t=n.slice();r.push(t);e+=n.length}return(0,a.concatBytes)(...r)};const genUntil=(e,t)=>{reset();reseed(e);let r=undefined;while(!(r=t(gen())))reseed();reset();return r};return genUntil}const o={bigint:e=>typeof e==="bigint",function:e=>typeof e==="function",boolean:e=>typeof e==="boolean",string:e=>typeof e==="string",stringOrUint8Array:e=>typeof e==="string"||(0,a.isBytes)(e),isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>typeof e==="function"&&Number.isSafeInteger(e.outputLen)};function validateObject(e,t,r={}){const checkField=(t,r,a)=>{const n=o[r];if(typeof n!=="function")throw new Error("invalid validator function");const i=e[t];if(a&&i===undefined)return;if(!n(i,e)){throw new Error("param "+String(t)+" is invalid. Expected "+r+", got "+i)}};for(const[e,r]of Object.entries(t))checkField(e,r,false);for(const[e,t]of Object.entries(r))checkField(e,t,true);return e}function isHash(e){return typeof e==="function"&&Number.isSafeInteger(e.outputLen)}function _validateObject(e,t,r={}){if(!e||typeof e!=="object")throw new Error("expected valid options object");function checkField(t,r,a){const n=e[t];if(a&&n===undefined)return;const i=typeof n;if(i!==r||n===null)throw new Error(`param "${t}" is invalid: expected ${r}, got ${i}`)}Object.entries(t).forEach((([e,t])=>checkField(e,t,false)));Object.entries(r).forEach((([e,t])=>checkField(e,t,true)))}const notImplemented=()=>{throw new Error("not implemented")};t.notImplemented=notImplemented;function memoized(e){const t=new WeakMap;return(r,...a)=>{const n=t.get(r);if(n!==undefined)return n;const i=e(r,...a);t.set(r,i);return i}}},2481:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.SHA512_IV=t.SHA384_IV=t.SHA224_IV=t.SHA256_IV=t.HashMD=void 0;t.setBigUint64=setBigUint64;t.Chi=Chi;t.Maj=Maj;const a=r(6164);function setBigUint64(e,t,r,a){if(typeof e.setBigUint64==="function")return e.setBigUint64(t,r,a);const n=BigInt(32);const i=BigInt(4294967295);const s=Number(r>>n&i);const o=Number(r&i);const d=a?4:0;const p=a?0:4;e.setUint32(t+d,s,a);e.setUint32(t+p,o,a)}function Chi(e,t,r){return e&t^~e&r}function Maj(e,t,r){return e&t^e&r^t&r}class HashMD extends a.Hash{constructor(e,t,r,n){super();this.finished=false;this.length=0;this.pos=0;this.destroyed=false;this.blockLen=e;this.outputLen=t;this.padOffset=r;this.isLE=n;this.buffer=new Uint8Array(e);this.view=(0,a.createView)(this.buffer)}update(e){(0,a.aexists)(this);e=(0,a.toBytes)(e);(0,a.abytes)(e);const{view:t,buffer:r,blockLen:n}=this;const i=e.length;for(let s=0;s<i;){const o=Math.min(n-this.pos,i-s);if(o===n){const t=(0,a.createView)(e);for(;n<=i-s;s+=n)this.process(t,s);continue}r.set(e.subarray(s,s+o),this.pos);this.pos+=o;s+=o;if(this.pos===n){this.process(t,0);this.pos=0}}this.length+=e.length;this.roundClean();return this}digestInto(e){(0,a.aexists)(this);(0,a.aoutput)(e,this);this.finished=true;const{buffer:t,view:r,blockLen:n,isLE:i}=this;let{pos:s}=this;t[s++]=128;(0,a.clean)(this.buffer.subarray(s));if(this.padOffset>n-s){this.process(r,0);s=0}for(let e=s;e<n;e++)t[e]=0;setBigUint64(r,n-8,BigInt(this.length*8),i);this.process(r,0);const o=(0,a.createView)(e);const d=this.outputLen;if(d%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const p=d/4;const c=this.get();if(p>c.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<p;e++)o.setUint32(4*e,c[e],i)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);this.destroy();return r}_cloneInto(e){e||(e=new this.constructor);e.set(...this.get());const{blockLen:t,buffer:r,length:a,finished:n,destroyed:i,pos:s}=this;e.destroyed=i;e.finished=n;e.length=a;e.pos=s;if(a%t)e.buffer.set(r);return e}clone(){return this._cloneInto()}}t.HashMD=HashMD;t.SHA256_IV=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]);t.SHA224_IV=Uint32Array.from([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]);t.SHA384_IV=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]);t.SHA512_IV=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209])},7227:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.toBig=t.shrSL=t.shrSH=t.rotrSL=t.rotrSH=t.rotrBL=t.rotrBH=t.rotr32L=t.rotr32H=t.rotlSL=t.rotlSH=t.rotlBL=t.rotlBH=t.add5L=t.add5H=t.add4L=t.add4H=t.add3L=t.add3H=void 0;t.add=add;t.fromBig=fromBig;t.split=split;const r=BigInt(2**32-1);const a=BigInt(32);function fromBig(e,t=false){if(t)return{h:Number(e&r),l:Number(e>>a&r)};return{h:Number(e>>a&r)|0,l:Number(e&r)|0}}function split(e,t=false){const r=e.length;let a=new Uint32Array(r);let n=new Uint32Array(r);for(let i=0;i<r;i++){const{h:r,l:s}=fromBig(e[i],t);[a[i],n[i]]=[r,s]}return[a,n]}const toBig=(e,t)=>BigInt(e>>>0)<<a|BigInt(t>>>0);t.toBig=toBig;const shrSH=(e,t,r)=>e>>>r;t.shrSH=shrSH;const shrSL=(e,t,r)=>e<<32-r|t>>>r;t.shrSL=shrSL;const rotrSH=(e,t,r)=>e>>>r|t<<32-r;t.rotrSH=rotrSH;const rotrSL=(e,t,r)=>e<<32-r|t>>>r;t.rotrSL=rotrSL;const rotrBH=(e,t,r)=>e<<64-r|t>>>r-32;t.rotrBH=rotrBH;const rotrBL=(e,t,r)=>e>>>r-32|t<<64-r;t.rotrBL=rotrBL;const rotr32H=(e,t)=>t;t.rotr32H=rotr32H;const rotr32L=(e,t)=>e;t.rotr32L=rotr32L;const rotlSH=(e,t,r)=>e<<r|t>>>32-r;t.rotlSH=rotlSH;const rotlSL=(e,t,r)=>t<<r|e>>>32-r;t.rotlSL=rotlSL;const rotlBH=(e,t,r)=>t<<r-32|e>>>64-r;t.rotlBH=rotlBH;const rotlBL=(e,t,r)=>e<<r-32|t>>>64-r;t.rotlBL=rotlBL;function add(e,t,r,a){const n=(t>>>0)+(a>>>0);return{h:e+r+(n/2**32|0)|0,l:n|0}}const add3L=(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0);t.add3L=add3L;const add3H=(e,t,r,a)=>t+r+a+(e/2**32|0)|0;t.add3H=add3H;const add4L=(e,t,r,a)=>(e>>>0)+(t>>>0)+(r>>>0)+(a>>>0);t.add4L=add4L;const add4H=(e,t,r,a,n)=>t+r+a+n+(e/2**32|0)|0;t.add4H=add4H;const add5L=(e,t,r,a,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(a>>>0)+(n>>>0);t.add5L=add5L;const add5H=(e,t,r,a,n,i)=>t+r+a+n+i+(e/2**32|0)|0;t.add5H=add5H;const n={fromBig:fromBig,split:split,toBig:toBig,shrSH:shrSH,shrSL:shrSL,rotrSH:rotrSH,rotrSL:rotrSL,rotrBH:rotrBH,rotrBL:rotrBL,rotr32H:rotr32H,rotr32L:rotr32L,rotlSH:rotlSH,rotlSL:rotlSL,rotlBH:rotlBH,rotlBL:rotlBL,add:add,add3L:add3L,add3H:add3H,add4L:add4L,add4H:add4H,add5H:add5H,add5L:add5L};t["default"]=n},9604:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.crypto=void 0;const a=r(7598);t.crypto=a&&typeof a==="object"&&"webcrypto"in a?a.webcrypto:a&&typeof a==="object"&&"randomBytes"in a?a:undefined},1914:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.hmac=t.HMAC=void 0;const a=r(6164);class HMAC extends a.Hash{constructor(e,t){super();this.finished=false;this.destroyed=false;(0,a.ahash)(e);const r=(0,a.toBytes)(t);this.iHash=e.create();if(typeof this.iHash.update!=="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const n=this.blockLen;const i=new Uint8Array(n);i.set(r.length>n?e.create().update(r).digest():r);for(let e=0;e<i.length;e++)i[e]^=54;this.iHash.update(i);this.oHash=e.create();for(let e=0;e<i.length;e++)i[e]^=54^92;this.oHash.update(i);(0,a.clean)(i)}update(e){(0,a.aexists)(this);this.iHash.update(e);return this}digestInto(e){(0,a.aexists)(this);(0,a.abytes)(e,this.outputLen);this.finished=true;this.iHash.digestInto(e);this.oHash.update(e);this.oHash.digestInto(e);this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);this.digestInto(e);return e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:a,destroyed:n,blockLen:i,outputLen:s}=this;e=e;e.finished=a;e.destroyed=n;e.blockLen=i;e.outputLen=s;e.oHash=t._cloneInto(e.oHash);e.iHash=r._cloneInto(e.iHash);return e}clone(){return this._cloneInto()}destroy(){this.destroyed=true;this.oHash.destroy();this.iHash.destroy()}}t.HMAC=HMAC;const hmac=(e,t,r)=>new HMAC(e,t).update(r).digest();t.hmac=hmac;t.hmac.create=(e,t)=>new HMAC(e,t)},4121:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.sha512_224=t.sha512_256=t.sha384=t.sha512=t.sha224=t.sha256=t.SHA512_256=t.SHA512_224=t.SHA384=t.SHA512=t.SHA224=t.SHA256=void 0;const a=r(2481);const n=r(7227);const i=r(6164);const s=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);const o=new Uint32Array(64);class SHA256 extends a.HashMD{constructor(e=32){super(64,e,8,false);this.A=a.SHA256_IV[0]|0;this.B=a.SHA256_IV[1]|0;this.C=a.SHA256_IV[2]|0;this.D=a.SHA256_IV[3]|0;this.E=a.SHA256_IV[4]|0;this.F=a.SHA256_IV[5]|0;this.G=a.SHA256_IV[6]|0;this.H=a.SHA256_IV[7]|0}get(){const{A:e,B:t,C:r,D:a,E:n,F:i,G:s,H:o}=this;return[e,t,r,a,n,i,s,o]}set(e,t,r,a,n,i,s,o){this.A=e|0;this.B=t|0;this.C=r|0;this.D=a|0;this.E=n|0;this.F=i|0;this.G=s|0;this.H=o|0}process(e,t){for(let r=0;r<16;r++,t+=4)o[r]=e.getUint32(t,false);for(let e=16;e<64;e++){const t=o[e-15];const r=o[e-2];const a=(0,i.rotr)(t,7)^(0,i.rotr)(t,18)^t>>>3;const n=(0,i.rotr)(r,17)^(0,i.rotr)(r,19)^r>>>10;o[e]=n+o[e-7]+a+o[e-16]|0}let{A:r,B:n,C:d,D:p,E:c,F:l,G:u,H:m}=this;for(let e=0;e<64;e++){const t=(0,i.rotr)(c,6)^(0,i.rotr)(c,11)^(0,i.rotr)(c,25);const f=m+t+(0,a.Chi)(c,l,u)+s[e]+o[e]|0;const g=(0,i.rotr)(r,2)^(0,i.rotr)(r,13)^(0,i.rotr)(r,22);const y=g+(0,a.Maj)(r,n,d)|0;m=u;u=l;l=c;c=p+f|0;p=d;d=n;n=r;r=f+y|0}r=r+this.A|0;n=n+this.B|0;d=d+this.C|0;p=p+this.D|0;c=c+this.E|0;l=l+this.F|0;u=u+this.G|0;m=m+this.H|0;this.set(r,n,d,p,c,l,u,m)}roundClean(){(0,i.clean)(o)}destroy(){this.set(0,0,0,0,0,0,0,0);(0,i.clean)(this.buffer)}}t.SHA256=SHA256;class SHA224 extends SHA256{constructor(){super(28);this.A=a.SHA224_IV[0]|0;this.B=a.SHA224_IV[1]|0;this.C=a.SHA224_IV[2]|0;this.D=a.SHA224_IV[3]|0;this.E=a.SHA224_IV[4]|0;this.F=a.SHA224_IV[5]|0;this.G=a.SHA224_IV[6]|0;this.H=a.SHA224_IV[7]|0}}t.SHA224=SHA224;const d=(()=>n.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((e=>BigInt(e)))))();const p=(()=>d[0])();const c=(()=>d[1])();const l=new Uint32Array(80);const u=new Uint32Array(80);class SHA512 extends a.HashMD{constructor(e=64){super(128,e,16,false);this.Ah=a.SHA512_IV[0]|0;this.Al=a.SHA512_IV[1]|0;this.Bh=a.SHA512_IV[2]|0;this.Bl=a.SHA512_IV[3]|0;this.Ch=a.SHA512_IV[4]|0;this.Cl=a.SHA512_IV[5]|0;this.Dh=a.SHA512_IV[6]|0;this.Dl=a.SHA512_IV[7]|0;this.Eh=a.SHA512_IV[8]|0;this.El=a.SHA512_IV[9]|0;this.Fh=a.SHA512_IV[10]|0;this.Fl=a.SHA512_IV[11]|0;this.Gh=a.SHA512_IV[12]|0;this.Gl=a.SHA512_IV[13]|0;this.Hh=a.SHA512_IV[14]|0;this.Hl=a.SHA512_IV[15]|0}get(){const{Ah:e,Al:t,Bh:r,Bl:a,Ch:n,Cl:i,Dh:s,Dl:o,Eh:d,El:p,Fh:c,Fl:l,Gh:u,Gl:m,Hh:f,Hl:g}=this;return[e,t,r,a,n,i,s,o,d,p,c,l,u,m,f,g]}set(e,t,r,a,n,i,s,o,d,p,c,l,u,m,f,g){this.Ah=e|0;this.Al=t|0;this.Bh=r|0;this.Bl=a|0;this.Ch=n|0;this.Cl=i|0;this.Dh=s|0;this.Dl=o|0;this.Eh=d|0;this.El=p|0;this.Fh=c|0;this.Fl=l|0;this.Gh=u|0;this.Gl=m|0;this.Hh=f|0;this.Hl=g|0}process(e,t){for(let r=0;r<16;r++,t+=4){l[r]=e.getUint32(t);u[r]=e.getUint32(t+=4)}for(let e=16;e<80;e++){const t=l[e-15]|0;const r=u[e-15]|0;const a=n.rotrSH(t,r,1)^n.rotrSH(t,r,8)^n.shrSH(t,r,7);const i=n.rotrSL(t,r,1)^n.rotrSL(t,r,8)^n.shrSL(t,r,7);const s=l[e-2]|0;const o=u[e-2]|0;const d=n.rotrSH(s,o,19)^n.rotrBH(s,o,61)^n.shrSH(s,o,6);const p=n.rotrSL(s,o,19)^n.rotrBL(s,o,61)^n.shrSL(s,o,6);const c=n.add4L(i,p,u[e-7],u[e-16]);const m=n.add4H(c,a,d,l[e-7],l[e-16]);l[e]=m|0;u[e]=c|0}let{Ah:r,Al:a,Bh:i,Bl:s,Ch:o,Cl:d,Dh:m,Dl:f,Eh:g,El:y,Fh:_,Fl:v,Gh:b,Gl:w,Hh:E,Hl:R}=this;for(let e=0;e<80;e++){const t=n.rotrSH(g,y,14)^n.rotrSH(g,y,18)^n.rotrBH(g,y,41);const T=n.rotrSL(g,y,14)^n.rotrSL(g,y,18)^n.rotrBL(g,y,41);const O=g&_^~g&b;const N=y&v^~y&w;const C=n.add5L(R,T,N,c[e],u[e]);const k=n.add5H(C,E,t,O,p[e],l[e]);const I=C|0;const x=n.rotrSH(r,a,28)^n.rotrBH(r,a,34)^n.rotrBH(r,a,39);const B=n.rotrSL(r,a,28)^n.rotrBL(r,a,34)^n.rotrBL(r,a,39);const P=r&i^r&o^i&o;const D=a&s^a&d^s&d;E=b|0;R=w|0;b=_|0;w=v|0;_=g|0;v=y|0;({h:g,l:y}=n.add(m|0,f|0,k|0,I|0));m=o|0;f=d|0;o=i|0;d=s|0;i=r|0;s=a|0;const L=n.add3L(I,B,D);r=n.add3H(L,k,x,P);a=L|0}({h:r,l:a}=n.add(this.Ah|0,this.Al|0,r|0,a|0));({h:i,l:s}=n.add(this.Bh|0,this.Bl|0,i|0,s|0));({h:o,l:d}=n.add(this.Ch|0,this.Cl|0,o|0,d|0));({h:m,l:f}=n.add(this.Dh|0,this.Dl|0,m|0,f|0));({h:g,l:y}=n.add(this.Eh|0,this.El|0,g|0,y|0));({h:_,l:v}=n.add(this.Fh|0,this.Fl|0,_|0,v|0));({h:b,l:w}=n.add(this.Gh|0,this.Gl|0,b|0,w|0));({h:E,l:R}=n.add(this.Hh|0,this.Hl|0,E|0,R|0));this.set(r,a,i,s,o,d,m,f,g,y,_,v,b,w,E,R)}roundClean(){(0,i.clean)(l,u)}destroy(){(0,i.clean)(this.buffer);this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.SHA512=SHA512;class SHA384 extends SHA512{constructor(){super(48);this.Ah=a.SHA384_IV[0]|0;this.Al=a.SHA384_IV[1]|0;this.Bh=a.SHA384_IV[2]|0;this.Bl=a.SHA384_IV[3]|0;this.Ch=a.SHA384_IV[4]|0;this.Cl=a.SHA384_IV[5]|0;this.Dh=a.SHA384_IV[6]|0;this.Dl=a.SHA384_IV[7]|0;this.Eh=a.SHA384_IV[8]|0;this.El=a.SHA384_IV[9]|0;this.Fh=a.SHA384_IV[10]|0;this.Fl=a.SHA384_IV[11]|0;this.Gh=a.SHA384_IV[12]|0;this.Gl=a.SHA384_IV[13]|0;this.Hh=a.SHA384_IV[14]|0;this.Hl=a.SHA384_IV[15]|0}}t.SHA384=SHA384;const m=Uint32Array.from([2352822216,424955298,1944164710,2312950998,502970286,855612546,1738396948,1479516111,258812777,2077511080,2011393907,79989058,1067287976,1780299464,286451373,2446758561]);const f=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class SHA512_224 extends SHA512{constructor(){super(28);this.Ah=m[0]|0;this.Al=m[1]|0;this.Bh=m[2]|0;this.Bl=m[3]|0;this.Ch=m[4]|0;this.Cl=m[5]|0;this.Dh=m[6]|0;this.Dl=m[7]|0;this.Eh=m[8]|0;this.El=m[9]|0;this.Fh=m[10]|0;this.Fl=m[11]|0;this.Gh=m[12]|0;this.Gl=m[13]|0;this.Hh=m[14]|0;this.Hl=m[15]|0}}t.SHA512_224=SHA512_224;class SHA512_256 extends SHA512{constructor(){super(32);this.Ah=f[0]|0;this.Al=f[1]|0;this.Bh=f[2]|0;this.Bl=f[3]|0;this.Ch=f[4]|0;this.Cl=f[5]|0;this.Dh=f[6]|0;this.Dl=f[7]|0;this.Eh=f[8]|0;this.El=f[9]|0;this.Fh=f[10]|0;this.Fl=f[11]|0;this.Gh=f[12]|0;this.Gl=f[13]|0;this.Hh=f[14]|0;this.Hl=f[15]|0}}t.SHA512_256=SHA512_256;t.sha256=(0,i.createHasher)((()=>new SHA256));t.sha224=(0,i.createHasher)((()=>new SHA224));t.sha512=(0,i.createHasher)((()=>new SHA512));t.sha384=(0,i.createHasher)((()=>new SHA384));t.sha512_256=(0,i.createHasher)((()=>new SHA512_256));t.sha512_224=(0,i.createHasher)((()=>new SHA512_224))},1526:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.sha224=t.SHA224=t.sha256=t.SHA256=void 0;const a=r(4121);t.SHA256=a.SHA256;t.sha256=a.sha256;t.SHA224=a.SHA224;t.sha224=a.sha224},1338:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.shake256=t.shake128=t.keccak_512=t.keccak_384=t.keccak_256=t.keccak_224=t.sha3_512=t.sha3_384=t.sha3_256=t.sha3_224=t.Keccak=void 0;t.keccakP=keccakP;const a=r(7227);const n=r(6164);const i=BigInt(0);const s=BigInt(1);const o=BigInt(2);const d=BigInt(7);const p=BigInt(256);const c=BigInt(113);const l=[];const u=[];const m=[];for(let e=0,t=s,r=1,a=0;e<24;e++){[r,a]=[a,(2*r+3*a)%5];l.push(2*(5*a+r));u.push((e+1)*(e+2)/2%64);let n=i;for(let e=0;e<7;e++){t=(t<<s^(t>>d)*c)%p;if(t&o)n^=s<<(s<<BigInt(e))-s}m.push(n)}const f=(0,a.split)(m,true);const g=f[0];const y=f[1];const rotlH=(e,t,r)=>r>32?(0,a.rotlBH)(e,t,r):(0,a.rotlSH)(e,t,r);const rotlL=(e,t,r)=>r>32?(0,a.rotlBL)(e,t,r):(0,a.rotlSL)(e,t,r);function keccakP(e,t=24){const r=new Uint32Array(5*2);for(let a=24-t;a<24;a++){for(let t=0;t<10;t++)r[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){const a=(t+8)%10;const n=(t+2)%10;const i=r[n];const s=r[n+1];const o=rotlH(i,s,1)^r[a];const d=rotlL(i,s,1)^r[a+1];for(let r=0;r<50;r+=10){e[t+r]^=o;e[t+r+1]^=d}}let t=e[2];let n=e[3];for(let r=0;r<24;r++){const a=u[r];const i=rotlH(t,n,a);const s=rotlL(t,n,a);const o=l[r];t=e[o];n=e[o+1];e[o]=i;e[o+1]=s}for(let t=0;t<50;t+=10){for(let a=0;a<10;a++)r[a]=e[t+a];for(let a=0;a<10;a++)e[t+a]^=~r[(a+2)%10]&r[(a+4)%10]}e[0]^=g[a];e[1]^=y[a]}(0,n.clean)(r)}class Keccak extends n.Hash{constructor(e,t,r,a=false,i=24){super();this.pos=0;this.posOut=0;this.finished=false;this.destroyed=false;this.enableXOF=false;this.blockLen=e;this.suffix=t;this.outputLen=r;this.enableXOF=a;this.rounds=i;(0,n.anumber)(r);if(!(0<e&&e<200))throw new Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200);this.state32=(0,n.u32)(this.state)}clone(){return this._cloneInto()}keccak(){(0,n.swap32IfBE)(this.state32);keccakP(this.state32,this.rounds);(0,n.swap32IfBE)(this.state32);this.posOut=0;this.pos=0}update(e){(0,n.aexists)(this);e=(0,n.toBytes)(e);(0,n.abytes)(e);const{blockLen:t,state:r}=this;const a=e.length;for(let n=0;n<a;){const i=Math.min(t-this.pos,a-n);for(let t=0;t<i;t++)r[this.pos++]^=e[n++];if(this.pos===t)this.keccak()}return this}finish(){if(this.finished)return;this.finished=true;const{state:e,suffix:t,pos:r,blockLen:a}=this;e[r]^=t;if((t&128)!==0&&r===a-1)this.keccak();e[a-1]^=128;this.keccak()}writeInto(e){(0,n.aexists)(this,false);(0,n.abytes)(e);this.finish();const t=this.state;const{blockLen:r}=this;for(let a=0,n=e.length;a<n;){if(this.posOut>=r)this.keccak();const i=Math.min(r-this.posOut,n-a);e.set(t.subarray(this.posOut,this.posOut+i),a);this.posOut+=i;a+=i}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){(0,n.anumber)(e);return this.xofInto(new Uint8Array(e))}digestInto(e){(0,n.aoutput)(e,this);if(this.finished)throw new Error("digest() was already called");this.writeInto(e);this.destroy();return e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=true;(0,n.clean)(this.state)}_cloneInto(e){const{blockLen:t,suffix:r,outputLen:a,rounds:n,enableXOF:i}=this;e||(e=new Keccak(t,r,a,i,n));e.state32.set(this.state32);e.pos=this.pos;e.posOut=this.posOut;e.finished=this.finished;e.rounds=n;e.suffix=r;e.outputLen=a;e.enableXOF=i;e.destroyed=this.destroyed;return e}}t.Keccak=Keccak;const gen=(e,t,r)=>(0,n.createHasher)((()=>new Keccak(t,e,r)));t.sha3_224=(()=>gen(6,144,224/8))();t.sha3_256=(()=>gen(6,136,256/8))();t.sha3_384=(()=>gen(6,104,384/8))();t.sha3_512=(()=>gen(6,72,512/8))();t.keccak_224=(()=>gen(1,144,224/8))();t.keccak_256=(()=>gen(1,136,256/8))();t.keccak_384=(()=>gen(1,104,384/8))();t.keccak_512=(()=>gen(1,72,512/8))();const genShake=(e,t,r)=>(0,n.createXOFer)(((a={})=>new Keccak(t,e,a.dkLen===undefined?r:a.dkLen,true)));t.shake128=(()=>genShake(31,168,128/8))();t.shake256=(()=>genShake(31,136,256/8))()},6164:(e,t,r)=>{"use strict";
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */Object.defineProperty(t,"__esModule",{value:true});t.wrapXOFConstructorWithOpts=t.wrapConstructorWithOpts=t.wrapConstructor=t.Hash=t.nextTick=t.swap32IfBE=t.byteSwapIfBE=t.swap8IfBE=t.isLE=void 0;t.isBytes=isBytes;t.anumber=anumber;t.abytes=abytes;t.ahash=ahash;t.aexists=aexists;t.aoutput=aoutput;t.u8=u8;t.u32=u32;t.clean=clean;t.createView=createView;t.rotr=rotr;t.rotl=rotl;t.byteSwap=byteSwap;t.byteSwap32=byteSwap32;t.bytesToHex=bytesToHex;t.hexToBytes=hexToBytes;t.asyncLoop=asyncLoop;t.utf8ToBytes=utf8ToBytes;t.bytesToUtf8=bytesToUtf8;t.toBytes=toBytes;t.kdfInputToBytes=kdfInputToBytes;t.concatBytes=concatBytes;t.checkOpts=checkOpts;t.createHasher=createHasher;t.createOptHasher=createOptHasher;t.createXOFer=createXOFer;t.randomBytes=randomBytes;const a=r(9604);function isBytes(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&e.constructor.name==="Uint8Array"}function anumber(e){if(!Number.isSafeInteger(e)||e<0)throw new Error("positive integer expected, got "+e)}function abytes(e,...t){if(!isBytes(e))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(e.length))throw new Error("Uint8Array expected of length "+t+", got length="+e.length)}function ahash(e){if(typeof e!=="function"||typeof e.create!=="function")throw new Error("Hash should be wrapped by utils.createHasher");anumber(e.outputLen);anumber(e.blockLen)}function aexists(e,t=true){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function aoutput(e,t){abytes(e);const r=t.outputLen;if(e.length<r){throw new Error("digestInto() expects output buffer of length at least "+r)}}function u8(e){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}function u32(e){return new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4))}function clean(...e){for(let t=0;t<e.length;t++){e[t].fill(0)}}function createView(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)}function rotr(e,t){return e<<32-t|e>>>t}function rotl(e,t){return e<<t|e>>>32-t>>>0}t.isLE=(()=>new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68)();function byteSwap(e){return e<<24&4278190080|e<<8&16711680|e>>>8&65280|e>>>24&255}t.swap8IfBE=t.isLE?e=>e:e=>byteSwap(e);t.byteSwapIfBE=t.swap8IfBE;function byteSwap32(e){for(let t=0;t<e.length;t++){e[t]=byteSwap(e[t])}return e}t.swap32IfBE=t.isLE?e=>e:byteSwap32;const n=(()=>typeof Uint8Array.from([]).toHex==="function"&&typeof Uint8Array.fromHex==="function")();const i=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function bytesToHex(e){abytes(e);if(n)return e.toHex();let t="";for(let r=0;r<e.length;r++){t+=i[e[r]]}return t}const s={_0:48,_9:57,A:65,F:70,a:97,f:102};function asciiToBase16(e){if(e>=s._0&&e<=s._9)return e-s._0;if(e>=s.A&&e<=s.F)return e-(s.A-10);if(e>=s.a&&e<=s.f)return e-(s.a-10);return}function hexToBytes(e){if(typeof e!=="string")throw new Error("hex string expected, got "+typeof e);if(n)return Uint8Array.fromHex(e);const t=e.length;const r=t/2;if(t%2)throw new Error("hex string expected, got unpadded hex of length "+t);const a=new Uint8Array(r);for(let t=0,n=0;t<r;t++,n+=2){const r=asciiToBase16(e.charCodeAt(n));const i=asciiToBase16(e.charCodeAt(n+1));if(r===undefined||i===undefined){const t=e[n]+e[n+1];throw new Error('hex string expected, got non-hex character "'+t+'" at index '+n)}a[t]=r*16+i}return a}const nextTick=async()=>{};t.nextTick=nextTick;async function asyncLoop(e,r,a){let n=Date.now();for(let i=0;i<e;i++){a(i);const e=Date.now()-n;if(e>=0&&e<r)continue;await(0,t.nextTick)();n+=e}}function utf8ToBytes(e){if(typeof e!=="string")throw new Error("string expected");return new Uint8Array((new TextEncoder).encode(e))}function bytesToUtf8(e){return(new TextDecoder).decode(e)}function toBytes(e){if(typeof e==="string")e=utf8ToBytes(e);abytes(e);return e}function kdfInputToBytes(e){if(typeof e==="string")e=utf8ToBytes(e);abytes(e);return e}function concatBytes(...e){let t=0;for(let r=0;r<e.length;r++){const a=e[r];abytes(a);t+=a.length}const r=new Uint8Array(t);for(let t=0,a=0;t<e.length;t++){const n=e[t];r.set(n,a);a+=n.length}return r}function checkOpts(e,t){if(t!==undefined&&{}.toString.call(t)!=="[object Object]")throw new Error("options should be object or undefined");const r=Object.assign(e,t);return r}class Hash{}t.Hash=Hash;function createHasher(e){const hashC=t=>e().update(toBytes(t)).digest();const t=e();hashC.outputLen=t.outputLen;hashC.blockLen=t.blockLen;hashC.create=()=>e();return hashC}function createOptHasher(e){const hashC=(t,r)=>e(r).update(toBytes(t)).digest();const t=e({});hashC.outputLen=t.outputLen;hashC.blockLen=t.blockLen;hashC.create=t=>e(t);return hashC}function createXOFer(e){const hashC=(t,r)=>e(r).update(toBytes(t)).digest();const t=e({});hashC.outputLen=t.outputLen;hashC.blockLen=t.blockLen;hashC.create=t=>e(t);return hashC}t.wrapConstructor=createHasher;t.wrapConstructorWithOpts=createOptHasher;t.wrapXOFConstructorWithOpts=createXOFer;function randomBytes(e=32){if(a.crypto&&typeof a.crypto.getRandomValues==="function"){return a.crypto.getRandomValues(new Uint8Array(e))}if(a.crypto&&typeof a.crypto.randomBytes==="function"){return Uint8Array.from(a.crypto.randomBytes(e))}throw new Error("crypto.getRandomValues must be defined")}},269:(e,t,r)=>{"use strict";
/**
 * Support for translating between Uint8Array instances and JavaScript
 * native types.
 *
 * {@link module:Layout~Layout|Layout} is the basis of a class
 * hierarchy that associates property names with sequences of encoded
 * bytes.
 *
 * Layouts are supported for these scalar (numeric) types:
 * * {@link module:Layout~UInt|Unsigned integers in little-endian
 *   format} with {@link module:Layout.u8|8-bit}, {@link
 *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},
 *   {@link module:Layout.u32|32-bit}, {@link
 *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}
 *   representation ranges;
 * * {@link module:Layout~UIntBE|Unsigned integers in big-endian
 *   format} with {@link module:Layout.u16be|16-bit}, {@link
 *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},
 *   {@link module:Layout.u40be|40-bit}, and {@link
 *   module:Layout.u48be|48-bit} representation ranges;
 * * {@link module:Layout~Int|Signed integers in little-endian
 *   format} with {@link module:Layout.s8|8-bit}, {@link
 *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},
 *   {@link module:Layout.s32|32-bit}, {@link
 *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}
 *   representation ranges;
 * * {@link module:Layout~IntBE|Signed integers in big-endian format}
 *   with {@link module:Layout.s16be|16-bit}, {@link
 *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},
 *   {@link module:Layout.s40be|40-bit}, and {@link
 *   module:Layout.s48be|48-bit} representation ranges;
 * * 64-bit integral values that decode to an exact (if magnitude is
 *   less than 2^53) or nearby integral Number in {@link
 *   module:Layout.nu64|unsigned little-endian}, {@link
 *   module:Layout.nu64be|unsigned big-endian}, {@link
 *   module:Layout.ns64|signed little-endian}, and {@link
 *   module:Layout.ns64be|unsigned big-endian} encodings;
 * * 32-bit floating point values with {@link
 *   module:Layout.f32|little-endian} and {@link
 *   module:Layout.f32be|big-endian} representations;
 * * 64-bit floating point values with {@link
 *   module:Layout.f64|little-endian} and {@link
 *   module:Layout.f64be|big-endian} representations;
 * * {@link module:Layout.const|Constants} that take no space in the
 *   encoded expression.
 *
 * and for these aggregate types:
 * * {@link module:Layout.seq|Sequence}s of instances of a {@link
 *   module:Layout~Layout|Layout}, with JavaScript representation as
 *   an Array and constant or data-dependent {@link
 *   module:Layout~Sequence#count|length};
 * * {@link module:Layout.struct|Structure}s that aggregate a
 *   heterogeneous sequence of {@link module:Layout~Layout|Layout}
 *   instances, with JavaScript representation as an Object;
 * * {@link module:Layout.union|Union}s that support multiple {@link
 *   module:Layout~VariantLayout|variant layouts} over a fixed
 *   (padded) or variable (not padded) span of bytes, using an
 *   unsigned integer at the start of the data or a separate {@link
 *   module:Layout.unionLayoutDiscriminator|layout element} to
 *   determine which layout to use when interpreting the buffer
 *   contents;
 * * {@link module:Layout.bits|BitStructure}s that contain a sequence
 *   of individual {@link
 *   module:Layout~BitStructure#addField|BitField}s packed into an 8,
 *   16, 24, or 32-bit unsigned integer starting at the least- or
 *   most-significant bit;
 * * {@link module:Layout.cstr|C strings} of varying length;
 * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link
 *   module:Layout~Blob#length|length} raw data.
 *
 * All {@link module:Layout~Layout|Layout} instances are immutable
 * after construction, to prevent internal state from becoming
 * inconsistent.
 *
 * @local Layout
 * @local ExternalLayout
 * @local GreedyCount
 * @local OffsetLayout
 * @local UInt
 * @local UIntBE
 * @local Int
 * @local IntBE
 * @local NearUInt64
 * @local NearUInt64BE
 * @local NearInt64
 * @local NearInt64BE
 * @local Float
 * @local FloatBE
 * @local Double
 * @local DoubleBE
 * @local Sequence
 * @local Structure
 * @local UnionDiscriminator
 * @local UnionLayoutDiscriminator
 * @local Union
 * @local VariantLayout
 * @local BitStructure
 * @local BitField
 * @local Boolean
 * @local Blob
 * @local CString
 * @local Constant
 * @local bindConstructorLayout
 * @module Layout
 * @license MIT
 * @author Peter A. Bigot
 * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}
 */Object.defineProperty(t,"__esModule",{value:true});t.s16=t.s8=t.nu64be=t.u48be=t.u40be=t.u32be=t.u24be=t.u16be=t.nu64=t.u48=t.u40=t.u32=t.u24=t.u16=t.u8=t.offset=t.greedy=t.Constant=t.UTF8=t.CString=t.Blob=t.Boolean=t.BitField=t.BitStructure=t.VariantLayout=t.Union=t.UnionLayoutDiscriminator=t.UnionDiscriminator=t.Structure=t.Sequence=t.DoubleBE=t.Double=t.FloatBE=t.Float=t.NearInt64BE=t.NearInt64=t.NearUInt64BE=t.NearUInt64=t.IntBE=t.Int=t.UIntBE=t.UInt=t.OffsetLayout=t.GreedyCount=t.ExternalLayout=t.bindConstructorLayout=t.nameWithProperty=t.Layout=t.uint8ArrayToBuffer=t.checkUint8Array=void 0;t.constant=t.utf8=t.cstr=t.blob=t.unionLayoutDiscriminator=t.union=t.seq=t.bits=t.struct=t.f64be=t.f64=t.f32be=t.f32=t.ns64be=t.s48be=t.s40be=t.s32be=t.s24be=t.s16be=t.ns64=t.s48=t.s40=t.s32=t.s24=void 0;const a=r(181);function checkUint8Array(e){if(!(e instanceof Uint8Array)){throw new TypeError("b must be a Uint8Array")}}t.checkUint8Array=checkUint8Array;function uint8ArrayToBuffer(e){checkUint8Array(e);return a.Buffer.from(e.buffer,e.byteOffset,e.length)}t.uint8ArrayToBuffer=uint8ArrayToBuffer;class Layout{constructor(e,t){if(!Number.isInteger(e)){throw new TypeError("span must be an integer")}this.span=e;this.property=t}makeDestinationObject(){return{}}getSpan(e,t){if(0>this.span){throw new RangeError("indeterminate span")}return this.span}replicate(e){const t=Object.create(this.constructor.prototype);Object.assign(t,this);t.property=e;return t}fromArray(e){return undefined}}t.Layout=Layout;function nameWithProperty(e,t){if(t.property){return e+"["+t.property+"]"}return e}t.nameWithProperty=nameWithProperty;function bindConstructorLayout(e,t){if("function"!==typeof e){throw new TypeError("Class must be constructor")}if(Object.prototype.hasOwnProperty.call(e,"layout_")){throw new Error("Class is already bound to a layout")}if(!(t&&t instanceof Layout)){throw new TypeError("layout must be a Layout")}if(Object.prototype.hasOwnProperty.call(t,"boundConstructor_")){throw new Error("layout is already bound to a constructor")}e.layout_=t;t.boundConstructor_=e;t.makeDestinationObject=()=>new e;Object.defineProperty(e.prototype,"encode",{value(e,r){return t.encode(this,e,r)},writable:true});Object.defineProperty(e,"decode",{value(e,r){return t.decode(e,r)},writable:true})}t.bindConstructorLayout=bindConstructorLayout;class ExternalLayout extends Layout{isCount(){throw new Error("ExternalLayout is abstract")}}t.ExternalLayout=ExternalLayout;class GreedyCount extends ExternalLayout{constructor(e=1,t){if(!Number.isInteger(e)||0>=e){throw new TypeError("elementSpan must be a (positive) integer")}super(-1,t);this.elementSpan=e}isCount(){return true}decode(e,t=0){checkUint8Array(e);const r=e.length-t;return Math.floor(r/this.elementSpan)}encode(e,t,r){return 0}}t.GreedyCount=GreedyCount;class OffsetLayout extends ExternalLayout{constructor(e,t=0,r){if(!(e instanceof Layout)){throw new TypeError("layout must be a Layout")}if(!Number.isInteger(t)){throw new TypeError("offset must be integer or undefined")}super(e.span,r||e.property);this.layout=e;this.offset=t}isCount(){return this.layout instanceof UInt||this.layout instanceof UIntBE}decode(e,t=0){return this.layout.decode(e,t+this.offset)}encode(e,t,r=0){return this.layout.encode(e,t,r+this.offset)}}t.OffsetLayout=OffsetLayout;class UInt extends Layout{constructor(e,t){super(e,t);if(6<this.span){throw new RangeError("span must not exceed 6 bytes")}}decode(e,t=0){return uint8ArrayToBuffer(e).readUIntLE(t,this.span)}encode(e,t,r=0){uint8ArrayToBuffer(t).writeUIntLE(e,r,this.span);return this.span}}t.UInt=UInt;class UIntBE extends Layout{constructor(e,t){super(e,t);if(6<this.span){throw new RangeError("span must not exceed 6 bytes")}}decode(e,t=0){return uint8ArrayToBuffer(e).readUIntBE(t,this.span)}encode(e,t,r=0){uint8ArrayToBuffer(t).writeUIntBE(e,r,this.span);return this.span}}t.UIntBE=UIntBE;class Int extends Layout{constructor(e,t){super(e,t);if(6<this.span){throw new RangeError("span must not exceed 6 bytes")}}decode(e,t=0){return uint8ArrayToBuffer(e).readIntLE(t,this.span)}encode(e,t,r=0){uint8ArrayToBuffer(t).writeIntLE(e,r,this.span);return this.span}}t.Int=Int;class IntBE extends Layout{constructor(e,t){super(e,t);if(6<this.span){throw new RangeError("span must not exceed 6 bytes")}}decode(e,t=0){return uint8ArrayToBuffer(e).readIntBE(t,this.span)}encode(e,t,r=0){uint8ArrayToBuffer(t).writeIntBE(e,r,this.span);return this.span}}t.IntBE=IntBE;const n=Math.pow(2,32);function divmodInt64(e){const t=Math.floor(e/n);const r=e-t*n;return{hi32:t,lo32:r}}function roundedInt64(e,t){return e*n+t}class NearUInt64 extends Layout{constructor(e){super(8,e)}decode(e,t=0){const r=uint8ArrayToBuffer(e);const a=r.readUInt32LE(t);const n=r.readUInt32LE(t+4);return roundedInt64(n,a)}encode(e,t,r=0){const a=divmodInt64(e);const n=uint8ArrayToBuffer(t);n.writeUInt32LE(a.lo32,r);n.writeUInt32LE(a.hi32,r+4);return 8}}t.NearUInt64=NearUInt64;class NearUInt64BE extends Layout{constructor(e){super(8,e)}decode(e,t=0){const r=uint8ArrayToBuffer(e);const a=r.readUInt32BE(t);const n=r.readUInt32BE(t+4);return roundedInt64(a,n)}encode(e,t,r=0){const a=divmodInt64(e);const n=uint8ArrayToBuffer(t);n.writeUInt32BE(a.hi32,r);n.writeUInt32BE(a.lo32,r+4);return 8}}t.NearUInt64BE=NearUInt64BE;class NearInt64 extends Layout{constructor(e){super(8,e)}decode(e,t=0){const r=uint8ArrayToBuffer(e);const a=r.readUInt32LE(t);const n=r.readInt32LE(t+4);return roundedInt64(n,a)}encode(e,t,r=0){const a=divmodInt64(e);const n=uint8ArrayToBuffer(t);n.writeUInt32LE(a.lo32,r);n.writeInt32LE(a.hi32,r+4);return 8}}t.NearInt64=NearInt64;class NearInt64BE extends Layout{constructor(e){super(8,e)}decode(e,t=0){const r=uint8ArrayToBuffer(e);const a=r.readInt32BE(t);const n=r.readUInt32BE(t+4);return roundedInt64(a,n)}encode(e,t,r=0){const a=divmodInt64(e);const n=uint8ArrayToBuffer(t);n.writeInt32BE(a.hi32,r);n.writeUInt32BE(a.lo32,r+4);return 8}}t.NearInt64BE=NearInt64BE;class Float extends Layout{constructor(e){super(4,e)}decode(e,t=0){return uint8ArrayToBuffer(e).readFloatLE(t)}encode(e,t,r=0){uint8ArrayToBuffer(t).writeFloatLE(e,r);return 4}}t.Float=Float;class FloatBE extends Layout{constructor(e){super(4,e)}decode(e,t=0){return uint8ArrayToBuffer(e).readFloatBE(t)}encode(e,t,r=0){uint8ArrayToBuffer(t).writeFloatBE(e,r);return 4}}t.FloatBE=FloatBE;class Double extends Layout{constructor(e){super(8,e)}decode(e,t=0){return uint8ArrayToBuffer(e).readDoubleLE(t)}encode(e,t,r=0){uint8ArrayToBuffer(t).writeDoubleLE(e,r);return 8}}t.Double=Double;class DoubleBE extends Layout{constructor(e){super(8,e)}decode(e,t=0){return uint8ArrayToBuffer(e).readDoubleBE(t)}encode(e,t,r=0){uint8ArrayToBuffer(t).writeDoubleBE(e,r);return 8}}t.DoubleBE=DoubleBE;class Sequence extends Layout{constructor(e,t,r){if(!(e instanceof Layout)){throw new TypeError("elementLayout must be a Layout")}if(!(t instanceof ExternalLayout&&t.isCount()||Number.isInteger(t)&&0<=t)){throw new TypeError("count must be non-negative integer "+"or an unsigned integer ExternalLayout")}let a=-1;if(!(t instanceof ExternalLayout)&&0<e.span){a=t*e.span}super(a,r);this.elementLayout=e;this.count=t}getSpan(e,t=0){if(0<=this.span){return this.span}let r=0;let a=this.count;if(a instanceof ExternalLayout){a=a.decode(e,t)}if(0<this.elementLayout.span){r=a*this.elementLayout.span}else{let n=0;while(n<a){r+=this.elementLayout.getSpan(e,t+r);++n}}return r}decode(e,t=0){const r=[];let a=0;let n=this.count;if(n instanceof ExternalLayout){n=n.decode(e,t)}while(a<n){r.push(this.elementLayout.decode(e,t));t+=this.elementLayout.getSpan(e,t);a+=1}return r}encode(e,t,r=0){const a=this.elementLayout;const n=e.reduce(((e,n)=>e+a.encode(n,t,r+e)),0);if(this.count instanceof ExternalLayout){this.count.encode(e.length,t,r)}return n}}t.Sequence=Sequence;class Structure extends Layout{constructor(e,t,r){if(!(Array.isArray(e)&&e.reduce(((e,t)=>e&&t instanceof Layout),true))){throw new TypeError("fields must be array of Layout instances")}if("boolean"===typeof t&&undefined===r){r=t;t=undefined}for(const t of e){if(0>t.span&&undefined===t.property){throw new Error("fields cannot contain unnamed variable-length layout")}}let a=-1;try{a=e.reduce(((e,t)=>e+t.getSpan()),0)}catch(e){}super(a,t);this.fields=e;this.decodePrefixes=!!r}getSpan(e,t=0){if(0<=this.span){return this.span}let r=0;try{r=this.fields.reduce(((r,a)=>{const n=a.getSpan(e,t);t+=n;return r+n}),0)}catch(e){throw new RangeError("indeterminate span")}return r}decode(e,t=0){checkUint8Array(e);const r=this.makeDestinationObject();for(const a of this.fields){if(undefined!==a.property){r[a.property]=a.decode(e,t)}t+=a.getSpan(e,t);if(this.decodePrefixes&&e.length===t){break}}return r}encode(e,t,r=0){const a=r;let n=0;let i=0;for(const a of this.fields){let s=a.span;i=0<s?s:0;if(undefined!==a.property){const n=e[a.property];if(undefined!==n){i=a.encode(n,t,r);if(0>s){s=a.getSpan(t,r)}}}n=r;r+=s}return n+i-a}fromArray(e){const t=this.makeDestinationObject();for(const r of this.fields){if(undefined!==r.property&&0<e.length){t[r.property]=e.shift()}}return t}layoutFor(e){if("string"!==typeof e){throw new TypeError("property must be string")}for(const t of this.fields){if(t.property===e){return t}}return undefined}offsetOf(e){if("string"!==typeof e){throw new TypeError("property must be string")}let t=0;for(const r of this.fields){if(r.property===e){return t}if(0>r.span){t=-1}else if(0<=t){t+=r.span}}return undefined}}t.Structure=Structure;class UnionDiscriminator{constructor(e){this.property=e}decode(e,t){throw new Error("UnionDiscriminator is abstract")}encode(e,t,r){throw new Error("UnionDiscriminator is abstract")}}t.UnionDiscriminator=UnionDiscriminator;class UnionLayoutDiscriminator extends UnionDiscriminator{constructor(e,t){if(!(e instanceof ExternalLayout&&e.isCount())){throw new TypeError("layout must be an unsigned integer ExternalLayout")}super(t||e.property||"variant");this.layout=e}decode(e,t){return this.layout.decode(e,t)}encode(e,t,r){return this.layout.encode(e,t,r)}}t.UnionLayoutDiscriminator=UnionLayoutDiscriminator;class Union extends Layout{constructor(e,t,r){let a;if(e instanceof UInt||e instanceof UIntBE){a=new UnionLayoutDiscriminator(new OffsetLayout(e))}else if(e instanceof ExternalLayout&&e.isCount()){a=new UnionLayoutDiscriminator(e)}else if(!(e instanceof UnionDiscriminator)){throw new TypeError("discr must be a UnionDiscriminator "+"or an unsigned integer layout")}else{a=e}if(undefined===t){t=null}if(!(null===t||t instanceof Layout)){throw new TypeError("defaultLayout must be null or a Layout")}if(null!==t){if(0>t.span){throw new Error("defaultLayout must have constant span")}if(undefined===t.property){t=t.replicate("content")}}let n=-1;if(t){n=t.span;if(0<=n&&(e instanceof UInt||e instanceof UIntBE)){n+=a.layout.span}}super(n,r);this.discriminator=a;this.usesPrefixDiscriminator=e instanceof UInt||e instanceof UIntBE;this.defaultLayout=t;this.registry={};let i=this.defaultGetSourceVariant.bind(this);this.getSourceVariant=function(e){return i(e)};this.configGetSourceVariant=function(e){i=e.bind(this)}}getSpan(e,t=0){if(0<=this.span){return this.span}const r=this.getVariant(e,t);if(!r){throw new Error("unable to determine span for unrecognized variant")}return r.getSpan(e,t)}defaultGetSourceVariant(e){if(Object.prototype.hasOwnProperty.call(e,this.discriminator.property)){if(this.defaultLayout&&this.defaultLayout.property&&Object.prototype.hasOwnProperty.call(e,this.defaultLayout.property)){return undefined}const t=this.registry[e[this.discriminator.property]];if(t&&(!t.layout||t.property&&Object.prototype.hasOwnProperty.call(e,t.property))){return t}}else{for(const t in this.registry){const r=this.registry[t];if(r.property&&Object.prototype.hasOwnProperty.call(e,r.property)){return r}}}throw new Error("unable to infer src variant")}decode(e,t=0){let r;const a=this.discriminator;const n=a.decode(e,t);const i=this.registry[n];if(undefined===i){const i=this.defaultLayout;let s=0;if(this.usesPrefixDiscriminator){s=a.layout.span}r=this.makeDestinationObject();r[a.property]=n;r[i.property]=i.decode(e,t+s)}else{r=i.decode(e,t)}return r}encode(e,t,r=0){const a=this.getSourceVariant(e);if(undefined===a){const a=this.discriminator;const n=this.defaultLayout;let i=0;if(this.usesPrefixDiscriminator){i=a.layout.span}a.encode(e[a.property],t,r);return i+n.encode(e[n.property],t,r+i)}return a.encode(e,t,r)}addVariant(e,t,r){const a=new VariantLayout(this,e,t,r);this.registry[e]=a;return a}getVariant(e,t=0){let r;if(e instanceof Uint8Array){r=this.discriminator.decode(e,t)}else{r=e}return this.registry[r]}}t.Union=Union;class VariantLayout extends Layout{constructor(e,t,r,a){if(!(e instanceof Union)){throw new TypeError("union must be a Union")}if(!Number.isInteger(t)||0>t){throw new TypeError("variant must be a (non-negative) integer")}if("string"===typeof r&&undefined===a){a=r;r=null}if(r){if(!(r instanceof Layout)){throw new TypeError("layout must be a Layout")}if(null!==e.defaultLayout&&0<=r.span&&r.span>e.defaultLayout.span){throw new Error("variant span exceeds span of containing union")}if("string"!==typeof a){throw new TypeError("variant must have a String property")}}let n=e.span;if(0>e.span){n=r?r.span:0;if(0<=n&&e.usesPrefixDiscriminator){n+=e.discriminator.layout.span}}super(n,a);this.union=e;this.variant=t;this.layout=r||null}getSpan(e,t=0){if(0<=this.span){return this.span}let r=0;if(this.union.usesPrefixDiscriminator){r=this.union.discriminator.layout.span}let a=0;if(this.layout){a=this.layout.getSpan(e,t+r)}return r+a}decode(e,t=0){const r=this.makeDestinationObject();if(this!==this.union.getVariant(e,t)){throw new Error("variant mismatch")}let a=0;if(this.union.usesPrefixDiscriminator){a=this.union.discriminator.layout.span}if(this.layout){r[this.property]=this.layout.decode(e,t+a)}else if(this.property){r[this.property]=true}else if(this.union.usesPrefixDiscriminator){r[this.union.discriminator.property]=this.variant}return r}encode(e,t,r=0){let a=0;if(this.union.usesPrefixDiscriminator){a=this.union.discriminator.layout.span}if(this.layout&&!Object.prototype.hasOwnProperty.call(e,this.property)){throw new TypeError("variant lacks property "+this.property)}this.union.discriminator.encode(this.variant,t,r);let n=a;if(this.layout){this.layout.encode(e[this.property],t,r+a);n+=this.layout.getSpan(t,r+a);if(0<=this.union.span&&n>this.union.span){throw new Error("encoded variant overruns containing union")}}return n}fromArray(e){if(this.layout){return this.layout.fromArray(e)}return undefined}}t.VariantLayout=VariantLayout;function fixBitwiseResult(e){if(0>e){e+=4294967296}return e}class BitStructure extends Layout{constructor(e,t,r){if(!(e instanceof UInt||e instanceof UIntBE)){throw new TypeError("word must be a UInt or UIntBE layout")}if("string"===typeof t&&undefined===r){r=t;t=false}if(4<e.span){throw new RangeError("word cannot exceed 32 bits")}super(e.span,r);this.word=e;this.msb=!!t;this.fields=[];let a=0;this._packedSetValue=function(e){a=fixBitwiseResult(e);return this};this._packedGetValue=function(){return a}}decode(e,t=0){const r=this.makeDestinationObject();const a=this.word.decode(e,t);this._packedSetValue(a);for(const t of this.fields){if(undefined!==t.property){r[t.property]=t.decode(e)}}return r}encode(e,t,r=0){const a=this.word.decode(t,r);this._packedSetValue(a);for(const t of this.fields){if(undefined!==t.property){const r=e[t.property];if(undefined!==r){t.encode(r)}}}return this.word.encode(this._packedGetValue(),t,r)}addField(e,t){const r=new BitField(this,e,t);this.fields.push(r);return r}addBoolean(e){const t=new Boolean(this,e);this.fields.push(t);return t}fieldFor(e){if("string"!==typeof e){throw new TypeError("property must be string")}for(const t of this.fields){if(t.property===e){return t}}return undefined}}t.BitStructure=BitStructure;class BitField{constructor(e,t,r){if(!(e instanceof BitStructure)){throw new TypeError("container must be a BitStructure")}if(!Number.isInteger(t)||0>=t){throw new TypeError("bits must be positive integer")}const a=8*e.span;const n=e.fields.reduce(((e,t)=>e+t.bits),0);if(t+n>a){throw new Error("bits too long for span remainder ("+(a-n)+" of "+a+" remain)")}this.container=e;this.bits=t;this.valueMask=(1<<t)-1;if(32===t){this.valueMask=4294967295}this.start=n;if(this.container.msb){this.start=a-n-t}this.wordMask=fixBitwiseResult(this.valueMask<<this.start);this.property=r}decode(e,t){const r=this.container._packedGetValue();const a=fixBitwiseResult(r&this.wordMask);const n=a>>>this.start;return n}encode(e){if("number"!==typeof e||!Number.isInteger(e)||e!==fixBitwiseResult(e&this.valueMask)){throw new TypeError(nameWithProperty("BitField.encode",this)+" value must be integer not exceeding "+this.valueMask)}const t=this.container._packedGetValue();const r=fixBitwiseResult(e<<this.start);this.container._packedSetValue(fixBitwiseResult(t&~this.wordMask)|r)}}t.BitField=BitField;class Boolean extends BitField{constructor(e,t){super(e,1,t)}decode(e,t){return!!super.decode(e,t)}encode(e){if("boolean"===typeof e){e=+e}super.encode(e)}}t.Boolean=Boolean;class Blob extends Layout{constructor(e,t){if(!(e instanceof ExternalLayout&&e.isCount()||Number.isInteger(e)&&0<=e)){throw new TypeError("length must be positive integer "+"or an unsigned integer ExternalLayout")}let r=-1;if(!(e instanceof ExternalLayout)){r=e}super(r,t);this.length=e}getSpan(e,t){let r=this.span;if(0>r){r=this.length.decode(e,t)}return r}decode(e,t=0){let r=this.span;if(0>r){r=this.length.decode(e,t)}return uint8ArrayToBuffer(e).slice(t,t+r)}encode(e,t,r){let a=this.length;if(this.length instanceof ExternalLayout){a=e.length}if(!(e instanceof Uint8Array&&a===e.length)){throw new TypeError(nameWithProperty("Blob.encode",this)+" requires (length "+a+") Uint8Array as src")}if(r+a>t.length){throw new RangeError("encoding overruns Uint8Array")}const n=uint8ArrayToBuffer(e);uint8ArrayToBuffer(t).write(n.toString("hex"),r,a,"hex");if(this.length instanceof ExternalLayout){this.length.encode(a,t,r)}return a}}t.Blob=Blob;class CString extends Layout{constructor(e){super(-1,e)}getSpan(e,t=0){checkUint8Array(e);let r=t;while(r<e.length&&0!==e[r]){r+=1}return 1+r-t}decode(e,t=0){const r=this.getSpan(e,t);return uint8ArrayToBuffer(e).slice(t,t+r-1).toString("utf-8")}encode(e,t,r=0){if("string"!==typeof e){e=String(e)}const n=a.Buffer.from(e,"utf8");const i=n.length;if(r+i>t.length){throw new RangeError("encoding overruns Buffer")}const s=uint8ArrayToBuffer(t);n.copy(s,r);s[r+i]=0;return i+1}}t.CString=CString;class UTF8 extends Layout{constructor(e,t){if("string"===typeof e&&undefined===t){t=e;e=undefined}if(undefined===e){e=-1}else if(!Number.isInteger(e)){throw new TypeError("maxSpan must be an integer")}super(-1,t);this.maxSpan=e}getSpan(e,t=0){checkUint8Array(e);return e.length-t}decode(e,t=0){const r=this.getSpan(e,t);if(0<=this.maxSpan&&this.maxSpan<r){throw new RangeError("text length exceeds maxSpan")}return uint8ArrayToBuffer(e).slice(t,t+r).toString("utf-8")}encode(e,t,r=0){if("string"!==typeof e){e=String(e)}const n=a.Buffer.from(e,"utf8");const i=n.length;if(0<=this.maxSpan&&this.maxSpan<i){throw new RangeError("text length exceeds maxSpan")}if(r+i>t.length){throw new RangeError("encoding overruns Buffer")}n.copy(uint8ArrayToBuffer(t),r);return i}}t.UTF8=UTF8;class Constant extends Layout{constructor(e,t){super(0,t);this.value=e}decode(e,t){return this.value}encode(e,t,r){return 0}}t.Constant=Constant;t.greedy=(e,t)=>new GreedyCount(e,t);t.offset=(e,t,r)=>new OffsetLayout(e,t,r);t.u8=e=>new UInt(1,e);t.u16=e=>new UInt(2,e);t.u24=e=>new UInt(3,e);t.u32=e=>new UInt(4,e);t.u40=e=>new UInt(5,e);t.u48=e=>new UInt(6,e);t.nu64=e=>new NearUInt64(e);t.u16be=e=>new UIntBE(2,e);t.u24be=e=>new UIntBE(3,e);t.u32be=e=>new UIntBE(4,e);t.u40be=e=>new UIntBE(5,e);t.u48be=e=>new UIntBE(6,e);t.nu64be=e=>new NearUInt64BE(e);t.s8=e=>new Int(1,e);t.s16=e=>new Int(2,e);t.s24=e=>new Int(3,e);t.s32=e=>new Int(4,e);t.s40=e=>new Int(5,e);t.s48=e=>new Int(6,e);t.ns64=e=>new NearInt64(e);t.s16be=e=>new IntBE(2,e);t.s24be=e=>new IntBE(3,e);t.s32be=e=>new IntBE(4,e);t.s40be=e=>new IntBE(5,e);t.s48be=e=>new IntBE(6,e);t.ns64be=e=>new NearInt64BE(e);t.f32=e=>new Float(e);t.f32be=e=>new FloatBE(e);t.f64=e=>new Double(e);t.f64be=e=>new DoubleBE(e);t.struct=(e,t,r)=>new Structure(e,t,r);t.bits=(e,t,r)=>new BitStructure(e,t,r);t.seq=(e,t,r)=>new Sequence(e,t,r);t.union=(e,t,r)=>new Union(e,t,r);t.unionLayoutDiscriminator=(e,t)=>new UnionLayoutDiscriminator(e,t);t.blob=(e,t)=>new Blob(e,t);t.cstr=e=>new CString(e);t.utf8=(e,t)=>new UTF8(e,t);t.constant=(e,t)=>new Constant(e,t)},8108:(e,t,r)=>{"use strict";var a=r(181);var n=r(6153);var i=r(4801);var s=r(7565);var o=r(1526);var d=r(2209);var p=r(269);var c=r(3453);var l=r(9023);var u=r(8611);var m=r(5692);var f=r(3830);var g=r(1149);var y=r(9201);var _=r(6968);var v=r(1338);var b=r(76);function _interopDefaultCompat(e){return e&&typeof e==="object"&&"default"in e?e:{default:e}}function _interopNamespaceCompat(e){if(e&&typeof e==="object"&&"default"in e)return e;var t=Object.create(null);if(e){Object.keys(e).forEach((function(r){if(r!=="default"){var a=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,a.get?a:{enumerable:true,get:function(){return e[r]}})}}))}t.default=e;return Object.freeze(t)}var w=_interopDefaultCompat(i);var E=_interopDefaultCompat(s);var R=_interopNamespaceCompat(p);var T=_interopDefaultCompat(l);var O=_interopDefaultCompat(u);var N=_interopDefaultCompat(m);var C=_interopDefaultCompat(g);var k=_interopNamespaceCompat(y);const I=n.ed25519.utils.randomPrivateKey;const generateKeypair=()=>{const e=n.ed25519.utils.randomPrivateKey();const t=x(e);const r=new Uint8Array(64);r.set(e);r.set(t,32);return{publicKey:t,secretKey:r}};const x=n.ed25519.getPublicKey;function isOnCurve(e){try{n.ed25519.ExtendedPoint.fromHex(e);return true}catch{return false}}const sign=(e,t)=>n.ed25519.sign(e,t.slice(0,32));const B=n.ed25519.verify;const toBuffer=e=>{if(a.Buffer.isBuffer(e)){return e}else if(e instanceof Uint8Array){return a.Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else{return a.Buffer.from(e)}};class Struct{constructor(e){Object.assign(this,e)}encode(){return a.Buffer.from(d.serialize(P,this))}static decode(e){return d.deserialize(P,this,e)}static decodeUnchecked(e){return d.deserializeUnchecked(P,this,e)}}class Enum extends Struct{constructor(e){super(e);this.enum="";if(Object.keys(e).length!==1){throw new Error("Enum can only take single value")}Object.keys(e).map((e=>{this.enum=e}))}}const P=new Map;var D;const L=32;const U=32;function isPublicKeyData(e){return e._bn!==undefined}let F=1;class PublicKey extends Struct{constructor(e){super({});this._bn=void 0;if(isPublicKeyData(e)){this._bn=e._bn}else{if(typeof e==="string"){const t=E.default.decode(e);if(t.length!=U){throw new Error(`Invalid public key input`)}this._bn=new w.default(t)}else{this._bn=new w.default(e)}if(this._bn.byteLength()>U){throw new Error(`Invalid public key input`)}}}static unique(){const e=new PublicKey(F);F+=1;return new PublicKey(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return E.default.encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){const e=this._bn.toArrayLike(a.Buffer);if(e.length===U){return e}const t=a.Buffer.alloc(32);e.copy(t,32-e.length);return t}get[Symbol.toStringTag](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,r){const n=a.Buffer.concat([e.toBuffer(),a.Buffer.from(t),r.toBuffer()]);const i=o.sha256(n);return new PublicKey(i)}static createProgramAddressSync(e,t){let r=a.Buffer.alloc(0);e.forEach((function(e){if(e.length>L){throw new TypeError(`Max seed length exceeded`)}r=a.Buffer.concat([r,toBuffer(e)])}));r=a.Buffer.concat([r,t.toBuffer(),a.Buffer.from("ProgramDerivedAddress")]);const n=o.sha256(r);if(isOnCurve(n)){throw new Error(`Invalid seeds, address must fall off the curve`)}return new PublicKey(n)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r=255;let n;while(r!=0){try{const i=e.concat(a.Buffer.from([r]));n=this.createProgramAddressSync(i,t)}catch(e){if(e instanceof TypeError){throw e}r--;continue}return[n,r]}throw new Error(`Unable to find a viable program address nonce`)}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){const t=new PublicKey(e);return isOnCurve(t.toBytes())}}D=PublicKey;PublicKey.default=new D("11111111111111111111111111111111");P.set(PublicKey,{kind:"struct",fields:[["_bn","u256"]]});class Account{constructor(e){this._publicKey=void 0;this._secretKey=void 0;if(e){const t=toBuffer(e);if(e.length!==64){throw new Error("bad secret key size")}this._publicKey=t.slice(32,64);this._secretKey=t.slice(0,32)}else{this._secretKey=toBuffer(I());this._publicKey=toBuffer(x(this._secretKey))}}get publicKey(){return new PublicKey(this._publicKey)}get secretKey(){return a.Buffer.concat([this._secretKey,this._publicKey],64)}}const V=new PublicKey("BPFLoader1111111111111111111111111111111111");const z=1280-40-8;const j=127;const H=64;class TransactionExpiredBlockheightExceededError extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`);this.signature=void 0;this.signature=e}}Object.defineProperty(TransactionExpiredBlockheightExceededError.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class TransactionExpiredTimeoutError extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is `+"unknown if it succeeded or failed. Check signature "+`${e} using the Solana Explorer or CLI tools.`);this.signature=void 0;this.signature=e}}Object.defineProperty(TransactionExpiredTimeoutError.prototype,"name",{value:"TransactionExpiredTimeoutError"});class TransactionExpiredNonceInvalidError extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`);this.signature=void 0;this.signature=e}}Object.defineProperty(TransactionExpiredNonceInvalidError.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class MessageAccountKeys{constructor(e,t){this.staticAccountKeys=void 0;this.accountKeysFromLookups=void 0;this.staticAccountKeys=e;this.accountKeysFromLookups=t}keySegments(){const e=[this.staticAccountKeys];if(this.accountKeysFromLookups){e.push(this.accountKeysFromLookups.writable);e.push(this.accountKeysFromLookups.readonly)}return e}get(e){for(const t of this.keySegments()){if(e<t.length){return t[e]}else{e-=t.length}}return}get length(){return this.keySegments().flat().length}compileInstructions(e){const t=255;if(this.length>t+1){throw new Error("Account index overflow encountered during compilation")}const r=new Map;this.keySegments().flat().forEach(((e,t)=>{r.set(e.toBase58(),t)}));const findKeyIndex=e=>{const t=r.get(e.toBase58());if(t===undefined)throw new Error("Encountered an unknown instruction account key during compilation");return t};return e.map((e=>({programIdIndex:findKeyIndex(e.programId),accountKeyIndexes:e.keys.map((e=>findKeyIndex(e.pubkey))),data:e.data})))}}const publicKey=(e="publicKey")=>R.blob(32,e);const signature=(e="signature")=>R.blob(64,e);const rustString=(e="string")=>{const t=R.struct([R.u32("length"),R.u32("lengthPadding"),R.blob(R.offset(R.u32(),-8),"chars")],e);const r=t.decode.bind(t);const n=t.encode.bind(t);const i=t;i.decode=(e,t)=>{const a=r(e,t);return a["chars"].toString()};i.encode=(e,t,r)=>{const i={chars:a.Buffer.from(e,"utf8")};return n(i,t,r)};i.alloc=e=>R.u32().span+R.u32().span+a.Buffer.from(e,"utf8").length;return i};const authorized=(e="authorized")=>R.struct([publicKey("staker"),publicKey("withdrawer")],e);const lockup=(e="lockup")=>R.struct([R.ns64("unixTimestamp"),R.ns64("epoch"),publicKey("custodian")],e);const voteInit=(e="voteInit")=>R.struct([publicKey("nodePubkey"),publicKey("authorizedVoter"),publicKey("authorizedWithdrawer"),R.u8("commission")],e);const voteAuthorizeWithSeedArgs=(e="voteAuthorizeWithSeedArgs")=>R.struct([R.u32("voteAuthorizationType"),publicKey("currentAuthorityDerivedKeyOwnerPubkey"),rustString("currentAuthorityDerivedKeySeed"),publicKey("newAuthorized")],e);function getAlloc(e,t){const getItemAlloc=e=>{if(e.span>=0){return e.span}else if(typeof e.alloc==="function"){return e.alloc(t[e.property])}else if("count"in e&&"elementLayout"in e){const r=t[e.property];if(Array.isArray(r)){return r.length*getItemAlloc(e.elementLayout)}}else if("fields"in e){return getAlloc({layout:e},t[e.property])}return 0};let r=0;e.layout.fields.forEach((e=>{r+=getItemAlloc(e)}));return r}function decodeLength(e){let t=0;let r=0;for(;;){let a=e.shift();t|=(a&127)<<r*7;r+=1;if((a&128)===0){break}}return t}function encodeLength(e,t){let r=t;for(;;){let t=r&127;r>>=7;if(r==0){e.push(t);break}else{t|=128;e.push(t)}}}function assert(e,t){if(!e){throw new Error(t||"Assertion failed")}}class CompiledKeys{constructor(e,t){this.payer=void 0;this.keyMetaMap=void 0;this.payer=e;this.keyMetaMap=t}static compile(e,t){const r=new Map;const getOrInsertDefault=e=>{const t=e.toBase58();let a=r.get(t);if(a===undefined){a={isSigner:false,isWritable:false,isInvoked:false};r.set(t,a)}return a};const a=getOrInsertDefault(t);a.isSigner=true;a.isWritable=true;for(const t of e){getOrInsertDefault(t.programId).isInvoked=true;for(const e of t.keys){const t=getOrInsertDefault(e.pubkey);t.isSigner||=e.isSigner;t.isWritable||=e.isWritable}}return new CompiledKeys(t,r)}getMessageComponents(){const e=[...this.keyMetaMap.entries()];assert(e.length<=256,"Max static account keys length exceeded");const t=e.filter((([,e])=>e.isSigner&&e.isWritable));const r=e.filter((([,e])=>e.isSigner&&!e.isWritable));const a=e.filter((([,e])=>!e.isSigner&&e.isWritable));const n=e.filter((([,e])=>!e.isSigner&&!e.isWritable));const i={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:n.length};{assert(t.length>0,"Expected at least one writable signer key");const[e]=t[0];assert(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}const s=[...t.map((([e])=>new PublicKey(e))),...r.map((([e])=>new PublicKey(e))),...a.map((([e])=>new PublicKey(e))),...n.map((([e])=>new PublicKey(e)))];return[i,s]}extractTableLookup(e){const[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&e.isWritable));const[a,n]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&!e.isWritable));if(t.length===0&&a.length===0){return}return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:a},{writable:r,readonly:n}]}drainKeysFoundInLookupTable(e,t){const r=new Array;const a=new Array;for(const[n,i]of this.keyMetaMap.entries()){if(t(i)){const t=new PublicKey(n);const i=e.findIndex((e=>e.equals(t)));if(i>=0){assert(i<256,"Max lookup table index exceeded");r.push(i);a.push(t);this.keyMetaMap.delete(n)}}}return[r,a]}}const q="Reached end of buffer unexpectedly";function guardedShift(e){if(e.length===0){throw new Error(q)}return e.shift()}function guardedSplice(e,...t){const[r]=t;if(t.length===2?r+(t[1]??0)>e.length:r>=e.length){throw new Error(q)}return e.splice(...t)}class Message{constructor(e){this.header=void 0;this.accountKeys=void 0;this.recentBlockhash=void 0;this.instructions=void 0;this.indexToProgramIds=new Map;this.header=e.header;this.accountKeys=e.accountKeys.map((e=>new PublicKey(e)));this.recentBlockhash=e.recentBlockhash;this.instructions=e.instructions;this.instructions.forEach((e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:E.default.decode(e.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new MessageAccountKeys(this.staticAccountKeys)}static compile(e){const t=CompiledKeys.compile(e.instructions,e.payerKey);const[r,a]=t.getMessageComponents();const n=new MessageAccountKeys(a);const i=n.compileInstructions(e.instructions).map((e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:E.default.encode(e.data)})));return new Message({header:r,accountKeys:a,recentBlockhash:e.recentBlockhash,instructions:i})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures;if(e>=this.header.numRequiredSignatures){const r=e-t;const a=this.accountKeys.length-t;const n=a-this.header.numReadonlyUnsignedAccounts;return r<n}else{const r=t-this.header.numReadonlySignedAccounts;return e<r}}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((e,t)=>!this.isProgramId(t)))}serialize(){const e=this.accountKeys.length;let t=[];encodeLength(t,e);const r=this.instructions.map((e=>{const{accounts:t,programIdIndex:r}=e;const n=Array.from(E.default.decode(e.data));let i=[];encodeLength(i,t.length);let s=[];encodeLength(s,n.length);return{programIdIndex:r,keyIndicesCount:a.Buffer.from(i),keyIndices:t,dataLength:a.Buffer.from(s),data:n}}));let n=[];encodeLength(n,r.length);let i=a.Buffer.alloc(z);a.Buffer.from(n).copy(i);let s=n.length;r.forEach((e=>{const t=R.struct([R.u8("programIdIndex"),R.blob(e.keyIndicesCount.length,"keyIndicesCount"),R.seq(R.u8("keyIndex"),e.keyIndices.length,"keyIndices"),R.blob(e.dataLength.length,"dataLength"),R.seq(R.u8("userdatum"),e.data.length,"data")]);const r=t.encode(e,i,s);s+=r}));i=i.slice(0,s);const o=R.struct([R.blob(1,"numRequiredSignatures"),R.blob(1,"numReadonlySignedAccounts"),R.blob(1,"numReadonlyUnsignedAccounts"),R.blob(t.length,"keyCount"),R.seq(publicKey("key"),e,"keys"),publicKey("recentBlockhash")]);const d={numRequiredSignatures:a.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:a.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:a.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:a.Buffer.from(t),keys:this.accountKeys.map((e=>toBuffer(e.toBytes()))),recentBlockhash:E.default.decode(this.recentBlockhash)};let p=a.Buffer.alloc(2048);const c=o.encode(d,p);i.copy(p,c);return p.slice(0,c+i.length)}static from(e){let t=[...e];const r=guardedShift(t);if(r!==(r&j)){throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()")}const n=guardedShift(t);const i=guardedShift(t);const s=decodeLength(t);let o=[];for(let e=0;e<s;e++){const e=guardedSplice(t,0,U);o.push(new PublicKey(a.Buffer.from(e)))}const d=guardedSplice(t,0,U);const p=decodeLength(t);let c=[];for(let e=0;e<p;e++){const e=guardedShift(t);const r=decodeLength(t);const n=guardedSplice(t,0,r);const i=decodeLength(t);const s=guardedSplice(t,0,i);const o=E.default.encode(a.Buffer.from(s));c.push({programIdIndex:e,accounts:n,data:o})}const l={header:{numRequiredSignatures:r,numReadonlySignedAccounts:n,numReadonlyUnsignedAccounts:i},recentBlockhash:E.default.encode(a.Buffer.from(d)),accountKeys:o,instructions:c};return new Message(l)}}class MessageV0{constructor(e){this.header=void 0;this.staticAccountKeys=void 0;this.recentBlockhash=void 0;this.compiledInstructions=void 0;this.addressTableLookups=void 0;this.header=e.header;this.staticAccountKeys=e.staticAccountKeys;this.recentBlockhash=e.recentBlockhash;this.compiledInstructions=e.compiledInstructions;this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(const t of this.addressTableLookups){e+=t.readonlyIndexes.length+t.writableIndexes.length}return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length){throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups")}t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts){t=this.resolveAddressTableLookups(e.addressLookupTableAccounts)}else if(this.addressTableLookups.length>0){throw new Error("Failed to get account keys because address table lookups were not resolved")}return new MessageAccountKeys(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures;const r=this.staticAccountKeys.length;if(e>=r){const t=e-r;const a=this.addressTableLookups.reduce(((e,t)=>e+t.writableIndexes.length),0);return t<a}else if(e>=this.header.numRequiredSignatures){const a=e-t;const n=r-t;const i=n-this.header.numReadonlyUnsignedAccounts;return a<i}else{const r=t-this.header.numReadonlySignedAccounts;return e<r}}resolveAddressTableLookups(e){const t={writable:[],readonly:[]};for(const r of this.addressTableLookups){const a=e.find((e=>e.key.equals(r.accountKey)));if(!a){throw new Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`)}for(const e of r.writableIndexes){if(e<a.state.addresses.length){t.writable.push(a.state.addresses[e])}else{throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`)}}for(const e of r.readonlyIndexes){if(e<a.state.addresses.length){t.readonly.push(a.state.addresses[e])}else{throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`)}}}return t}static compile(e){const t=CompiledKeys.compile(e.instructions,e.payerKey);const r=new Array;const a={writable:new Array,readonly:new Array};const n=e.addressLookupTableAccounts||[];for(const e of n){const n=t.extractTableLookup(e);if(n!==undefined){const[e,{writable:t,readonly:i}]=n;r.push(e);a.writable.push(...t);a.readonly.push(...i)}}const[i,s]=t.getMessageComponents();const o=new MessageAccountKeys(s,a);const d=o.compileInstructions(e.instructions);return new MessageV0({header:i,staticAccountKeys:s,recentBlockhash:e.recentBlockhash,compiledInstructions:d,addressTableLookups:r})}serialize(){const e=Array();encodeLength(e,this.staticAccountKeys.length);const t=this.serializeInstructions();const r=Array();encodeLength(r,this.compiledInstructions.length);const a=this.serializeAddressTableLookups();const n=Array();encodeLength(n,this.addressTableLookups.length);const i=R.struct([R.u8("prefix"),R.struct([R.u8("numRequiredSignatures"),R.u8("numReadonlySignedAccounts"),R.u8("numReadonlyUnsignedAccounts")],"header"),R.blob(e.length,"staticAccountKeysLength"),R.seq(publicKey(),this.staticAccountKeys.length,"staticAccountKeys"),publicKey("recentBlockhash"),R.blob(r.length,"instructionsLength"),R.blob(t.length,"serializedInstructions"),R.blob(n.length,"addressTableLookupsLength"),R.blob(a.length,"serializedAddressTableLookups")]);const s=new Uint8Array(z);const o=1<<7;const d=i.encode({prefix:o,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map((e=>e.toBytes())),recentBlockhash:E.default.decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(n),serializedAddressTableLookups:a},s);return s.slice(0,d)}serializeInstructions(){let e=0;const t=new Uint8Array(z);for(const r of this.compiledInstructions){const a=Array();encodeLength(a,r.accountKeyIndexes.length);const n=Array();encodeLength(n,r.data.length);const i=R.struct([R.u8("programIdIndex"),R.blob(a.length,"encodedAccountKeyIndexesLength"),R.seq(R.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),R.blob(n.length,"encodedDataLength"),R.blob(r.data.length,"data")]);e+=i.encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(a),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(n),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0;const t=new Uint8Array(z);for(const r of this.addressTableLookups){const a=Array();encodeLength(a,r.writableIndexes.length);const n=Array();encodeLength(n,r.readonlyIndexes.length);const i=R.struct([publicKey("accountKey"),R.blob(a.length,"encodedWritableIndexesLength"),R.seq(R.u8(),r.writableIndexes.length,"writableIndexes"),R.blob(n.length,"encodedReadonlyIndexesLength"),R.seq(R.u8(),r.readonlyIndexes.length,"readonlyIndexes")]);e+=i.encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(a),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(n),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e];const r=guardedShift(t);const a=r&j;assert(r!==a,`Expected versioned message but received legacy message`);const n=a;assert(n===0,`Expected versioned message with version 0 but found version ${n}`);const i={numRequiredSignatures:guardedShift(t),numReadonlySignedAccounts:guardedShift(t),numReadonlyUnsignedAccounts:guardedShift(t)};const s=[];const o=decodeLength(t);for(let e=0;e<o;e++){s.push(new PublicKey(guardedSplice(t,0,U)))}const d=E.default.encode(guardedSplice(t,0,U));const p=decodeLength(t);const c=[];for(let e=0;e<p;e++){const e=guardedShift(t);const r=decodeLength(t);const a=guardedSplice(t,0,r);const n=decodeLength(t);const i=new Uint8Array(guardedSplice(t,0,n));c.push({programIdIndex:e,accountKeyIndexes:a,data:i})}const l=decodeLength(t);const u=[];for(let e=0;e<l;e++){const e=new PublicKey(guardedSplice(t,0,U));const r=decodeLength(t);const a=guardedSplice(t,0,r);const n=decodeLength(t);const i=guardedSplice(t,0,n);u.push({accountKey:e,writableIndexes:a,readonlyIndexes:i})}return new MessageV0({header:i,staticAccountKeys:s,recentBlockhash:d,compiledInstructions:c,addressTableLookups:u})}}const $={deserializeMessageVersion(e){const t=e[0];const r=t&j;if(r===t){return"legacy"}return r},deserialize:e=>{const t=$.deserializeMessageVersion(e);if(t==="legacy"){return Message.from(e)}if(t===0){return MessageV0.deserialize(e)}else{throw new Error(`Transaction message version ${t} deserialization is not supported`)}}};let K=function(e){e[e["BLOCKHEIGHT_EXCEEDED"]=0]="BLOCKHEIGHT_EXCEEDED";e[e["PROCESSED"]=1]="PROCESSED";e[e["TIMED_OUT"]=2]="TIMED_OUT";e[e["NONCE_INVALID"]=3]="NONCE_INVALID";return e}({});const W=a.Buffer.alloc(H).fill(0);class TransactionInstruction{constructor(e){this.keys=void 0;this.programId=void 0;this.data=a.Buffer.alloc(0);this.programId=e.programId;this.keys=e.keys;if(e.data){this.data=e.data}}toJSON(){return{keys:this.keys.map((({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r}))),programId:this.programId.toJSON(),data:[...this.data]}}}class Transaction{get signature(){if(this.signatures.length>0){return this.signatures[0].signature}return null}constructor(e){this.signatures=[];this.feePayer=void 0;this.instructions=[];this.recentBlockhash=void 0;this.lastValidBlockHeight=void 0;this.nonceInfo=void 0;this.minNonceContextSlot=void 0;this._message=void 0;this._json=void 0;if(!e){return}if(e.feePayer){this.feePayer=e.feePayer}if(e.signatures){this.signatures=e.signatures}if(Object.prototype.hasOwnProperty.call(e,"nonceInfo")){const{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t;this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t;this.lastValidBlockHeight=r}else{const{recentBlockhash:t,nonceInfo:r}=e;if(r){this.nonceInfo=r}this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((e=>e.toJSON())),signers:this.signatures.map((({publicKey:e})=>e.toJSON()))}}add(...e){if(e.length===0){throw new Error("No instructions")}e.forEach((e=>{if("instructions"in e){this.instructions=this.instructions.concat(e.instructions)}else if("data"in e&&"programId"in e&&"keys"in e){this.instructions.push(e)}else{this.instructions.push(new TransactionInstruction(e))}}));return this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json)){return this._message}let e;let t;if(this.nonceInfo){e=this.nonceInfo.nonce;if(this.instructions[0]!=this.nonceInfo.nonceInstruction){t=[this.nonceInfo.nonceInstruction,...this.instructions]}else{t=this.instructions}}else{e=this.recentBlockhash;t=this.instructions}if(!e){throw new Error("Transaction recentBlockhash required")}if(t.length<1){console.warn("No instructions provided")}let r;if(this.feePayer){r=this.feePayer}else if(this.signatures.length>0&&this.signatures[0].publicKey){r=this.signatures[0].publicKey}else{throw new Error("Transaction fee payer required")}for(let e=0;e<t.length;e++){if(t[e].programId===undefined){throw new Error(`Transaction instruction index ${e} has undefined program id`)}}const a=[];const n=[];t.forEach((e=>{e.keys.forEach((e=>{n.push({...e})}));const t=e.programId.toString();if(!a.includes(t)){a.push(t)}}));a.forEach((e=>{n.push({pubkey:new PublicKey(e),isSigner:false,isWritable:false})}));const i=[];n.forEach((e=>{const t=e.pubkey.toString();const r=i.findIndex((e=>e.pubkey.toString()===t));if(r>-1){i[r].isWritable=i[r].isWritable||e.isWritable;i[r].isSigner=i[r].isSigner||e.isSigner}else{i.push(e)}}));i.sort((function(e,t){if(e.isSigner!==t.isSigner){return e.isSigner?-1:1}if(e.isWritable!==t.isWritable){return e.isWritable?-1:1}const r={localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:false,numeric:false,caseFirst:"lower"};return e.pubkey.toBase58().localeCompare(t.pubkey.toBase58(),"en",r)}));const s=i.findIndex((e=>e.pubkey.equals(r)));if(s>-1){const[e]=i.splice(s,1);e.isSigner=true;e.isWritable=true;i.unshift(e)}else{i.unshift({pubkey:r,isSigner:true,isWritable:true})}for(const e of this.signatures){const t=i.findIndex((t=>t.pubkey.equals(e.publicKey)));if(t>-1){if(!i[t].isSigner){i[t].isSigner=true;console.warn("Transaction references a signature that is unnecessary, "+"only the fee payer and instruction signer accounts should sign a transaction. "+"This behavior is deprecated and will throw an error in the next major version release.")}}else{throw new Error(`unknown signer: ${e.publicKey.toString()}`)}}let o=0;let d=0;let p=0;const c=[];const l=[];i.forEach((({pubkey:e,isSigner:t,isWritable:r})=>{if(t){c.push(e.toString());o+=1;if(!r){d+=1}}else{l.push(e.toString());if(!r){p+=1}}}));const u=c.concat(l);const m=t.map((e=>{const{data:t,programId:r}=e;return{programIdIndex:u.indexOf(r.toString()),accounts:e.keys.map((e=>u.indexOf(e.pubkey.toString()))),data:E.default.encode(t)}}));m.forEach((e=>{assert(e.programIdIndex>=0);e.accounts.forEach((e=>assert(e>=0)))}));return new Message({header:{numRequiredSignatures:o,numReadonlySignedAccounts:d,numReadonlyUnsignedAccounts:p},accountKeys:u,recentBlockhash:e,instructions:m})}_compile(){const e=this.compileMessage();const t=e.accountKeys.slice(0,e.header.numRequiredSignatures);if(this.signatures.length===t.length){const r=this.signatures.every(((e,r)=>t[r].equals(e.publicKey)));if(r)return e}this.signatures=t.map((e=>({signature:null,publicKey:e})));return e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(e.length===0){throw new Error("No signers")}const t=new Set;this.signatures=e.filter((e=>{const r=e.toString();if(t.has(r)){return false}else{t.add(r);return true}})).map((e=>({signature:null,publicKey:e})))}sign(...e){if(e.length===0){throw new Error("No signers")}const t=new Set;const r=[];for(const a of e){const e=a.publicKey.toString();if(t.has(e)){continue}else{t.add(e);r.push(a)}}this.signatures=r.map((e=>({signature:null,publicKey:e.publicKey})));const a=this._compile();this._partialSign(a,...r)}partialSign(...e){if(e.length===0){throw new Error("No signers")}const t=new Set;const r=[];for(const a of e){const e=a.publicKey.toString();if(t.has(e)){continue}else{t.add(e);r.push(a)}}const a=this._compile();this._partialSign(a,...r)}_partialSign(e,...t){const r=e.serialize();t.forEach((e=>{const t=sign(r,e.secretKey);this._addSignature(e.publicKey,toBuffer(t))}))}addSignature(e,t){this._compile();this._addSignature(e,t)}_addSignature(e,t){assert(t.length===64);const r=this.signatures.findIndex((t=>e.equals(t.publicKey)));if(r<0){throw new Error(`unknown signer: ${e.toString()}`)}this.signatures[r].signature=a.Buffer.from(t)}verifySignatures(e=true){const t=this._getMessageSignednessErrors(this.serializeMessage(),e);return!t}_getMessageSignednessErrors(e,t){const r={};for(const{signature:a,publicKey:n}of this.signatures){if(a===null){if(t){(r.missing||=[]).push(n)}}else{if(!B(a,e,n.toBytes())){(r.invalid||=[]).push(n)}}}return r.invalid||r.missing?r:undefined}serialize(e){const{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:true,verifySignatures:true},e);const a=this.serializeMessage();if(r){const e=this._getMessageSignednessErrors(a,t);if(e){let t="Signature verification failed.";if(e.invalid){t+=`\nInvalid signature for public key${e.invalid.length===1?"":"(s)"} [\`${e.invalid.map((e=>e.toBase58())).join("`, `")}\`].`}if(e.missing){t+=`\nMissing signature for public key${e.missing.length===1?"":"(s)"} [\`${e.missing.map((e=>e.toBase58())).join("`, `")}\`].`}throw new Error(t)}}return this._serialize(a)}_serialize(e){const{signatures:t}=this;const r=[];encodeLength(r,t.length);const n=r.length+t.length*64+e.length;const i=a.Buffer.alloc(n);assert(t.length<256);a.Buffer.from(r).copy(i,0);t.forEach((({signature:e},t)=>{if(e!==null){assert(e.length===64,`signature has invalid length`);a.Buffer.from(e).copy(i,r.length+t*64)}}));e.copy(i,r.length+t.length*64);assert(i.length<=z,`Transaction too large: ${i.length} > ${z}`);return i}get keys(){assert(this.instructions.length===1);return this.instructions[0].keys.map((e=>e.pubkey))}get programId(){assert(this.instructions.length===1);return this.instructions[0].programId}get data(){assert(this.instructions.length===1);return this.instructions[0].data}static from(e){let t=[...e];const r=decodeLength(t);let n=[];for(let e=0;e<r;e++){const e=guardedSplice(t,0,H);n.push(E.default.encode(a.Buffer.from(e)))}return Transaction.populate(Message.from(t),n)}static populate(e,t=[]){const r=new Transaction;r.recentBlockhash=e.recentBlockhash;if(e.header.numRequiredSignatures>0){r.feePayer=e.accountKeys[0]}t.forEach(((t,a)=>{const n={signature:t==E.default.encode(W)?null:E.default.decode(t),publicKey:e.accountKeys[a]};r.signatures.push(n)}));e.instructions.forEach((t=>{const a=t.accounts.map((t=>{const a=e.accountKeys[t];return{pubkey:a,isSigner:r.signatures.some((e=>e.publicKey.toString()===a.toString()))||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}}));r.instructions.push(new TransactionInstruction({keys:a,programId:e.accountKeys[t.programIdIndex],data:E.default.decode(t.data)}))}));r._message=e;r._json=r.toJSON();return r}}class TransactionMessage{constructor(e){this.payerKey=void 0;this.instructions=void 0;this.recentBlockhash=void 0;this.payerKey=e.payerKey;this.instructions=e.instructions;this.recentBlockhash=e.recentBlockhash}static decompile(e,t){const{header:r,compiledInstructions:a,recentBlockhash:n}=e;const{numRequiredSignatures:i,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:o}=r;const d=i-s;assert(d>0,"Message header is invalid");const p=e.staticAccountKeys.length-i-o;assert(p>=0,"Message header is invalid");const c=e.getAccountKeys(t);const l=c.get(0);if(l===undefined){throw new Error("Failed to decompile message because no account keys were found")}const u=[];for(const e of a){const t=[];for(const a of e.accountKeyIndexes){const e=c.get(a);if(e===undefined){throw new Error(`Failed to find key for account key index ${a}`)}const n=a<i;let s;if(n){s=a<d}else if(a<c.staticAccountKeys.length){s=a-i<p}else{s=a-c.staticAccountKeys.length<c.accountKeysFromLookups.writable.length}t.push({pubkey:e,isSigner:a<r.numRequiredSignatures,isWritable:s})}const a=c.get(e.programIdIndex);if(a===undefined){throw new Error(`Failed to find program id for program id index ${e.programIdIndex}`)}u.push(new TransactionInstruction({programId:a,data:toBuffer(e.data),keys:t}))}return new TransactionMessage({payerKey:l,instructions:u,recentBlockhash:n})}compileToLegacyMessage(){return Message.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(e){return MessageV0.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:e})}}class VersionedTransaction{get version(){return this.message.version}constructor(e,t){this.signatures=void 0;this.message=void 0;if(t!==undefined){assert(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures");this.signatures=t}else{const t=[];for(let r=0;r<e.header.numRequiredSignatures;r++){t.push(new Uint8Array(H))}this.signatures=t}this.message=e}serialize(){const e=this.message.serialize();const t=Array();encodeLength(t,this.signatures.length);const r=R.struct([R.blob(t.length,"encodedSignaturesLength"),R.seq(signature(),this.signatures.length,"signatures"),R.blob(e.length,"serializedMessage")]);const a=new Uint8Array(2048);const n=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},a);return a.slice(0,n)}static deserialize(e){let t=[...e];const r=[];const a=decodeLength(t);for(let e=0;e<a;e++){r.push(new Uint8Array(guardedSplice(t,0,H)))}const n=$.deserialize(new Uint8Array(t));return new VersionedTransaction(n,r)}sign(e){const t=this.message.serialize();const r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const a of e){const e=r.findIndex((e=>e.equals(a.publicKey)));assert(e>=0,`Cannot sign with non signer key ${a.publicKey.toBase58()}`);this.signatures[e]=sign(t,a.secretKey)}}addSignature(e,t){assert(t.byteLength===64,"Signature must be 64 bytes long");const r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);const a=r.findIndex((t=>t.equals(e)));assert(a>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`);this.signatures[a]=t}}const G=160;const Y=64;const J=G/Y;const X=1e3/J;const Q=new PublicKey("SysvarC1ock11111111111111111111111111111111");const ee=new PublicKey("SysvarEpochSchedu1e111111111111111111111111");const te=new PublicKey("Sysvar1nstructions1111111111111111111111111");const re=new PublicKey("SysvarRecentB1ockHashes11111111111111111111");const ae=new PublicKey("SysvarRent111111111111111111111111111111111");const ne=new PublicKey("SysvarRewards111111111111111111111111111111");const ie=new PublicKey("SysvarS1otHashes111111111111111111111111111");const se=new PublicKey("SysvarS1otHistory11111111111111111111111111");const oe=new PublicKey("SysvarStakeHistory1111111111111111111111111");class SendTransactionError extends Error{constructor({action:e,signature:t,transactionMessage:r,logs:a}){const n=a?`Logs: \n${JSON.stringify(a.slice(-10),null,2)}. `:"";const i="\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.";let s;switch(e){case"send":s=`Transaction ${t} resulted in an error. \n`+`${r}. `+n+i;break;case"simulate":s=`Simulation failed. \nMessage: ${r}. \n`+n+i;break;default:{s=`Unknown action '${(e=>e)(e)}'`}}super(s);this.signature=void 0;this.transactionMessage=void 0;this.transactionLogs=void 0;this.signature=t;this.transactionMessage=r;this.transactionLogs=a?a:undefined}get transactionError(){return{message:this.transactionMessage,logs:Array.isArray(this.transactionLogs)?this.transactionLogs:undefined}}get logs(){const e=this.transactionLogs;if(e!=null&&typeof e==="object"&&"then"in e){return undefined}return e}async getLogs(e){if(!Array.isArray(this.transactionLogs)){this.transactionLogs=new Promise(((t,r)=>{e.getTransaction(this.signature).then((e=>{if(e&&e.meta&&e.meta.logMessages){const r=e.meta.logMessages;this.transactionLogs=r;t(r)}else{r(new Error("Log messages not found"))}})).catch(r)}))}return await this.transactionLogs}}const de={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class SolanaJSONRPCError extends Error{constructor({code:e,message:t,data:r},a){super(a!=null?`${a}: ${t}`:t);this.code=void 0;this.data=void 0;this.code=e;this.data=r;this.name="SolanaJSONRPCError"}}async function sendAndConfirmTransaction(e,t,r,a){const n=a&&{skipPreflight:a.skipPreflight,preflightCommitment:a.preflightCommitment||a.commitment,maxRetries:a.maxRetries,minContextSlot:a.minContextSlot};const i=await e.sendTransaction(t,r,n);let s;if(t.recentBlockhash!=null&&t.lastValidBlockHeight!=null){s=(await e.confirmTransaction({abortSignal:a?.abortSignal,signature:i,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},a&&a.commitment)).value}else if(t.minNonceContextSlot!=null&&t.nonceInfo!=null){const{nonceInstruction:r}=t.nonceInfo;const n=r.keys[0].pubkey;s=(await e.confirmTransaction({abortSignal:a?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:n,nonceValue:t.nonceInfo.nonce,signature:i},a&&a.commitment)).value}else{if(a?.abortSignal!=null){console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was "+"supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` "+"or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.")}s=(await e.confirmTransaction(i,a&&a.commitment)).value}if(s.err){if(i!=null){throw new SendTransactionError({action:"send",signature:i,transactionMessage:`Status: (${JSON.stringify(s)})`})}throw new Error(`Transaction ${i} failed (${JSON.stringify(s)})`)}return i}function sleep(e){return new Promise((t=>setTimeout(t,e)))}function encodeData(e,t){const r=e.layout.span>=0?e.layout.span:getAlloc(e,t);const n=a.Buffer.alloc(r);const i=Object.assign({instruction:e.index},t);e.layout.encode(i,n);return n}function decodeData$1(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.instruction!==e.index){throw new Error(`invalid instruction; instruction index mismatch ${r.instruction} != ${e.index}`)}return r}const pe=R.nu64("lamportsPerSignature");const ce=R.struct([R.u32("version"),R.u32("state"),publicKey("authorizedPubkey"),publicKey("nonce"),R.struct([pe],"feeCalculator")]);const le=ce.span;class NonceAccount{constructor(e){this.authorizedPubkey=void 0;this.nonce=void 0;this.feeCalculator=void 0;this.authorizedPubkey=e.authorizedPubkey;this.nonce=e.nonce;this.feeCalculator=e.feeCalculator}static fromAccountData(e){const t=ce.decode(toBuffer(e),0);return new NonceAccount({authorizedPubkey:new PublicKey(t.authorizedPubkey),nonce:new PublicKey(t.nonce).toString(),feeCalculator:t.feeCalculator})}}function u64(e){const t=p.blob(8,e);const r=t.decode.bind(t);const a=t.encode.bind(t);const n=t;const i=c.getU64Codec();n.decode=(e,t)=>{const a=r(e,t);return i.decode(a)};n.encode=(e,t,r)=>{const n=i.encode(e);return a(n,t,r)};return n}class SystemInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=R.u32("instruction");const r=t.decode(e.data);let a;for(const[e,t]of Object.entries(ue)){if(t.index==r){a=e;break}}if(!a){throw new Error("Instruction type incorrect; not a SystemInstruction")}return a}static decodeCreateAccount(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,2);const{lamports:t,space:r,programId:a}=decodeData$1(ue.Create,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,lamports:t,space:r,programId:new PublicKey(a)}}static decodeTransfer(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,2);const{lamports:t}=decodeData$1(ue.Transfer,e.data);return{fromPubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);const{lamports:t,seed:r,programId:a}=decodeData$1(ue.TransferWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,basePubkey:e.keys[1].pubkey,toPubkey:e.keys[2].pubkey,lamports:t,seed:r,programId:new PublicKey(a)}}static decodeAllocate(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,1);const{space:t}=decodeData$1(ue.Allocate,e.data);return{accountPubkey:e.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,1);const{base:t,seed:r,space:a,programId:n}=decodeData$1(ue.AllocateWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new PublicKey(t),seed:r,space:a,programId:new PublicKey(n)}}static decodeAssign(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,1);const{programId:t}=decodeData$1(ue.Assign,e.data);return{accountPubkey:e.keys[0].pubkey,programId:new PublicKey(t)}}static decodeAssignWithSeed(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,1);const{base:t,seed:r,programId:a}=decodeData$1(ue.AssignWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new PublicKey(t),seed:r,programId:new PublicKey(a)}}static decodeCreateWithSeed(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,2);const{base:t,seed:r,lamports:a,space:n,programId:i}=decodeData$1(ue.CreateWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,basePubkey:new PublicKey(t),seed:r,lamports:a,space:n,programId:new PublicKey(i)}}static decodeNonceInitialize(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);const{authorized:t}=decodeData$1(ue.InitializeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:new PublicKey(t)}}static decodeNonceAdvance(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);decodeData$1(ue.AdvanceNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static decodeNonceWithdraw(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,5);const{lamports:t}=decodeData$1(ue.WithdrawNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,2);const{authorized:t}=decodeData$1(ue.AuthorizeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[1].pubkey,newAuthorizedPubkey:new PublicKey(t)}}static checkProgramId(e){if(!e.equals(SystemProgram.programId)){throw new Error("invalid instruction; programId is not SystemProgram")}}static checkKeyLength(e,t){if(e.length<t){throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}}const ue=Object.freeze({Create:{index:0,layout:R.struct([R.u32("instruction"),R.ns64("lamports"),R.ns64("space"),publicKey("programId")])},Assign:{index:1,layout:R.struct([R.u32("instruction"),publicKey("programId")])},Transfer:{index:2,layout:R.struct([R.u32("instruction"),u64("lamports")])},CreateWithSeed:{index:3,layout:R.struct([R.u32("instruction"),publicKey("base"),rustString("seed"),R.ns64("lamports"),R.ns64("space"),publicKey("programId")])},AdvanceNonceAccount:{index:4,layout:R.struct([R.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:R.struct([R.u32("instruction"),R.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:R.struct([R.u32("instruction"),publicKey("authorized")])},AuthorizeNonceAccount:{index:7,layout:R.struct([R.u32("instruction"),publicKey("authorized")])},Allocate:{index:8,layout:R.struct([R.u32("instruction"),R.ns64("space")])},AllocateWithSeed:{index:9,layout:R.struct([R.u32("instruction"),publicKey("base"),rustString("seed"),R.ns64("space"),publicKey("programId")])},AssignWithSeed:{index:10,layout:R.struct([R.u32("instruction"),publicKey("base"),rustString("seed"),publicKey("programId")])},TransferWithSeed:{index:11,layout:R.struct([R.u32("instruction"),u64("lamports"),rustString("seed"),publicKey("programId")])},UpgradeNonceAccount:{index:12,layout:R.struct([R.u32("instruction")])}});class SystemProgram{constructor(){}static createAccount(e){const t=ue.Create;const r=encodeData(t,{lamports:e.lamports,space:e.space,programId:toBuffer(e.programId.toBuffer())});return new TransactionInstruction({keys:[{pubkey:e.fromPubkey,isSigner:true,isWritable:true},{pubkey:e.newAccountPubkey,isSigner:true,isWritable:true}],programId:this.programId,data:r})}static transfer(e){let t;let r;if("basePubkey"in e){const a=ue.TransferWithSeed;t=encodeData(a,{lamports:BigInt(e.lamports),seed:e.seed,programId:toBuffer(e.programId.toBuffer())});r=[{pubkey:e.fromPubkey,isSigner:false,isWritable:true},{pubkey:e.basePubkey,isSigner:true,isWritable:false},{pubkey:e.toPubkey,isSigner:false,isWritable:true}]}else{const a=ue.Transfer;t=encodeData(a,{lamports:BigInt(e.lamports)});r=[{pubkey:e.fromPubkey,isSigner:true,isWritable:true},{pubkey:e.toPubkey,isSigner:false,isWritable:true}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}static assign(e){let t;let r;if("basePubkey"in e){const a=ue.AssignWithSeed;t=encodeData(a,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,programId:toBuffer(e.programId.toBuffer())});r=[{pubkey:e.accountPubkey,isSigner:false,isWritable:true},{pubkey:e.basePubkey,isSigner:true,isWritable:false}]}else{const a=ue.Assign;t=encodeData(a,{programId:toBuffer(e.programId.toBuffer())});r=[{pubkey:e.accountPubkey,isSigner:true,isWritable:true}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){const t=ue.CreateWithSeed;const r=encodeData(t,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:toBuffer(e.programId.toBuffer())});let a=[{pubkey:e.fromPubkey,isSigner:true,isWritable:true},{pubkey:e.newAccountPubkey,isSigner:false,isWritable:true}];if(!e.basePubkey.equals(e.fromPubkey)){a.push({pubkey:e.basePubkey,isSigner:true,isWritable:false})}return new TransactionInstruction({keys:a,programId:this.programId,data:r})}static createNonceAccount(e){const t=new Transaction;if("basePubkey"in e&&"seed"in e){t.add(SystemProgram.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:le,programId:this.programId}))}else{t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:le,programId:this.programId}))}const r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};t.add(this.nonceInitialize(r));return t}static nonceInitialize(e){const t=ue.InitializeNonceAccount;const r=encodeData(t,{authorized:toBuffer(e.authorizedPubkey.toBuffer())});const a={keys:[{pubkey:e.noncePubkey,isSigner:false,isWritable:true},{pubkey:re,isSigner:false,isWritable:false},{pubkey:ae,isSigner:false,isWritable:false}],programId:this.programId,data:r};return new TransactionInstruction(a)}static nonceAdvance(e){const t=ue.AdvanceNonceAccount;const r=encodeData(t);const a={keys:[{pubkey:e.noncePubkey,isSigner:false,isWritable:true},{pubkey:re,isSigner:false,isWritable:false},{pubkey:e.authorizedPubkey,isSigner:true,isWritable:false}],programId:this.programId,data:r};return new TransactionInstruction(a)}static nonceWithdraw(e){const t=ue.WithdrawNonceAccount;const r=encodeData(t,{lamports:e.lamports});return new TransactionInstruction({keys:[{pubkey:e.noncePubkey,isSigner:false,isWritable:true},{pubkey:e.toPubkey,isSigner:false,isWritable:true},{pubkey:re,isSigner:false,isWritable:false},{pubkey:ae,isSigner:false,isWritable:false},{pubkey:e.authorizedPubkey,isSigner:true,isWritable:false}],programId:this.programId,data:r})}static nonceAuthorize(e){const t=ue.AuthorizeNonceAccount;const r=encodeData(t,{authorized:toBuffer(e.newAuthorizedPubkey.toBuffer())});return new TransactionInstruction({keys:[{pubkey:e.noncePubkey,isSigner:false,isWritable:true},{pubkey:e.authorizedPubkey,isSigner:true,isWritable:false}],programId:this.programId,data:r})}static allocate(e){let t;let r;if("basePubkey"in e){const a=ue.AllocateWithSeed;t=encodeData(a,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:toBuffer(e.programId.toBuffer())});r=[{pubkey:e.accountPubkey,isSigner:false,isWritable:true},{pubkey:e.basePubkey,isSigner:true,isWritable:false}]}else{const a=ue.Allocate;t=encodeData(a,{space:e.space});r=[{pubkey:e.accountPubkey,isSigner:true,isWritable:true}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}}SystemProgram.programId=new PublicKey("11111111111111111111111111111111");const me=z-300;class Loader{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/Loader.chunkSize)+1+1)}static async load(e,t,r,n,i){{const a=await e.getMinimumBalanceForRentExemption(i.length);const s=await e.getAccountInfo(r.publicKey,"confirmed");let o=null;if(s!==null){if(s.executable){console.error("Program load failed, account is already executable");return false}if(s.data.length!==i.length){o=o||new Transaction;o.add(SystemProgram.allocate({accountPubkey:r.publicKey,space:i.length}))}if(!s.owner.equals(n)){o=o||new Transaction;o.add(SystemProgram.assign({accountPubkey:r.publicKey,programId:n}))}if(s.lamports<a){o=o||new Transaction;o.add(SystemProgram.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:a-s.lamports}))}}else{o=(new Transaction).add(SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:a>0?a:1,space:i.length,programId:n}))}if(o!==null){await sendAndConfirmTransaction(e,o,[t,r],{commitment:"confirmed"})}}const s=R.struct([R.u32("instruction"),R.u32("offset"),R.u32("bytesLength"),R.u32("bytesLengthPadding"),R.seq(R.u8("byte"),R.offset(R.u32(),-8),"bytes")]);const o=Loader.chunkSize;let d=0;let p=i;let c=[];while(p.length>0){const i=p.slice(0,o);const l=a.Buffer.alloc(o+16);s.encode({instruction:0,offset:d,bytes:i,bytesLength:0,bytesLengthPadding:0},l);const u=(new Transaction).add({keys:[{pubkey:r.publicKey,isSigner:true,isWritable:true}],programId:n,data:l});c.push(sendAndConfirmTransaction(e,u,[t,r],{commitment:"confirmed"}));if(e._rpcEndpoint.includes("solana.com")){const e=4;await sleep(1e3/e)}d+=o;p=p.slice(o)}await Promise.all(c);{const i=R.struct([R.u32("instruction")]);const s=a.Buffer.alloc(i.span);i.encode({instruction:1},s);const o=(new Transaction).add({keys:[{pubkey:r.publicKey,isSigner:true,isWritable:true},{pubkey:ae,isSigner:false,isWritable:false}],programId:n,data:s});const d="processed";const p=await e.sendTransaction(o,[t,r],{preflightCommitment:d});const{context:c,value:l}=await e.confirmTransaction({signature:p,lastValidBlockHeight:o.lastValidBlockHeight,blockhash:o.recentBlockhash},d);if(l.err){throw new Error(`Transaction ${p} failed (${JSON.stringify(l)})`)}while(true){try{const t=await e.getSlot({commitment:d});if(t>c.slot){break}}catch{}await new Promise((e=>setTimeout(e,Math.round(X/2))))}}return true}}Loader.chunkSize=me;const he=new PublicKey("BPFLoader2111111111111111111111111111111111");class BpfLoader{static getMinNumSignatures(e){return Loader.getMinNumSignatures(e)}static load(e,t,r,a,n){return Loader.load(e,t,r,n,a)}}function getDefaultExportFromCjs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e["default"]:e}var fe={exports:{}};var ge;var ye;function requireMs(){if(ye)return ge;ye=1;var e=1e3;var t=e*60;var r=t*60;var a=r*24;var n=a*7;var i=a*365.25;ge=function(e,t){t=t||{};var r=typeof e;if(r==="string"&&e.length>0){return parse(e)}else if(r==="number"&&isFinite(e)){return t.long?fmtLong(e):fmtShort(e)}throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse(s){s=String(s);if(s.length>100){return}var o=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(s);if(!o){return}var d=parseFloat(o[1]);var p=(o[2]||"ms").toLowerCase();switch(p){case"years":case"year":case"yrs":case"yr":case"y":return d*i;case"weeks":case"week":case"w":return d*n;case"days":case"day":case"d":return d*a;case"hours":case"hour":case"hrs":case"hr":case"h":return d*r;case"minutes":case"minute":case"mins":case"min":case"m":return d*t;case"seconds":case"second":case"secs":case"sec":case"s":return d*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return d;default:return undefined}}function fmtShort(n){var i=Math.abs(n);if(i>=a){return Math.round(n/a)+"d"}if(i>=r){return Math.round(n/r)+"h"}if(i>=t){return Math.round(n/t)+"m"}if(i>=e){return Math.round(n/e)+"s"}return n+"ms"}function fmtLong(n){var i=Math.abs(n);if(i>=a){return plural(n,i,a,"day")}if(i>=r){return plural(n,i,r,"hour")}if(i>=t){return plural(n,i,t,"minute")}if(i>=e){return plural(n,i,e,"second")}return n+" ms"}function plural(e,t,r,a){var n=t>=r*1.5;return Math.round(e/r)+" "+a+(n?"s":"")}return ge}
/*!
 * humanize-ms - index.js
 * Copyright(c) 2014 dead_horse <dead_horse@qq.com>
 * MIT Licensed
 */var _e;var ve;function requireHumanizeMs(){if(ve)return _e;ve=1;var e=T.default;var t=requireMs();_e=function(r){if(typeof r==="number")return r;var a=t(r);if(a===undefined){var n=new Error(e.format("humanize-ms(%j) result undefined",r));console.warn(n.stack)}return a};return _e}var be;var we;function requireConstants(){if(we)return be;we=1;be={CURRENT_ID:Symbol("agentkeepalive#currentId"),CREATE_ID:Symbol("agentkeepalive#createId"),INIT_SOCKET:Symbol("agentkeepalive#initSocket"),CREATE_HTTPS_CONNECTION:Symbol("agentkeepalive#createHttpsConnection"),SOCKET_CREATED_TIME:Symbol("agentkeepalive#socketCreatedTime"),SOCKET_NAME:Symbol("agentkeepalive#socketName"),SOCKET_REQUEST_COUNT:Symbol("agentkeepalive#socketRequestCount"),SOCKET_REQUEST_FINISHED_COUNT:Symbol("agentkeepalive#socketRequestFinishedCount")};return be}var Se;var Ee;function requireAgent(){if(Ee)return Se;Ee=1;const e=O.default.Agent;const t=requireHumanizeMs();const r=T.default.debuglog("agentkeepalive");const{INIT_SOCKET:a,CURRENT_ID:n,CREATE_ID:i,SOCKET_CREATED_TIME:s,SOCKET_NAME:o,SOCKET_REQUEST_COUNT:d,SOCKET_REQUEST_FINISHED_COUNT:p}=requireConstants();let c=1;const l=parseInt(process.version.split(".",1)[0].substring(1));if(l>=11&&l<=12){c=2}else if(l>=13){c=3}function deprecate(e){console.log("[agentkeepalive:deprecated] %s",e)}class Agent extends e{constructor(e){e=e||{};e.keepAlive=e.keepAlive!==false;if(e.freeSocketTimeout===undefined){e.freeSocketTimeout=4e3}if(e.keepAliveTimeout){deprecate("options.keepAliveTimeout is deprecated, please use options.freeSocketTimeout instead");e.freeSocketTimeout=e.keepAliveTimeout;delete e.keepAliveTimeout}if(e.freeSocketKeepAliveTimeout){deprecate("options.freeSocketKeepAliveTimeout is deprecated, please use options.freeSocketTimeout instead");e.freeSocketTimeout=e.freeSocketKeepAliveTimeout;delete e.freeSocketKeepAliveTimeout}if(e.timeout===undefined){e.timeout=Math.max(e.freeSocketTimeout*2,8e3)}e.timeout=t(e.timeout);e.freeSocketTimeout=t(e.freeSocketTimeout);e.socketActiveTTL=e.socketActiveTTL?t(e.socketActiveTTL):0;super(e);this[n]=0;this.createSocketCount=0;this.createSocketCountLastCheck=0;this.createSocketErrorCount=0;this.createSocketErrorCountLastCheck=0;this.closeSocketCount=0;this.closeSocketCountLastCheck=0;this.errorSocketCount=0;this.errorSocketCountLastCheck=0;this.requestCount=0;this.requestCountLastCheck=0;this.timeoutSocketCount=0;this.timeoutSocketCountLastCheck=0;this.on("free",(e=>{const t=this.calcSocketTimeout(e);if(t>0&&e.timeout!==t){e.setTimeout(t)}}))}get freeSocketKeepAliveTimeout(){deprecate("agent.freeSocketKeepAliveTimeout is deprecated, please use agent.options.freeSocketTimeout instead");return this.options.freeSocketTimeout}get timeout(){deprecate("agent.timeout is deprecated, please use agent.options.timeout instead");return this.options.timeout}get socketActiveTTL(){deprecate("agent.socketActiveTTL is deprecated, please use agent.options.socketActiveTTL instead");return this.options.socketActiveTTL}calcSocketTimeout(e){let t=this.options.freeSocketTimeout;const r=this.options.socketActiveTTL;if(r){const a=Date.now()-e[s];const n=r-a;if(n<=0){return n}if(t&&n<t){t=n}}if(t){const r=e.freeSocketTimeout||e.freeSocketKeepAliveTimeout;return r||t}}keepSocketAlive(e){const t=super.keepSocketAlive(e);if(!t)return t;const a=this.calcSocketTimeout(e);if(typeof a==="undefined"){return true}if(a<=0){r("%s(requests: %s, finished: %s) free but need to destroy by TTL, request count %s, diff is %s",e[o],e[d],e[p],a);return false}if(e.timeout!==a){e.setTimeout(a)}return true}reuseSocket(...e){super.reuseSocket(...e);const t=e[0];const a=e[1];a.reusedSocket=true;const n=this.options.timeout;if(getSocketTimeout(t)!==n){t.setTimeout(n);r("%s reset timeout to %sms",t[o],n)}t[d]++;r("%s(requests: %s, finished: %s) reuse on addRequest, timeout %sms",t[o],t[d],t[p],getSocketTimeout(t))}[i](){const e=this[n]++;if(this[n]===Number.MAX_SAFE_INTEGER)this[n]=0;return e}[a](e,t){if(t.timeout){const r=getSocketTimeout(e);if(!r){e.setTimeout(t.timeout)}}if(this.options.keepAlive){e.setNoDelay(true)}this.createSocketCount++;if(this.options.socketActiveTTL){e[s]=Date.now()}e[o]=`sock[${this[i]()}#${t._agentKey}]`.split("-----BEGIN",1)[0];e[d]=1;e[p]=0;installListeners(this,e,t)}createConnection(e,t){let r=false;const onNewCreate=(n,i)=>{if(r)return;r=true;if(n){this.createSocketErrorCount++;return t(n)}this[a](i,e);t(n,i)};const n=super.createConnection(e,onNewCreate);if(n)onNewCreate(null,n);return n}get statusChanged(){const e=this.createSocketCount!==this.createSocketCountLastCheck||this.createSocketErrorCount!==this.createSocketErrorCountLastCheck||this.closeSocketCount!==this.closeSocketCountLastCheck||this.errorSocketCount!==this.errorSocketCountLastCheck||this.timeoutSocketCount!==this.timeoutSocketCountLastCheck||this.requestCount!==this.requestCountLastCheck;if(e){this.createSocketCountLastCheck=this.createSocketCount;this.createSocketErrorCountLastCheck=this.createSocketErrorCount;this.closeSocketCountLastCheck=this.closeSocketCount;this.errorSocketCountLastCheck=this.errorSocketCount;this.timeoutSocketCountLastCheck=this.timeoutSocketCount;this.requestCountLastCheck=this.requestCount}return e}getCurrentStatus(){return{createSocketCount:this.createSocketCount,createSocketErrorCount:this.createSocketErrorCount,closeSocketCount:this.closeSocketCount,errorSocketCount:this.errorSocketCount,timeoutSocketCount:this.timeoutSocketCount,requestCount:this.requestCount,freeSockets:inspect(this.freeSockets),sockets:inspect(this.sockets),requests:inspect(this.requests)}}}function getSocketTimeout(e){return e.timeout||e._idleTimeout}function installListeners(e,t,a){r("%s create, timeout %sms",t[o],getSocketTimeout(t));function onFree(){if(!t._httpMessage&&t[d]===1)return;t[p]++;e.requestCount++;r("%s(requests: %s, finished: %s) free",t[o],t[d],t[p]);const n=e.getName(a);if(t.writable&&e.requests[n]&&e.requests[n].length){t[d]++;r("%s(requests: %s, finished: %s) will be reuse on agent free event",t[o],t[d],t[p])}}t.on("free",onFree);function onClose(a){r("%s(requests: %s, finished: %s) close, isError: %s",t[o],t[d],t[p],a);e.closeSocketCount++}t.on("close",onClose);function onTimeout(){const n=t.listeners("timeout").length;const i=getSocketTimeout(t);const s=t._httpMessage;const l=s&&s.listeners("timeout").length||0;r("%s(requests: %s, finished: %s) timeout after %sms, listeners %s, defaultTimeoutListenerCount %s, hasHttpRequest %s, HttpRequest timeoutListenerCount %s",t[o],t[d],t[p],i,n,c,!!s,l);if(r.enabled){r("timeout listeners: %s",t.listeners("timeout").map((e=>e.name)).join(", "))}e.timeoutSocketCount++;const u=e.getName(a);if(e.freeSockets[u]&&e.freeSockets[u].indexOf(t)!==-1){t.destroy();e.removeSocket(t,a);r("%s is free, destroy quietly",t[o])}else{if(l===0){const n=new Error("Socket timeout");n.code="ERR_SOCKET_TIMEOUT";n.timeout=i;t.destroy(n);e.removeSocket(t,a);r("%s destroy with timeout error",t[o])}}}t.on("timeout",onTimeout);function onError(a){const n=t.listeners("error").length;r("%s(requests: %s, finished: %s) error: %s, listenerCount: %s",t[o],t[d],t[p],a,n);e.errorSocketCount++;if(n===1){r("%s emit uncaught error event",t[o]);t.removeListener("error",onError);t.emit("error",a)}}t.on("error",onError);function onRemove(){r("%s(requests: %s, finished: %s) agentRemove",t[o],t[d],t[p]);t.removeListener("close",onClose);t.removeListener("error",onError);t.removeListener("free",onFree);t.removeListener("timeout",onTimeout);t.removeListener("agentRemove",onRemove)}t.on("agentRemove",onRemove)}Se=Agent;function inspect(e){const t={};for(const r in e){t[r]=e[r].length}return t}return Se}var Ae;var Re;function requireHttps_agent(){if(Re)return Ae;Re=1;const e=N.default.Agent;const t=requireAgent();const{INIT_SOCKET:r,CREATE_HTTPS_CONNECTION:a}=requireConstants();class HttpsAgent extends t{constructor(e){super(e);this.defaultPort=443;this.protocol="https:";this.maxCachedSessions=this.options.maxCachedSessions;if(this.maxCachedSessions===undefined){this.maxCachedSessions=100}this._sessionCache={map:{},list:[]}}createConnection(e,t){const n=this[a](e,t);this[r](n,e);return n}}HttpsAgent.prototype[a]=e.prototype.createConnection;["getName","_getSession","_cacheSession","_evictSession"].forEach((function(t){if(typeof e.prototype[t]==="function"){HttpsAgent.prototype[t]=e.prototype[t]}}));Ae=HttpsAgent;return Ae}var Te;function requireAgentkeepalive(){if(Te)return fe.exports;Te=1;fe.exports=requireAgent();fe.exports.HttpsAgent=requireHttps_agent();fe.exports.constants=requireConstants();return fe.exports}var Oe=requireAgentkeepalive();var Ne=getDefaultExportFromCjs(Oe);var Ce;var ke;function requireFastStableStringify(){if(ke)return Ce;ke=1;var e=Object.prototype.toString;var t=Object.keys||function(e){var t=[];for(var r in e){t.push(r)}return t};function stringify(r,a){var n,i,s,o,d,p,c;if(r===true){return"true"}if(r===false){return"false"}switch(typeof r){case"object":if(r===null){return null}else if(r.toJSON&&typeof r.toJSON==="function"){return stringify(r.toJSON(),a)}else{c=e.call(r);if(c==="[object Array]"){s="[";i=r.length-1;for(n=0;n<i;n++){s+=stringify(r[n],true)+","}if(i>-1){s+=stringify(r[n],true)}return s+"]"}else if(c==="[object Object]"){o=t(r).sort();i=o.length;s="";n=0;while(n<i){d=o[n];p=stringify(r[d],false);if(p!==undefined){if(s){s+=","}s+=JSON.stringify(d)+":"+p}n++}return"{"+s+"}"}else{return JSON.stringify(r)}}case"function":case"undefined":return a?null:undefined;case"string":return JSON.stringify(r);default:return isFinite(r)?r:null}}Ce=function(e){var t=stringify(e,false);if(t!==undefined){return""+t}};return Ce}var Ie=requireFastStableStringify();var xe=getDefaultExportFromCjs(Ie);const Be=32;function trailingZeros(e){let t=0;while(e>1){e/=2;t++}return t}function nextPowerOfTwo(e){if(e===0)return 1;e--;e|=e>>1;e|=e>>2;e|=e>>4;e|=e>>8;e|=e>>16;e|=e>>32;return e+1}class EpochSchedule{constructor(e,t,r,a,n){this.slotsPerEpoch=void 0;this.leaderScheduleSlotOffset=void 0;this.warmup=void 0;this.firstNormalEpoch=void 0;this.firstNormalSlot=void 0;this.slotsPerEpoch=e;this.leaderScheduleSlotOffset=t;this.warmup=r;this.firstNormalEpoch=a;this.firstNormalSlot=n}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){const t=trailingZeros(nextPowerOfTwo(e+Be+1))-trailingZeros(Be)-1;const r=this.getSlotsInEpoch(t);const a=e-(r-Be);return[t,a]}else{const t=e-this.firstNormalSlot;const r=Math.floor(t/this.slotsPerEpoch);const a=this.firstNormalEpoch+r;const n=t%this.slotsPerEpoch;return[a,n]}}getFirstSlotInEpoch(e){if(e<=this.firstNormalEpoch){return(Math.pow(2,e)-1)*Be}else{return(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){if(e<this.firstNormalEpoch){return Math.pow(2,e+trailingZeros(Be))}else{return this.slotsPerEpoch}}}var Pe=typeof globalThis.fetch==="function"?globalThis.fetch:async function(e,t){const r=typeof e==="string"&&e.slice(0,2)==="//"?"https:"+e:e;return await k.default(r,t)};class RpcWebSocketClient extends _.CommonClient{constructor(e,t,r){const webSocketFactory=e=>{const r=_.WebSocket(e,{autoconnect:true,max_reconnects:5,reconnect:true,reconnect_interval:1e3,...t});if("socket"in r){this.underlyingSocket=r.socket}else{this.underlyingSocket=r}return r};super(webSocketFactory,e,t,r);this.underlyingSocket=void 0}call(...e){const t=this.underlyingSocket?.readyState;if(t===1){return super.call(...e)}return Promise.reject(new Error("Tried to call a JSON-RPC method `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(...e){const t=this.underlyingSocket?.readyState;if(t===1){return super.notify(...e)}return Promise.reject(new Error("Tried to send a JSON-RPC notification `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}function decodeData(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.typeIndex!==e.index){throw new Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`)}return r}const De=56;class AddressLookupTableAccount{constructor(e){this.key=void 0;this.state=void 0;this.key=e.key;this.state=e.state}isActive(){const e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){const t=decodeData(Le,e);const r=e.length-De;assert(r>=0,"lookup table is invalid");assert(r%32===0,"lookup table is invalid");const a=r/32;const{addresses:n}=R.struct([R.seq(publicKey(),a,"addresses")]).decode(e.slice(De));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:t.authority.length!==0?new PublicKey(t.authority[0]):undefined,addresses:n.map((e=>new PublicKey(e)))}}}const Le={index:1,layout:R.struct([R.u32("typeIndex"),u64("deactivationSlot"),R.nu64("lastExtendedSlot"),R.u8("lastExtendedStartIndex"),R.u8(),R.seq(publicKey(),R.offset(R.u8(),-1),"authority")])};const Me=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;function makeWebsocketUrl(e){const t=e.match(Me);if(t==null){throw TypeError(`Failed to validate endpoint URL \`${e}\``)}const[r,a,n,i]=t;const s=e.startsWith("https:")?"wss:":"ws:";const o=n==null?null:parseInt(n.slice(1),10);const d=o==null?"":`:${o+1}`;return`${s}//${a}${d}${i}`}const Ue=f.coerce(f.instance(PublicKey),f.string(),(e=>new PublicKey(e)));const Fe=f.tuple([f.string(),f.literal("base64")]);const Ve=f.coerce(f.instance(a.Buffer),Fe,(e=>a.Buffer.from(e[0],"base64")));const ze=30*1e3;function assertEndpointUrl(e){if(/^https?:/.test(e)===false){throw new TypeError("Endpoint URL must start with `http:` or `https:`.")}return e}function extractCommitmentFromConfig(e){let t;let r;if(typeof e==="string"){t=e}else if(e){const{commitment:a,...n}=e;t=a;r=n}return{commitment:t,config:r}}function applyDefaultMemcmpEncodingToFilters(e){return e.map((e=>"memcmp"in e?{...e,memcmp:{...e.memcmp,encoding:e.memcmp.encoding??"base58"}}:e))}function createRpcResult(e){return f.union([f.type({jsonrpc:f.literal("2.0"),id:f.string(),result:e}),f.type({jsonrpc:f.literal("2.0"),id:f.string(),error:f.type({code:f.unknown(),message:f.string(),data:f.optional(f.any())})})])}const je=createRpcResult(f.unknown());function jsonRpcResult(e){return f.coerce(createRpcResult(e),je,(t=>{if("error"in t){return t}else{return{...t,result:f.create(t.result,e)}}}))}function jsonRpcResultAndContext(e){return jsonRpcResult(f.type({context:f.type({slot:f.number()}),value:e}))}function notificationResultAndContext(e){return f.type({context:f.type({slot:f.number()}),value:e})}function versionedMessageFromResponse(e,t){if(e===0){return new MessageV0({header:t.header,staticAccountKeys:t.accountKeys.map((e=>new PublicKey(e))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:E.default.decode(e.data)}))),addressTableLookups:t.addressTableLookups})}else{return new Message(t)}}const He=f.type({foundation:f.number(),foundationTerm:f.number(),initial:f.number(),taper:f.number(),terminal:f.number()});const qe=jsonRpcResult(f.array(f.nullable(f.type({epoch:f.number(),effectiveSlot:f.number(),amount:f.number(),postBalance:f.number(),commission:f.optional(f.nullable(f.number()))}))));const $e=f.array(f.type({slot:f.number(),prioritizationFee:f.number()}));const Ke=f.type({total:f.number(),validator:f.number(),foundation:f.number(),epoch:f.number()});const We=f.type({epoch:f.number(),slotIndex:f.number(),slotsInEpoch:f.number(),absoluteSlot:f.number(),blockHeight:f.optional(f.number()),transactionCount:f.optional(f.number())});const Ge=f.type({slotsPerEpoch:f.number(),leaderScheduleSlotOffset:f.number(),warmup:f.boolean(),firstNormalEpoch:f.number(),firstNormalSlot:f.number()});const Ye=f.record(f.string(),f.array(f.number()));const Je=f.nullable(f.union([f.type({}),f.string()]));const Xe=f.type({err:Je});const Ze=f.literal("receivedSignature");const Qe=f.type({"solana-core":f.string(),"feature-set":f.optional(f.number())});const et=f.type({program:f.string(),programId:Ue,parsed:f.unknown()});const tt=f.type({programId:Ue,accounts:f.array(Ue),data:f.string()});const rt=jsonRpcResultAndContext(f.type({err:f.nullable(f.union([f.type({}),f.string()])),logs:f.nullable(f.array(f.string())),accounts:f.optional(f.nullable(f.array(f.nullable(f.type({executable:f.boolean(),owner:f.string(),lamports:f.number(),data:f.array(f.string()),rentEpoch:f.optional(f.number())}))))),unitsConsumed:f.optional(f.number()),returnData:f.optional(f.nullable(f.type({programId:f.string(),data:f.tuple([f.string(),f.literal("base64")])}))),innerInstructions:f.optional(f.nullable(f.array(f.type({index:f.number(),instructions:f.array(f.union([et,tt]))}))))}));const nt=jsonRpcResultAndContext(f.type({byIdentity:f.record(f.string(),f.array(f.number())),range:f.type({firstSlot:f.number(),lastSlot:f.number()})}));function createRpcClient(e,t,r,a,n,i){const s=r?r:Pe;let o;{if(i==null){{const t={freeSocketTimeout:19e3,keepAlive:true,maxSockets:25};if(e.startsWith("https:")){o=new Oe.HttpsAgent(t)}else{o=new Ne(t)}}}else{if(i!==false){const t=e.startsWith("https:");if(t&&!(i instanceof m.Agent)){throw new Error("The endpoint `"+e+"` can only be paired with an `https.Agent`. You have, instead, supplied an "+"`http.Agent` through `httpAgent`.")}else if(!t&&i instanceof m.Agent){throw new Error("The endpoint `"+e+"` can only be paired with an `http.Agent`. You have, instead, supplied an "+"`https.Agent` through `httpAgent`.")}o=i}}}let d;if(a){d=async(e,t)=>{const r=await new Promise(((r,n)=>{try{a(e,t,((e,t)=>r([e,t])))}catch(e){n(e)}}));return await s(...r)}}const p=new C.default((async(r,a)=>{const i={method:"POST",body:r,agent:o,headers:Object.assign({"Content-Type":"application/json"},t||{},Or)};try{let t=5;let r;let o=500;for(;;){if(d){r=await d(e,i)}else{r=await s(e,i)}if(r.status!==429){break}if(n===true){break}t-=1;if(t===0){break}console.error(`Server responded with ${r.status} ${r.statusText}.  Retrying after ${o}ms delay...`);await sleep(o);o*=2}const p=await r.text();if(r.ok){a(null,p)}else{a(new Error(`${r.status} ${r.statusText}: ${p}`))}}catch(e){if(e instanceof Error)a(e)}}),{});return p}function createRpcRequest(e){return(t,r)=>new Promise(((a,n)=>{e.request(t,r,((e,t)=>{if(e){n(e);return}a(t)}))}))}function createRpcBatchRequest(e){return t=>new Promise(((r,a)=>{if(t.length===0)r([]);const n=t.map((t=>e.request(t.methodName,t.args)));e.request(n,((e,t)=>{if(e){a(e);return}r(t)}))}))}const it=jsonRpcResult(He);const st=jsonRpcResult(Ke);const ot=jsonRpcResult($e);const dt=jsonRpcResult(We);const pt=jsonRpcResult(Ge);const ct=jsonRpcResult(Ye);const ut=jsonRpcResult(f.number());const mt=jsonRpcResultAndContext(f.type({total:f.number(),circulating:f.number(),nonCirculating:f.number(),nonCirculatingAccounts:f.array(Ue)}));const ht=f.type({amount:f.string(),uiAmount:f.nullable(f.number()),decimals:f.number(),uiAmountString:f.optional(f.string())});const ft=jsonRpcResultAndContext(f.array(f.type({address:Ue,amount:f.string(),uiAmount:f.nullable(f.number()),decimals:f.number(),uiAmountString:f.optional(f.string())})));const yt=jsonRpcResultAndContext(f.array(f.type({pubkey:Ue,account:f.type({executable:f.boolean(),owner:Ue,lamports:f.number(),data:Ve,rentEpoch:f.number()})})));const _t=f.type({program:f.string(),parsed:f.unknown(),space:f.number()});const vt=jsonRpcResultAndContext(f.array(f.type({pubkey:Ue,account:f.type({executable:f.boolean(),owner:Ue,lamports:f.number(),data:_t,rentEpoch:f.number()})})));const bt=jsonRpcResultAndContext(f.array(f.type({lamports:f.number(),address:Ue})));const wt=f.type({executable:f.boolean(),owner:Ue,lamports:f.number(),data:Ve,rentEpoch:f.number()});const St=f.type({pubkey:Ue,account:wt});const Et=f.coerce(f.union([f.instance(a.Buffer),_t]),f.union([Fe,_t]),(e=>{if(Array.isArray(e)){return f.create(e,Ve)}else{return e}}));const At=f.type({executable:f.boolean(),owner:Ue,lamports:f.number(),data:Et,rentEpoch:f.number()});const Rt=f.type({pubkey:Ue,account:At});const Tt=f.type({state:f.union([f.literal("active"),f.literal("inactive"),f.literal("activating"),f.literal("deactivating")]),active:f.number(),inactive:f.number()});const Ot=jsonRpcResult(f.array(f.type({signature:f.string(),slot:f.number(),err:Je,memo:f.nullable(f.string()),blockTime:f.optional(f.nullable(f.number()))})));const Nt=jsonRpcResult(f.array(f.type({signature:f.string(),slot:f.number(),err:Je,memo:f.nullable(f.string()),blockTime:f.optional(f.nullable(f.number()))})));const Ct=f.type({subscription:f.number(),result:notificationResultAndContext(wt)});const kt=f.type({pubkey:Ue,account:wt});const It=f.type({subscription:f.number(),result:notificationResultAndContext(kt)});const xt=f.type({parent:f.number(),slot:f.number(),root:f.number()});const Bt=f.type({subscription:f.number(),result:xt});const Pt=f.union([f.type({type:f.union([f.literal("firstShredReceived"),f.literal("completed"),f.literal("optimisticConfirmation"),f.literal("root")]),slot:f.number(),timestamp:f.number()}),f.type({type:f.literal("createdBank"),parent:f.number(),slot:f.number(),timestamp:f.number()}),f.type({type:f.literal("frozen"),slot:f.number(),timestamp:f.number(),stats:f.type({numTransactionEntries:f.number(),numSuccessfulTransactions:f.number(),numFailedTransactions:f.number(),maxTransactionsPerEntry:f.number()})}),f.type({type:f.literal("dead"),slot:f.number(),timestamp:f.number(),err:f.string()})]);const Dt=f.type({subscription:f.number(),result:Pt});const Lt=f.type({subscription:f.number(),result:notificationResultAndContext(f.union([Xe,Ze]))});const Mt=f.type({subscription:f.number(),result:f.number()});const Ut=f.type({pubkey:f.string(),gossip:f.nullable(f.string()),tpu:f.nullable(f.string()),rpc:f.nullable(f.string()),version:f.nullable(f.string())});const Ft=f.type({votePubkey:f.string(),nodePubkey:f.string(),activatedStake:f.number(),epochVoteAccount:f.boolean(),epochCredits:f.array(f.tuple([f.number(),f.number(),f.number()])),commission:f.number(),lastVote:f.number(),rootSlot:f.nullable(f.number())});const Vt=jsonRpcResult(f.type({current:f.array(Ft),delinquent:f.array(Ft)}));const zt=f.union([f.literal("processed"),f.literal("confirmed"),f.literal("finalized")]);const jt=f.type({slot:f.number(),confirmations:f.nullable(f.number()),err:Je,confirmationStatus:f.optional(zt)});const Ht=jsonRpcResultAndContext(f.array(f.nullable(jt)));const qt=jsonRpcResult(f.number());const $t=f.type({accountKey:Ue,writableIndexes:f.array(f.number()),readonlyIndexes:f.array(f.number())});const Kt=f.type({signatures:f.array(f.string()),message:f.type({accountKeys:f.array(f.string()),header:f.type({numRequiredSignatures:f.number(),numReadonlySignedAccounts:f.number(),numReadonlyUnsignedAccounts:f.number()}),instructions:f.array(f.type({accounts:f.array(f.number()),data:f.string(),programIdIndex:f.number()})),recentBlockhash:f.string(),addressTableLookups:f.optional(f.array($t))})});const Wt=f.type({pubkey:Ue,signer:f.boolean(),writable:f.boolean(),source:f.optional(f.union([f.literal("transaction"),f.literal("lookupTable")]))});const Gt=f.type({accountKeys:f.array(Wt),signatures:f.array(f.string())});const Yt=f.type({parsed:f.unknown(),program:f.string(),programId:Ue});const Jt=f.type({accounts:f.array(Ue),data:f.string(),programId:Ue});const Xt=f.union([Jt,Yt]);const Zt=f.union([f.type({parsed:f.unknown(),program:f.string(),programId:f.string()}),f.type({accounts:f.array(f.string()),data:f.string(),programId:f.string()})]);const Qt=f.coerce(Xt,Zt,(e=>{if("accounts"in e){return f.create(e,Jt)}else{return f.create(e,Yt)}}));const er=f.type({signatures:f.array(f.string()),message:f.type({accountKeys:f.array(Wt),instructions:f.array(Qt),recentBlockhash:f.string(),addressTableLookups:f.optional(f.nullable(f.array($t)))})});const tr=f.type({accountIndex:f.number(),mint:f.string(),owner:f.optional(f.string()),programId:f.optional(f.string()),uiTokenAmount:ht});const rr=f.type({writable:f.array(Ue),readonly:f.array(Ue)});const ar=f.type({err:Je,fee:f.number(),innerInstructions:f.optional(f.nullable(f.array(f.type({index:f.number(),instructions:f.array(f.type({accounts:f.array(f.number()),data:f.string(),programIdIndex:f.number()}))})))),preBalances:f.array(f.number()),postBalances:f.array(f.number()),logMessages:f.optional(f.nullable(f.array(f.string()))),preTokenBalances:f.optional(f.nullable(f.array(tr))),postTokenBalances:f.optional(f.nullable(f.array(tr))),loadedAddresses:f.optional(rr),computeUnitsConsumed:f.optional(f.number())});const nr=f.type({err:Je,fee:f.number(),innerInstructions:f.optional(f.nullable(f.array(f.type({index:f.number(),instructions:f.array(Qt)})))),preBalances:f.array(f.number()),postBalances:f.array(f.number()),logMessages:f.optional(f.nullable(f.array(f.string()))),preTokenBalances:f.optional(f.nullable(f.array(tr))),postTokenBalances:f.optional(f.nullable(f.array(tr))),loadedAddresses:f.optional(rr),computeUnitsConsumed:f.optional(f.number())});const ir=f.union([f.literal(0),f.literal("legacy")]);const sr=f.type({pubkey:f.string(),lamports:f.number(),postBalance:f.nullable(f.number()),rewardType:f.nullable(f.string()),commission:f.optional(f.nullable(f.number()))});const dr=jsonRpcResult(f.nullable(f.type({blockhash:f.string(),previousBlockhash:f.string(),parentSlot:f.number(),transactions:f.array(f.type({transaction:Kt,meta:f.nullable(ar),version:f.optional(ir)})),rewards:f.optional(f.array(sr)),blockTime:f.nullable(f.number()),blockHeight:f.nullable(f.number())})));const pr=jsonRpcResult(f.nullable(f.type({blockhash:f.string(),previousBlockhash:f.string(),parentSlot:f.number(),rewards:f.optional(f.array(sr)),blockTime:f.nullable(f.number()),blockHeight:f.nullable(f.number())})));const cr=jsonRpcResult(f.nullable(f.type({blockhash:f.string(),previousBlockhash:f.string(),parentSlot:f.number(),transactions:f.array(f.type({transaction:Gt,meta:f.nullable(ar),version:f.optional(ir)})),rewards:f.optional(f.array(sr)),blockTime:f.nullable(f.number()),blockHeight:f.nullable(f.number())})));const lr=jsonRpcResult(f.nullable(f.type({blockhash:f.string(),previousBlockhash:f.string(),parentSlot:f.number(),transactions:f.array(f.type({transaction:er,meta:f.nullable(nr),version:f.optional(ir)})),rewards:f.optional(f.array(sr)),blockTime:f.nullable(f.number()),blockHeight:f.nullable(f.number())})));const ur=jsonRpcResult(f.nullable(f.type({blockhash:f.string(),previousBlockhash:f.string(),parentSlot:f.number(),transactions:f.array(f.type({transaction:Gt,meta:f.nullable(nr),version:f.optional(ir)})),rewards:f.optional(f.array(sr)),blockTime:f.nullable(f.number()),blockHeight:f.nullable(f.number())})));const mr=jsonRpcResult(f.nullable(f.type({blockhash:f.string(),previousBlockhash:f.string(),parentSlot:f.number(),rewards:f.optional(f.array(sr)),blockTime:f.nullable(f.number()),blockHeight:f.nullable(f.number())})));const hr=jsonRpcResult(f.nullable(f.type({blockhash:f.string(),previousBlockhash:f.string(),parentSlot:f.number(),transactions:f.array(f.type({transaction:Kt,meta:f.nullable(ar)})),rewards:f.optional(f.array(sr)),blockTime:f.nullable(f.number())})));const fr=jsonRpcResult(f.nullable(f.type({blockhash:f.string(),previousBlockhash:f.string(),parentSlot:f.number(),signatures:f.array(f.string()),blockTime:f.nullable(f.number())})));const gr=jsonRpcResult(f.nullable(f.type({slot:f.number(),meta:f.nullable(ar),blockTime:f.optional(f.nullable(f.number())),transaction:Kt,version:f.optional(ir)})));const yr=jsonRpcResult(f.nullable(f.type({slot:f.number(),transaction:er,meta:f.nullable(nr),blockTime:f.optional(f.nullable(f.number())),version:f.optional(ir)})));const _r=jsonRpcResultAndContext(f.type({blockhash:f.string(),lastValidBlockHeight:f.number()}));const vr=jsonRpcResultAndContext(f.boolean());const br=f.type({slot:f.number(),numTransactions:f.number(),numSlots:f.number(),samplePeriodSecs:f.number()});const wr=jsonRpcResult(f.array(br));const Sr=jsonRpcResultAndContext(f.nullable(f.type({feeCalculator:f.type({lamportsPerSignature:f.number()})})));const Er=jsonRpcResult(f.string());const Ar=jsonRpcResult(f.string());const Rr=f.type({err:Je,logs:f.array(f.string()),signature:f.string()});const Tr=f.type({result:notificationResultAndContext(Rr),subscription:f.number()});const Or={"solana-client":`js/${"1.0.0-maintenance"}`};class Connection{constructor(e,t){this._commitment=void 0;this._confirmTransactionInitialTimeout=void 0;this._rpcEndpoint=void 0;this._rpcWsEndpoint=void 0;this._rpcClient=void 0;this._rpcRequest=void 0;this._rpcBatchRequest=void 0;this._rpcWebSocket=void 0;this._rpcWebSocketConnected=false;this._rpcWebSocketHeartbeat=null;this._rpcWebSocketIdleTimeout=null;this._rpcWebSocketGeneration=0;this._disableBlockhashCaching=false;this._pollingBlockhash=false;this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]};this._nextClientSubscriptionId=0;this._subscriptionDisposeFunctionsByClientSubscriptionId={};this._subscriptionHashByClientSubscriptionId={};this._subscriptionStateChangeCallbacksByHash={};this._subscriptionCallbacksByServerSubscriptionId={};this._subscriptionsByHash={};this._subscriptionsAutoDisposedByRpc=new Set;this.getBlockHeight=(()=>{const e={};return async t=>{const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgs([],r,undefined,a);const i=xe(n);e[i]=e[i]??(async()=>{try{const e=await this._rpcRequest("getBlockHeight",n);const t=f.create(e,jsonRpcResult(f.number()));if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get block height information")}return t.result}finally{delete e[i]}})();return await e[i]}})();let r;let a;let n;let i;let s;let o;if(t&&typeof t==="string"){this._commitment=t}else if(t){this._commitment=t.commitment;this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout;r=t.wsEndpoint;a=t.httpHeaders;n=t.fetch;i=t.fetchMiddleware;s=t.disableRetryOnRateLimit;o=t.httpAgent}this._rpcEndpoint=assertEndpointUrl(e);this._rpcWsEndpoint=r||makeWebsocketUrl(e);this._rpcClient=createRpcClient(e,a,n,i,s,o);this._rpcRequest=createRpcRequest(this._rpcClient);this._rpcBatchRequest=createRpcBatchRequest(this._rpcClient);this._rpcWebSocket=new RpcWebSocketClient(this._rpcWsEndpoint,{autoconnect:false,max_reconnects:Infinity});this._rpcWebSocket.on("open",this._wsOnOpen.bind(this));this._rpcWebSocket.on("error",this._wsOnError.bind(this));this._rpcWebSocket.on("close",this._wsOnClose.bind(this));this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this));this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this));this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this));this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this));this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this));this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this));this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgs([e.toBase58()],r,undefined,a);const i=await this._rpcRequest("getBalance",n);const s=f.create(i,jsonRpcResultAndContext(f.number()));if("error"in s){throw new SolanaJSONRPCError(s.error,`failed to get balance for ${e.toBase58()}`)}return s.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get balance of account "+e.toBase58()+": "+t)}))}async getBlockTime(e){const t=await this._rpcRequest("getBlockTime",[e]);const r=f.create(t,jsonRpcResult(f.nullable(f.number())));if("error"in r){throw new SolanaJSONRPCError(r.error,`failed to get block time for slot ${e}`)}return r.result}async getMinimumLedgerSlot(){const e=await this._rpcRequest("minimumLedgerSlot",[]);const t=f.create(e,jsonRpcResult(f.number()));if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get minimum ledger slot")}return t.result}async getFirstAvailableBlock(){const e=await this._rpcRequest("getFirstAvailableBlock",[]);const t=f.create(e,ut);if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get first available block")}return t.result}async getSupply(e){let t={};if(typeof e==="string"){t={commitment:e}}else if(e){t={...e,commitment:e&&e.commitment||this.commitment}}else{t={commitment:this.commitment}}const r=await this._rpcRequest("getSupply",[t]);const a=f.create(r,mt);if("error"in a){throw new SolanaJSONRPCError(a.error,"failed to get supply")}return a.result}async getTokenSupply(e,t){const r=this._buildArgs([e.toBase58()],t);const a=await this._rpcRequest("getTokenSupply",r);const n=f.create(a,jsonRpcResultAndContext(ht));if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get token supply")}return n.result}async getTokenAccountBalance(e,t){const r=this._buildArgs([e.toBase58()],t);const a=await this._rpcRequest("getTokenAccountBalance",r);const n=f.create(a,jsonRpcResultAndContext(ht));if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get token account balance")}return n.result}async getTokenAccountsByOwner(e,t,r){const{commitment:a,config:n}=extractCommitmentFromConfig(r);let i=[e.toBase58()];if("mint"in t){i.push({mint:t.mint.toBase58()})}else{i.push({programId:t.programId.toBase58()})}const s=this._buildArgs(i,a,"base64",n);const o=await this._rpcRequest("getTokenAccountsByOwner",s);const d=f.create(o,yt);if("error"in d){throw new SolanaJSONRPCError(d.error,`failed to get token accounts owned by account ${e.toBase58()}`)}return d.result}async getParsedTokenAccountsByOwner(e,t,r){let a=[e.toBase58()];if("mint"in t){a.push({mint:t.mint.toBase58()})}else{a.push({programId:t.programId.toBase58()})}const n=this._buildArgs(a,r,"jsonParsed");const i=await this._rpcRequest("getTokenAccountsByOwner",n);const s=f.create(i,vt);if("error"in s){throw new SolanaJSONRPCError(s.error,`failed to get token accounts owned by account ${e.toBase58()}`)}return s.result}async getLargestAccounts(e){const t={...e,commitment:e&&e.commitment||this.commitment};const r=t.filter||t.commitment?[t]:[];const a=await this._rpcRequest("getLargestAccounts",r);const n=f.create(a,bt);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get largest accounts")}return n.result}async getTokenLargestAccounts(e,t){const r=this._buildArgs([e.toBase58()],t);const a=await this._rpcRequest("getTokenLargestAccounts",r);const n=f.create(a,ft);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get token largest accounts")}return n.result}async getAccountInfoAndContext(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgs([e.toBase58()],r,"base64",a);const i=await this._rpcRequest("getAccountInfo",n);const s=f.create(i,jsonRpcResultAndContext(f.nullable(wt)));if("error"in s){throw new SolanaJSONRPCError(s.error,`failed to get info about account ${e.toBase58()}`)}return s.result}async getParsedAccountInfo(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgs([e.toBase58()],r,"jsonParsed",a);const i=await this._rpcRequest("getAccountInfo",n);const s=f.create(i,jsonRpcResultAndContext(f.nullable(At)));if("error"in s){throw new SolanaJSONRPCError(s.error,`failed to get info about account ${e.toBase58()}`)}return s.result}async getAccountInfo(e,t){try{const r=await this.getAccountInfoAndContext(e,t);return r.value}catch(t){throw new Error("failed to get info about account "+e.toBase58()+": "+t)}}async getMultipleParsedAccounts(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=e.map((e=>e.toBase58()));const i=this._buildArgs([n],r,"jsonParsed",a);const s=await this._rpcRequest("getMultipleAccounts",i);const o=f.create(s,jsonRpcResultAndContext(f.array(f.nullable(At))));if("error"in o){throw new SolanaJSONRPCError(o.error,`failed to get info for accounts ${n}`)}return o.result}async getMultipleAccountsInfoAndContext(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=e.map((e=>e.toBase58()));const i=this._buildArgs([n],r,"base64",a);const s=await this._rpcRequest("getMultipleAccounts",i);const o=f.create(s,jsonRpcResultAndContext(f.array(f.nullable(wt))));if("error"in o){throw new SolanaJSONRPCError(o.error,`failed to get info for accounts ${n}`)}return o.result}async getMultipleAccountsInfo(e,t){const r=await this.getMultipleAccountsInfoAndContext(e,t);return r.value}async getStakeActivation(e,t,r){const{commitment:a,config:n}=extractCommitmentFromConfig(t);const i=this._buildArgs([e.toBase58()],a,undefined,{...n,epoch:r!=null?r:n?.epoch});const s=await this._rpcRequest("getStakeActivation",i);const o=f.create(s,jsonRpcResult(Tt));if("error"in o){throw new SolanaJSONRPCError(o.error,`failed to get Stake Activation ${e.toBase58()}`)}return o.result}async getProgramAccounts(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const{encoding:n,...i}=a||{};const s=this._buildArgs([e.toBase58()],r,n||"base64",{...i,...i.filters?{filters:applyDefaultMemcmpEncodingToFilters(i.filters)}:null});const o=await this._rpcRequest("getProgramAccounts",s);const d=f.array(St);const p=i.withContext===true?f.create(o,jsonRpcResultAndContext(d)):f.create(o,jsonRpcResult(d));if("error"in p){throw new SolanaJSONRPCError(p.error,`failed to get accounts owned by program ${e.toBase58()}`)}return p.result}async getParsedProgramAccounts(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgs([e.toBase58()],r,"jsonParsed",a);const i=await this._rpcRequest("getProgramAccounts",n);const s=f.create(i,jsonRpcResult(f.array(Rt)));if("error"in s){throw new SolanaJSONRPCError(s.error,`failed to get accounts owned by program ${e.toBase58()}`)}return s.result}async confirmTransaction(e,t){let r;if(typeof e=="string"){r=e}else{const t=e;if(t.abortSignal?.aborted){return Promise.reject(t.abortSignal.reason)}r=t.signature}let a;try{a=E.default.decode(r)}catch(e){throw new Error("signature must be base58 encoded: "+r)}assert(a.length===64,"signature has invalid length");if(typeof e==="string"){return await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r})}else if("lastValidBlockHeight"in e){return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e})}else{return await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}}getCancellationPromise(e){return new Promise(((t,r)=>{if(e==null){return}if(e.aborted){r(e.reason)}else{e.addEventListener("abort",(()=>{r(e.reason)}))}}))}getTransactionConfirmationPromise({commitment:e,signature:t}){let r;let a;let n=false;const i=new Promise(((i,s)=>{try{r=this.onSignature(t,((e,t)=>{r=undefined;const a={context:t,value:e};i({__type:K.PROCESSED,response:a})}),e);const o=new Promise((e=>{if(r==null){e()}else{a=this._onSubscriptionStateChange(r,(t=>{if(t==="subscribed"){e()}}))}}));(async()=>{await o;if(n)return;const r=await this.getSignatureStatus(t);if(n)return;if(r==null){return}const{context:a,value:d}=r;if(d==null){return}if(d?.err){s(d.err)}else{switch(e){case"confirmed":case"single":case"singleGossip":{if(d.confirmationStatus==="processed"){return}break}case"finalized":case"max":case"root":{if(d.confirmationStatus==="processed"||d.confirmationStatus==="confirmed"){return}break}case"processed":case"recent":}n=true;i({__type:K.PROCESSED,response:{context:a,value:d}})}})()}catch(e){s(e)}}));const abortConfirmation=()=>{if(a){a();a=undefined}if(r!=null){this.removeSignatureListener(r);r=undefined}};return{abortConfirmation:abortConfirmation,confirmationPromise:i}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e,strategy:{abortSignal:t,lastValidBlockHeight:r,signature:a}}){let n=false;const i=new Promise((t=>{const checkBlockHeight=async()=>{try{const t=await this.getBlockHeight(e);return t}catch(e){return-1}};(async()=>{let e=await checkBlockHeight();if(n)return;while(e<=r){await sleep(1e3);if(n)return;e=await checkBlockHeight();if(n)return}t({__type:K.BLOCKHEIGHT_EXCEEDED})})()}));const{abortConfirmation:s,confirmationPromise:o}=this.getTransactionConfirmationPromise({commitment:e,signature:a});const d=this.getCancellationPromise(t);let p;try{const e=await Promise.race([d,o,i]);if(e.__type===K.PROCESSED){p=e.response}else{throw new TransactionExpiredBlockheightExceededError(a)}}finally{n=true;s()}return p}async confirmTransactionUsingDurableNonceStrategy({commitment:e,strategy:{abortSignal:t,minContextSlot:r,nonceAccountPubkey:a,nonceValue:n,signature:i}}){let s=false;const o=new Promise((t=>{let i=n;let o=null;const getCurrentNonceValue=async()=>{try{const{context:t,value:n}=await this.getNonceAndContext(a,{commitment:e,minContextSlot:r});o=t.slot;return n?.nonce}catch(e){return i}};(async()=>{i=await getCurrentNonceValue();if(s)return;while(true){if(n!==i){t({__type:K.NONCE_INVALID,slotInWhichNonceDidAdvance:o});return}await sleep(2e3);if(s)return;i=await getCurrentNonceValue();if(s)return}})()}));const{abortConfirmation:d,confirmationPromise:p}=this.getTransactionConfirmationPromise({commitment:e,signature:i});const c=this.getCancellationPromise(t);let l;try{const t=await Promise.race([c,p,o]);if(t.__type===K.PROCESSED){l=t.response}else{let a;while(true){const e=await this.getSignatureStatus(i);if(e==null){break}if(e.context.slot<(t.slotInWhichNonceDidAdvance??r)){await sleep(400);continue}a=e;break}if(a?.value){const t=e||"finalized";const{confirmationStatus:r}=a.value;switch(t){case"processed":case"recent":if(r!=="processed"&&r!=="confirmed"&&r!=="finalized"){throw new TransactionExpiredNonceInvalidError(i)}break;case"confirmed":case"single":case"singleGossip":if(r!=="confirmed"&&r!=="finalized"){throw new TransactionExpiredNonceInvalidError(i)}break;case"finalized":case"max":case"root":if(r!=="finalized"){throw new TransactionExpiredNonceInvalidError(i)}break;default:(e=>{})(t)}l={context:a.context,value:{err:a.value.err}}}else{throw new TransactionExpiredNonceInvalidError(i)}}}finally{s=true;d()}return l}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:e,signature:t}){let r;const a=new Promise((t=>{let a=this._confirmTransactionInitialTimeout||60*1e3;switch(e){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":{a=this._confirmTransactionInitialTimeout||30*1e3;break}}r=setTimeout((()=>t({__type:K.TIMED_OUT,timeoutMs:a})),a)}));const{abortConfirmation:n,confirmationPromise:i}=this.getTransactionConfirmationPromise({commitment:e,signature:t});let s;try{const e=await Promise.race([i,a]);if(e.__type===K.PROCESSED){s=e.response}else{throw new TransactionExpiredTimeoutError(t,e.timeoutMs/1e3)}}finally{clearTimeout(r);n()}return s}async getClusterNodes(){const e=await this._rpcRequest("getClusterNodes",[]);const t=f.create(e,jsonRpcResult(f.array(Ut)));if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get cluster nodes")}return t.result}async getVoteAccounts(e){const t=this._buildArgs([],e);const r=await this._rpcRequest("getVoteAccounts",t);const a=f.create(r,Vt);if("error"in a){throw new SolanaJSONRPCError(a.error,"failed to get vote accounts")}return a.result}async getSlot(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e);const a=this._buildArgs([],t,undefined,r);const n=await this._rpcRequest("getSlot",a);const i=f.create(n,jsonRpcResult(f.number()));if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get slot")}return i.result}async getSlotLeader(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e);const a=this._buildArgs([],t,undefined,r);const n=await this._rpcRequest("getSlotLeader",a);const i=f.create(n,jsonRpcResult(f.string()));if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get slot leader")}return i.result}async getSlotLeaders(e,t){const r=[e,t];const a=await this._rpcRequest("getSlotLeaders",r);const n=f.create(a,jsonRpcResult(f.array(Ue)));if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get slot leaders")}return n.result}async getSignatureStatus(e,t){const{context:r,value:a}=await this.getSignatureStatuses([e],t);assert(a.length===1);const n=a[0];return{context:r,value:n}}async getSignatureStatuses(e,t){const r=[e];if(t){r.push(t)}const a=await this._rpcRequest("getSignatureStatuses",r);const n=f.create(a,Ht);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get signature status")}return n.result}async getTransactionCount(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e);const a=this._buildArgs([],t,undefined,r);const n=await this._rpcRequest("getTransactionCount",a);const i=f.create(n,jsonRpcResult(f.number()));if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get transaction count")}return i.result}async getTotalSupply(e){const t=await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:true});return t.value.total}async getInflationGovernor(e){const t=this._buildArgs([],e);const r=await this._rpcRequest("getInflationGovernor",t);const a=f.create(r,it);if("error"in a){throw new SolanaJSONRPCError(a.error,"failed to get inflation")}return a.result}async getInflationReward(e,t,r){const{commitment:a,config:n}=extractCommitmentFromConfig(r);const i=this._buildArgs([e.map((e=>e.toBase58()))],a,undefined,{...n,epoch:t!=null?t:n?.epoch});const s=await this._rpcRequest("getInflationReward",i);const o=f.create(s,qe);if("error"in o){throw new SolanaJSONRPCError(o.error,"failed to get inflation reward")}return o.result}async getInflationRate(){const e=await this._rpcRequest("getInflationRate",[]);const t=f.create(e,st);if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get inflation rate")}return t.result}async getEpochInfo(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e);const a=this._buildArgs([],t,undefined,r);const n=await this._rpcRequest("getEpochInfo",a);const i=f.create(n,dt);if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get epoch info")}return i.result}async getEpochSchedule(){const e=await this._rpcRequest("getEpochSchedule",[]);const t=f.create(e,pt);if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get epoch schedule")}const r=t.result;return new EpochSchedule(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const e=await this._rpcRequest("getLeaderSchedule",[]);const t=f.create(e,ct);if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get leader schedule")}return t.result}async getMinimumBalanceForRentExemption(e,t){const r=this._buildArgs([e],t);const a=await this._rpcRequest("getMinimumBalanceForRentExemption",r);const n=f.create(a,qt);if("error"in n){console.warn("Unable to fetch minimum balance for rent exemption");return 0}return n.result}async getRecentBlockhashAndContext(e){const{context:t,value:{blockhash:r}}=await this.getLatestBlockhashAndContext(e);const a={get lamportsPerSignature(){throw new Error("The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is "+"no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee "+"for a given message.")},toJSON(){return{}}};return{context:t,value:{blockhash:r,feeCalculator:a}}}async getRecentPerformanceSamples(e){const t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]);const r=f.create(t,wr);if("error"in r){throw new SolanaJSONRPCError(r.error,"failed to get recent performance samples")}return r.result}async getFeeCalculatorForBlockhash(e,t){const r=this._buildArgs([e],t);const a=await this._rpcRequest("getFeeCalculatorForBlockhash",r);const n=f.create(a,Sr);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get fee calculator")}const{context:i,value:s}=n.result;return{context:i,value:s!==null?s.feeCalculator:null}}async getFeeForMessage(e,t){const r=toBuffer(e.serialize()).toString("base64");const a=this._buildArgs([r],t);const n=await this._rpcRequest("getFeeForMessage",a);const i=f.create(n,jsonRpcResultAndContext(f.nullable(f.number())));if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get fee for message")}if(i.result===null){throw new Error("invalid blockhash")}return i.result}async getRecentPrioritizationFees(e){const t=e?.lockedWritableAccounts?.map((e=>e.toBase58()));const r=t?.length?[t]:[];const a=await this._rpcRequest("getRecentPrioritizationFees",r);const n=f.create(a,ot);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get recent prioritization fees")}return n.result}async getRecentBlockhash(e){try{const t=await this.getRecentBlockhashAndContext(e);return t.value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(e){try{const t=await this.getLatestBlockhashAndContext(e);return t.value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e);const a=this._buildArgs([],t,undefined,r);const n=await this._rpcRequest("getLatestBlockhash",a);const i=f.create(n,_r);if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get latest blockhash")}return i.result}async isBlockhashValid(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgs([e],r,undefined,a);const i=await this._rpcRequest("isBlockhashValid",n);const s=f.create(i,vr);if("error"in s){throw new SolanaJSONRPCError(s.error,"failed to determine if the blockhash `"+e+"`is valid")}return s.result}async getVersion(){const e=await this._rpcRequest("getVersion",[]);const t=f.create(e,jsonRpcResult(Qe));if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get version")}return t.result}async getGenesisHash(){const e=await this._rpcRequest("getGenesisHash",[]);const t=f.create(e,jsonRpcResult(f.string()));if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get genesis hash")}return t.result}async getBlock(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgsAtLeastConfirmed([e],r,undefined,a);const i=await this._rpcRequest("getBlock",n);try{switch(a?.transactionDetails){case"accounts":{const e=f.create(i,cr);if("error"in e){throw e.error}return e.result}case"none":{const e=f.create(i,pr);if("error"in e){throw e.error}return e.result}default:{const e=f.create(i,dr);if("error"in e){throw e.error}const{result:t}=e;return t?{...t,transactions:t.transactions.map((({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:versionedMessageFromResponse(r,e.message)},version:r})))}:null}}}catch(e){throw new SolanaJSONRPCError(e,"failed to get confirmed block")}}async getParsedBlock(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",a);const i=await this._rpcRequest("getBlock",n);try{switch(a?.transactionDetails){case"accounts":{const e=f.create(i,ur);if("error"in e){throw e.error}return e.result}case"none":{const e=f.create(i,mr);if("error"in e){throw e.error}return e.result}default:{const e=f.create(i,lr);if("error"in e){throw e.error}return e.result}}}catch(e){throw new SolanaJSONRPCError(e,"failed to get block")}}async getBlockProduction(e){let t;let r;if(typeof e==="string"){r=e}else if(e){const{commitment:a,...n}=e;r=a;t=n}const a=this._buildArgs([],r,"base64",t);const n=await this._rpcRequest("getBlockProduction",a);const i=f.create(n,nt);if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get block production information")}return i.result}async getTransaction(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgsAtLeastConfirmed([e],r,undefined,a);const i=await this._rpcRequest("getTransaction",n);const s=f.create(i,gr);if("error"in s){throw new SolanaJSONRPCError(s.error,"failed to get transaction")}const o=s.result;if(!o)return o;return{...o,transaction:{...o.transaction,message:versionedMessageFromResponse(o.version,o.transaction.message)}}}async getParsedTransaction(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",a);const i=await this._rpcRequest("getTransaction",n);const s=f.create(i,yr);if("error"in s){throw new SolanaJSONRPCError(s.error,"failed to get transaction")}return s.result}async getParsedTransactions(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=e.map((e=>{const t=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",a);return{methodName:"getTransaction",args:t}}));const i=await this._rpcBatchRequest(n);const s=i.map((e=>{const t=f.create(e,yr);if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get transactions")}return t.result}));return s}async getTransactions(e,t){const{commitment:r,config:a}=extractCommitmentFromConfig(t);const n=e.map((e=>{const t=this._buildArgsAtLeastConfirmed([e],r,undefined,a);return{methodName:"getTransaction",args:t}}));const i=await this._rpcBatchRequest(n);const s=i.map((e=>{const t=f.create(e,gr);if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get transactions")}const r=t.result;if(!r)return r;return{...r,transaction:{...r.transaction,message:versionedMessageFromResponse(r.version,r.transaction.message)}}}));return s}async getConfirmedBlock(e,t){const r=this._buildArgsAtLeastConfirmed([e],t);const a=await this._rpcRequest("getBlock",r);const n=f.create(a,hr);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get confirmed block")}const i=n.result;if(!i){throw new Error("Confirmed block "+e+" not found")}const s={...i,transactions:i.transactions.map((({transaction:e,meta:t})=>{const r=new Message(e.message);return{meta:t,transaction:{...e,message:r}}}))};return{...s,transactions:s.transactions.map((({transaction:e,meta:t})=>({meta:t,transaction:Transaction.populate(e.message,e.signatures)})))}}async getBlocks(e,t,r){const a=this._buildArgsAtLeastConfirmed(t!==undefined?[e,t]:[e],r);const n=await this._rpcRequest("getBlocks",a);const i=f.create(n,jsonRpcResult(f.array(f.number())));if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get blocks")}return i.result}async getBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,undefined,{transactionDetails:"signatures",rewards:false});const a=await this._rpcRequest("getBlock",r);const n=f.create(a,fr);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get block")}const i=n.result;if(!i){throw new Error("Block "+e+" not found")}return i}async getConfirmedBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,undefined,{transactionDetails:"signatures",rewards:false});const a=await this._rpcRequest("getBlock",r);const n=f.create(a,fr);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get confirmed block")}const i=n.result;if(!i){throw new Error("Confirmed block "+e+" not found")}return i}async getConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t);const a=await this._rpcRequest("getTransaction",r);const n=f.create(a,gr);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get transaction")}const i=n.result;if(!i)return i;const s=new Message(i.transaction.message);const o=i.transaction.signatures;return{...i,transaction:Transaction.populate(s,o)}}async getParsedConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed");const a=await this._rpcRequest("getTransaction",r);const n=f.create(a,yr);if("error"in n){throw new SolanaJSONRPCError(n.error,"failed to get confirmed transaction")}return n.result}async getParsedConfirmedTransactions(e,t){const r=e.map((e=>{const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed");return{methodName:"getTransaction",args:r}}));const a=await this._rpcBatchRequest(r);const n=a.map((e=>{const t=f.create(e,yr);if("error"in t){throw new SolanaJSONRPCError(t.error,"failed to get confirmed transactions")}return t.result}));return n}async getConfirmedSignaturesForAddress(e,t,r){let a={};let n=await this.getFirstAvailableBlock();while(!("until"in a)){t--;if(t<=0||t<n){break}try{const e=await this.getConfirmedBlockSignatures(t,"finalized");if(e.signatures.length>0){a.until=e.signatures[e.signatures.length-1].toString()}}catch(e){if(e instanceof Error&&e.message.includes("skipped")){continue}else{throw e}}}let i=await this.getSlot("finalized");while(!("before"in a)){r++;if(r>i){break}try{const e=await this.getConfirmedBlockSignatures(r);if(e.signatures.length>0){a.before=e.signatures[e.signatures.length-1].toString()}}catch(e){if(e instanceof Error&&e.message.includes("skipped")){continue}else{throw e}}}const s=await this.getConfirmedSignaturesForAddress2(e,a);return s.map((e=>e.signature))}async getConfirmedSignaturesForAddress2(e,t,r){const a=this._buildArgsAtLeastConfirmed([e.toBase58()],r,undefined,t);const n=await this._rpcRequest("getConfirmedSignaturesForAddress2",a);const i=f.create(n,Ot);if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get confirmed signatures for address")}return i.result}async getSignaturesForAddress(e,t,r){const a=this._buildArgsAtLeastConfirmed([e.toBase58()],r,undefined,t);const n=await this._rpcRequest("getSignaturesForAddress",a);const i=f.create(n,Nt);if("error"in i){throw new SolanaJSONRPCError(i.error,"failed to get signatures for address")}return i.result}async getAddressLookupTable(e,t){const{context:r,value:a}=await this.getAccountInfoAndContext(e,t);let n=null;if(a!==null){n=new AddressLookupTableAccount({key:e,state:AddressLookupTableAccount.deserialize(a.data)})}return{context:r,value:n}}async getNonceAndContext(e,t){const{context:r,value:a}=await this.getAccountInfoAndContext(e,t);let n=null;if(a!==null){n=NonceAccount.fromAccountData(a.data)}return{context:r,value:n}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get nonce for account "+e.toBase58()+": "+t)}))}async requestAirdrop(e,t){const r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]);const a=f.create(r,Er);if("error"in a){throw new SolanaJSONRPCError(a.error,`airdrop to ${e.toBase58()} failed`)}return a.result}async _blockhashWithExpiryBlockHeight(e){if(!e){while(this._pollingBlockhash){await sleep(100)}const e=Date.now()-this._blockhashInfo.lastFetch;const t=e>=ze;if(this._blockhashInfo.latestBlockhash!==null&&!t){return this._blockhashInfo.latestBlockhash}}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=true;try{const e=Date.now();const t=this._blockhashInfo.latestBlockhash;const r=t?t.blockhash:null;for(let e=0;e<50;e++){const e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash){this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]};return e}await sleep(X/2)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=false}}async getStakeMinimumDelegation(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e);const a=this._buildArgs([],t,"base64",r);const n=await this._rpcRequest("getStakeMinimumDelegation",a);const i=f.create(n,jsonRpcResultAndContext(f.number()));if("error"in i){throw new SolanaJSONRPCError(i.error,`failed to get stake minimum delegation`)}return i.result}async simulateTransaction(e,t,r){if("message"in e){const n=e;const i=n.serialize();const s=a.Buffer.from(i).toString("base64");if(Array.isArray(t)||r!==undefined){throw new Error("Invalid arguments")}const o=t||{};o.encoding="base64";if(!("commitment"in o)){o.commitment=this.commitment}if(t&&typeof t==="object"&&"innerInstructions"in t){o.innerInstructions=t.innerInstructions}const d=[s,o];const p=await this._rpcRequest("simulateTransaction",d);const c=f.create(p,rt);if("error"in c){throw new Error("failed to simulate transaction: "+c.error.message)}return c.result}let n;if(e instanceof Transaction){let t=e;n=new Transaction;n.feePayer=t.feePayer;n.instructions=e.instructions;n.nonceInfo=t.nonceInfo;n.signatures=t.signatures}else{n=Transaction.populate(e);n._message=n._json=undefined}if(t!==undefined&&!Array.isArray(t)){throw new Error("Invalid arguments")}const i=t;if(n.nonceInfo&&i){n.sign(...i)}else{let e=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(e);n.lastValidBlockHeight=t.lastValidBlockHeight;n.recentBlockhash=t.blockhash;if(!i)break;n.sign(...i);if(!n.signature){throw new Error("!signature")}const r=n.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(r)&&!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.simulatedSignatures.push(r);break}else{e=true}}}const s=n._compile();const o=s.serialize();const d=n._serialize(o);const p=d.toString("base64");const c={encoding:"base64",commitment:this.commitment};if(r){const e=(Array.isArray(r)?r:s.nonProgramIds()).map((e=>e.toBase58()));c["accounts"]={encoding:"base64",addresses:e}}if(i){c.sigVerify=true}if(t&&typeof t==="object"&&"innerInstructions"in t){c.innerInstructions=t.innerInstructions}const l=[p,c];const u=await this._rpcRequest("simulateTransaction",l);const m=f.create(u,rt);if("error"in m){let e;if("data"in m.error){e=m.error.data.logs;if(e&&Array.isArray(e)){const t="\n    ";const r=t+e.join(t);console.error(m.error.message,r)}}throw new SendTransactionError({action:"simulate",signature:"",transactionMessage:m.error.message,logs:e})}return m.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t)){throw new Error("Invalid arguments")}const r=e.serialize();return await this.sendRawTransaction(r,t)}if(t===undefined||!Array.isArray(t)){throw new Error("Invalid arguments")}const a=t;if(e.nonceInfo){e.sign(...a)}else{let t=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(t);e.lastValidBlockHeight=r.lastValidBlockHeight;e.recentBlockhash=r.blockhash;e.sign(...a);if(!e.signature){throw new Error("!signature")}const n=e.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(n)){this._blockhashInfo.transactionSignatures.push(n);break}else{t=true}}}const n=e.serialize();return await this.sendRawTransaction(n,r)}async sendRawTransaction(e,t){const r=toBuffer(e).toString("base64");const a=await this.sendEncodedTransaction(r,t);return a}async sendEncodedTransaction(e,t){const r={encoding:"base64"};const a=t&&t.skipPreflight;const n=a===true?"processed":t&&t.preflightCommitment||this.commitment;if(t&&t.maxRetries!=null){r.maxRetries=t.maxRetries}if(t&&t.minContextSlot!=null){r.minContextSlot=t.minContextSlot}if(a){r.skipPreflight=a}if(n){r.preflightCommitment=n}const i=[e,r];const s=await this._rpcRequest("sendTransaction",i);const o=f.create(s,Ar);if("error"in o){let e=undefined;if("data"in o.error){e=o.error.data.logs}throw new SendTransactionError({action:a?"send":"simulate",signature:"",transactionMessage:o.error.message,logs:e})}return o.result}_wsOnOpen(){this._rpcWebSocketConnected=true;this._rpcWebSocketHeartbeat=setInterval((()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()}),5e3);this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=false;console.error("ws error:",e.message)}_wsOnClose(e){this._rpcWebSocketConnected=false;this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER;if(this._rpcWebSocketIdleTimeout){clearTimeout(this._rpcWebSocketIdleTimeout);this._rpcWebSocketIdleTimeout=null}if(this._rpcWebSocketHeartbeat){clearInterval(this._rpcWebSocketHeartbeat);this._rpcWebSocketHeartbeat=null}if(e===1e3){this._updateSubscriptions();return}this._subscriptionCallbacksByServerSubscriptionId={};Object.entries(this._subscriptionsByHash).forEach((([e,t])=>{this._setSubscription(e,{...t,state:"pending"})}))}_setSubscription(e,t){const r=this._subscriptionsByHash[e]?.state;this._subscriptionsByHash[e]=t;if(r!==t.state){const r=this._subscriptionStateChangeCallbacksByHash[e];if(r){r.forEach((e=>{try{e(t.state)}catch{}}))}}}_onSubscriptionStateChange(e,t){const r=this._subscriptionHashByClientSubscriptionId[e];if(r==null){return()=>{}}const a=this._subscriptionStateChangeCallbacksByHash[r]||=new Set;a.add(t);return()=>{a.delete(t);if(a.size===0){delete this._subscriptionStateChangeCallbacksByHash[r]}}}async _updateSubscriptions(){if(Object.keys(this._subscriptionsByHash).length===0){if(this._rpcWebSocketConnected){this._rpcWebSocketConnected=false;this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){if(e instanceof Error){console.log(`Error when closing socket connection: ${e.message}`)}}}),500)}return}if(this._rpcWebSocketIdleTimeout!==null){clearTimeout(this._rpcWebSocketIdleTimeout);this._rpcWebSocketIdleTimeout=null;this._rpcWebSocketConnected=true}if(!this._rpcWebSocketConnected){this._rpcWebSocket.connect();return}const e=this._rpcWebSocketGeneration;const isCurrentConnectionStillActive=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async e=>{const t=this._subscriptionsByHash[e];if(t===undefined){return}switch(t.state){case"pending":case"unsubscribed":if(t.callbacks.size===0){delete this._subscriptionsByHash[e];if(t.state==="unsubscribed"){delete this._subscriptionCallbacksByServerSubscriptionId[t.serverSubscriptionId]}await this._updateSubscriptions();return}await(async()=>{const{args:r,method:a}=t;try{this._setSubscription(e,{...t,state:"subscribing"});const n=await this._rpcWebSocket.call(a,r);this._setSubscription(e,{...t,serverSubscriptionId:n,state:"subscribed"});this._subscriptionCallbacksByServerSubscriptionId[n]=t.callbacks;await this._updateSubscriptions()}catch(n){console.error(`Received ${n instanceof Error?"":"JSON-RPC "}error calling \`${a}\``,{args:r,error:n});if(!isCurrentConnectionStillActive()){return}this._setSubscription(e,{...t,state:"pending"});await this._updateSubscriptions()}})();break;case"subscribed":if(t.callbacks.size===0){await(async()=>{const{serverSubscriptionId:r,unsubscribeMethod:a}=t;if(this._subscriptionsAutoDisposedByRpc.has(r)){this._subscriptionsAutoDisposedByRpc.delete(r)}else{this._setSubscription(e,{...t,state:"unsubscribing"});this._setSubscription(e,{...t,state:"unsubscribing"});try{await this._rpcWebSocket.call(a,[r])}catch(r){if(r instanceof Error){console.error(`${a} error:`,r.message)}if(!isCurrentConnectionStillActive()){return}this._setSubscription(e,{...t,state:"subscribed"});await this._updateSubscriptions();return}}this._setSubscription(e,{...t,state:"unsubscribed"});await this._updateSubscriptions()})()}break}})))}_handleServerNotification(e,t){const r=this._subscriptionCallbacksByServerSubscriptionId[e];if(r===undefined){return}r.forEach((e=>{try{e(...t)}catch(e){console.error(e)}}))}_wsOnAccountNotification(e){const{result:t,subscription:r}=f.create(e,Ct);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){const r=this._nextClientSubscriptionId++;const a=xe([e.method,t]);const n=this._subscriptionsByHash[a];if(n===undefined){this._subscriptionsByHash[a]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}}else{n.callbacks.add(e.callback)}this._subscriptionHashByClientSubscriptionId[r]=a;this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r];delete this._subscriptionHashByClientSubscriptionId[r];const t=this._subscriptionsByHash[a];assert(t!==undefined,`Could not find a \`Subscription\` when tearing down client subscription #${r}`);t.callbacks.delete(e.callback);await this._updateSubscriptions()};this._updateSubscriptions();return r}onAccountChange(e,t,r){const{commitment:a,config:n}=extractCommitmentFromConfig(r);const i=this._buildArgs([e.toBase58()],a||this._commitment||"finalized","base64",n);return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},i)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){const{result:t,subscription:r}=f.create(e,It);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,a){const{commitment:n,config:i}=extractCommitmentFromConfig(r);const s=this._buildArgs([e.toBase58()],n||this._commitment||"finalized","base64",i?i:a?{filters:applyDefaultMemcmpEncodingToFilters(a)}:undefined);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},s)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){const a=this._buildArgs([typeof e==="object"?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},a)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){const{result:t,subscription:r}=f.create(e,Tr);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){const{result:t,subscription:r}=f.create(e,Bt);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){const{result:t,subscription:r}=f.create(e,Dt);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];if(r){await r()}else{console.warn("Ignored unsubscribe request because an active subscription with id "+`\`${e}\` for '${t}' events `+"could not be found.")}}_buildArgs(e,t,r,a){const n=t||this._commitment;if(n||r||a){let t={};if(r){t.encoding=r}if(n){t.commitment=n}if(a){t=Object.assign(t,a)}e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,a){const n=t||this._commitment;if(n&&!["confirmed","finalized"].includes(n)){throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`")}return this._buildArgs(e,t,r,a)}_wsOnSignatureNotification(e){const{result:t,subscription:r}=f.create(e,Lt);if(t.value!=="receivedSignature"){this._subscriptionsAutoDisposedByRpc.add(r)}this._handleServerNotification(r,t.value==="receivedSignature"?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){const a=this._buildArgs([e],r||this._commitment||"finalized");const n=this._makeSubscription({callback:(e,r)=>{if(e.type==="status"){t(e.result,r);try{this.removeSignatureListener(n)}catch(e){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},a);return n}onSignatureWithOptions(e,t,r){const{commitment:a,...n}={...r,commitment:r&&r.commitment||this._commitment||"finalized"};const i=this._buildArgs([e],a,undefined,n);const s=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(s)}catch(e){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return s}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){const{result:t,subscription:r}=f.create(e,Mt);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class Keypair{constructor(e){this._keypair=void 0;this._keypair=e??generateKeypair()}static generate(){return new Keypair(generateKeypair())}static fromSecretKey(e,t){if(e.byteLength!==64){throw new Error("bad secret key size")}const r=e.slice(32,64);if(!t||!t.skipValidation){const t=e.slice(0,32);const a=x(t);for(let e=0;e<32;e++){if(r[e]!==a[e]){throw new Error("provided secretKey is invalid")}}}return new Keypair({publicKey:r,secretKey:e})}static fromSeed(e){const t=x(e);const r=new Uint8Array(64);r.set(e);r.set(t,32);return new Keypair({publicKey:t,secretKey:r})}get publicKey(){return new PublicKey(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const Nr=Object.freeze({CreateLookupTable:{index:0,layout:R.struct([R.u32("instruction"),u64("recentSlot"),R.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:R.struct([R.u32("instruction")])},ExtendLookupTable:{index:2,layout:R.struct([R.u32("instruction"),u64(),R.seq(publicKey(),R.offset(R.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:R.struct([R.u32("instruction")])},CloseLookupTable:{index:4,layout:R.struct([R.u32("instruction")])}});class AddressLookupTableInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=R.u32("instruction");const r=t.decode(e.data);let a;for(const[e,t]of Object.entries(Nr)){if(t.index==r){a=e;break}}if(!a){throw new Error("Invalid Instruction. Should be a LookupTable Instruction")}return a}static decodeCreateLookupTable(e){this.checkProgramId(e.programId);this.checkKeysLength(e.keys,4);const{recentSlot:t}=decodeData$1(Nr.CreateLookupTable,e.data);return{authority:e.keys[1].pubkey,payer:e.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(e){this.checkProgramId(e.programId);if(e.keys.length<2){throw new Error(`invalid instruction; found ${e.keys.length} keys, expected at least 2`)}const{addresses:t}=decodeData$1(Nr.ExtendLookupTable,e.data);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,payer:e.keys.length>2?e.keys[2].pubkey:undefined,addresses:t.map((e=>new PublicKey(e)))}}static decodeCloseLookupTable(e){this.checkProgramId(e.programId);this.checkKeysLength(e.keys,3);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,recipient:e.keys[2].pubkey}}static decodeFreezeLookupTable(e){this.checkProgramId(e.programId);this.checkKeysLength(e.keys,2);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static decodeDeactivateLookupTable(e){this.checkProgramId(e.programId);this.checkKeysLength(e.keys,2);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(AddressLookupTableProgram.programId)){throw new Error("invalid instruction; programId is not AddressLookupTable Program")}}static checkKeysLength(e,t){if(e.length<t){throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}}class AddressLookupTableProgram{constructor(){}static createLookupTable(e){const[t,r]=PublicKey.findProgramAddressSync([e.authority.toBuffer(),c.getU64Encoder().encode(e.recentSlot)],this.programId);const a=Nr.CreateLookupTable;const n=encodeData(a,{recentSlot:BigInt(e.recentSlot),bumpSeed:r});const i=[{pubkey:t,isSigner:false,isWritable:true},{pubkey:e.authority,isSigner:true,isWritable:false},{pubkey:e.payer,isSigner:true,isWritable:true},{pubkey:SystemProgram.programId,isSigner:false,isWritable:false}];return[new TransactionInstruction({programId:this.programId,keys:i,data:n}),t]}static freezeLookupTable(e){const t=Nr.FreezeLookupTable;const r=encodeData(t);const a=[{pubkey:e.lookupTable,isSigner:false,isWritable:true},{pubkey:e.authority,isSigner:true,isWritable:false}];return new TransactionInstruction({programId:this.programId,keys:a,data:r})}static extendLookupTable(e){const t=Nr.ExtendLookupTable;const r=encodeData(t,{addresses:e.addresses.map((e=>e.toBytes()))});const a=[{pubkey:e.lookupTable,isSigner:false,isWritable:true},{pubkey:e.authority,isSigner:true,isWritable:false}];if(e.payer){a.push({pubkey:e.payer,isSigner:true,isWritable:true},{pubkey:SystemProgram.programId,isSigner:false,isWritable:false})}return new TransactionInstruction({programId:this.programId,keys:a,data:r})}static deactivateLookupTable(e){const t=Nr.DeactivateLookupTable;const r=encodeData(t);const a=[{pubkey:e.lookupTable,isSigner:false,isWritable:true},{pubkey:e.authority,isSigner:true,isWritable:false}];return new TransactionInstruction({programId:this.programId,keys:a,data:r})}static closeLookupTable(e){const t=Nr.CloseLookupTable;const r=encodeData(t);const a=[{pubkey:e.lookupTable,isSigner:false,isWritable:true},{pubkey:e.authority,isSigner:true,isWritable:false},{pubkey:e.recipient,isSigner:false,isWritable:true}];return new TransactionInstruction({programId:this.programId,keys:a,data:r})}}AddressLookupTableProgram.programId=new PublicKey("AddressLookupTab1e1111111111111111111111111");class ComputeBudgetInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=R.u8("instruction");const r=t.decode(e.data);let a;for(const[e,t]of Object.entries(Cr)){if(t.index==r){a=e;break}}if(!a){throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction")}return a}static decodeRequestUnits(e){this.checkProgramId(e.programId);const{units:t,additionalFee:r}=decodeData$1(Cr.RequestUnits,e.data);return{units:t,additionalFee:r}}static decodeRequestHeapFrame(e){this.checkProgramId(e.programId);const{bytes:t}=decodeData$1(Cr.RequestHeapFrame,e.data);return{bytes:t}}static decodeSetComputeUnitLimit(e){this.checkProgramId(e.programId);const{units:t}=decodeData$1(Cr.SetComputeUnitLimit,e.data);return{units:t}}static decodeSetComputeUnitPrice(e){this.checkProgramId(e.programId);const{microLamports:t}=decodeData$1(Cr.SetComputeUnitPrice,e.data);return{microLamports:t}}static checkProgramId(e){if(!e.equals(ComputeBudgetProgram.programId)){throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}}const Cr=Object.freeze({RequestUnits:{index:0,layout:R.struct([R.u8("instruction"),R.u32("units"),R.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:R.struct([R.u8("instruction"),R.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:R.struct([R.u8("instruction"),R.u32("units")])},SetComputeUnitPrice:{index:3,layout:R.struct([R.u8("instruction"),u64("microLamports")])}});class ComputeBudgetProgram{constructor(){}static requestUnits(e){const t=Cr.RequestUnits;const r=encodeData(t,e);return new TransactionInstruction({keys:[],programId:this.programId,data:r})}static requestHeapFrame(e){const t=Cr.RequestHeapFrame;const r=encodeData(t,e);return new TransactionInstruction({keys:[],programId:this.programId,data:r})}static setComputeUnitLimit(e){const t=Cr.SetComputeUnitLimit;const r=encodeData(t,e);return new TransactionInstruction({keys:[],programId:this.programId,data:r})}static setComputeUnitPrice(e){const t=Cr.SetComputeUnitPrice;const r=encodeData(t,{microLamports:BigInt(e.microLamports)});return new TransactionInstruction({keys:[],programId:this.programId,data:r})}}ComputeBudgetProgram.programId=new PublicKey("ComputeBudget111111111111111111111111111111");const kr=64;const Ir=32;const xr=64;const Br=R.struct([R.u8("numSignatures"),R.u8("padding"),R.u16("signatureOffset"),R.u16("signatureInstructionIndex"),R.u16("publicKeyOffset"),R.u16("publicKeyInstructionIndex"),R.u16("messageDataOffset"),R.u16("messageDataSize"),R.u16("messageInstructionIndex")]);class Ed25519Program{constructor(){}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:n,instructionIndex:i}=e;assert(t.length===Ir,`Public Key must be ${Ir} bytes but received ${t.length} bytes`);assert(n.length===xr,`Signature must be ${xr} bytes but received ${n.length} bytes`);const s=Br.span;const o=s+t.length;const d=o+n.length;const p=1;const c=a.Buffer.alloc(d+r.length);const l=i==null?65535:i;Br.encode({numSignatures:p,padding:0,signatureOffset:o,signatureInstructionIndex:l,publicKeyOffset:s,publicKeyInstructionIndex:l,messageDataOffset:d,messageDataSize:r.length,messageInstructionIndex:l},c);c.fill(t,s);c.fill(n,o);c.fill(r,d);return new TransactionInstruction({keys:[],programId:Ed25519Program.programId,data:c})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:a}=e;assert(t.length===kr,`Private key must be ${kr} bytes but received ${t.length} bytes`);try{const e=Keypair.fromSecretKey(t);const n=e.publicKey.toBytes();const i=sign(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:n,message:r,signature:i,instructionIndex:a})}catch(e){throw new Error(`Error creating instruction; ${e}`)}}}Ed25519Program.programId=new PublicKey("Ed25519SigVerify111111111111111111111111111");const ecdsaSign=(e,t)=>{const r=b.secp256k1.sign(e,t);return[r.toCompactRawBytes(),r.recovery]};b.secp256k1.utils.isValidPrivateKey;const Pr=b.secp256k1.getPublicKey;const Dr=32;const Lr=20;const Mr=64;const Ur=11;const Fr=R.struct([R.u8("numSignatures"),R.u16("signatureOffset"),R.u8("signatureInstructionIndex"),R.u16("ethAddressOffset"),R.u8("ethAddressInstructionIndex"),R.u16("messageDataOffset"),R.u16("messageDataSize"),R.u8("messageInstructionIndex"),R.blob(20,"ethAddress"),R.blob(64,"signature"),R.u8("recoveryId")]);class Secp256k1Program{constructor(){}static publicKeyToEthAddress(e){assert(e.length===Mr,`Public key must be ${Mr} bytes but received ${e.length} bytes`);try{return a.Buffer.from(v.keccak_256(toBuffer(e))).slice(-Lr)}catch(e){throw new Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:a,recoveryId:n,instructionIndex:i}=e;return Secp256k1Program.createInstructionWithEthAddress({ethAddress:Secp256k1Program.publicKeyToEthAddress(t),message:r,signature:a,recoveryId:n,instructionIndex:i})}static createInstructionWithEthAddress(e){const{ethAddress:t,message:r,signature:n,recoveryId:i,instructionIndex:s=0}=e;let o;if(typeof t==="string"){if(t.startsWith("0x")){o=a.Buffer.from(t.substr(2),"hex")}else{o=a.Buffer.from(t,"hex")}}else{o=t}assert(o.length===Lr,`Address must be ${Lr} bytes but received ${o.length} bytes`);const d=1+Ur;const p=d;const c=d+o.length;const l=c+n.length+1;const u=1;const m=a.Buffer.alloc(Fr.span+r.length);Fr.encode({numSignatures:u,signatureOffset:c,signatureInstructionIndex:s,ethAddressOffset:p,ethAddressInstructionIndex:s,messageDataOffset:l,messageDataSize:r.length,messageInstructionIndex:s,signature:toBuffer(n),ethAddress:toBuffer(o),recoveryId:i},m);m.fill(toBuffer(r),Fr.span);return new TransactionInstruction({keys:[],programId:Secp256k1Program.programId,data:m})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:n}=e;assert(t.length===Dr,`Private key must be ${Dr} bytes but received ${t.length} bytes`);try{const e=toBuffer(t);const i=Pr(e,false).slice(1);const s=a.Buffer.from(v.keccak_256(toBuffer(r)));const[o,d]=ecdsaSign(s,e);return this.createInstructionWithPublicKey({publicKey:i,message:r,signature:o,recoveryId:d,instructionIndex:n})}catch(e){throw new Error(`Error creating instruction; ${e}`)}}}Secp256k1Program.programId=new PublicKey("KeccakSecp256k11111111111111111111111111111");var Vr;const zr=new PublicKey("StakeConfig11111111111111111111111111111111");class Authorized{constructor(e,t){this.staker=void 0;this.withdrawer=void 0;this.staker=e;this.withdrawer=t}}class Lockup{constructor(e,t,r){this.unixTimestamp=void 0;this.epoch=void 0;this.custodian=void 0;this.unixTimestamp=e;this.epoch=t;this.custodian=r}}Vr=Lockup;Lockup.default=new Vr(0,0,PublicKey.default);class StakeInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=R.u32("instruction");const r=t.decode(e.data);let a;for(const[e,t]of Object.entries(jr)){if(t.index==r){a=e;break}}if(!a){throw new Error("Instruction type incorrect; not a StakeInstruction")}return a}static decodeInitialize(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,2);const{authorized:t,lockup:r}=decodeData$1(jr.Initialize,e.data);return{stakePubkey:e.keys[0].pubkey,authorized:new Authorized(new PublicKey(t.staker),new PublicKey(t.withdrawer)),lockup:new Lockup(r.unixTimestamp,r.epoch,new PublicKey(r.custodian))}}static decodeDelegate(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,6);decodeData$1(jr.Delegate,e.data);return{stakePubkey:e.keys[0].pubkey,votePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[5].pubkey}}static decodeAuthorize(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);const{newAuthorized:t,stakeAuthorizationType:r}=decodeData$1(jr.Authorize,e.data);const a={stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new PublicKey(t),stakeAuthorizationType:{index:r}};if(e.keys.length>3){a.custodianPubkey=e.keys[3].pubkey}return a}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,2);const{newAuthorized:t,stakeAuthorizationType:r,authoritySeed:a,authorityOwner:n}=decodeData$1(jr.AuthorizeWithSeed,e.data);const i={stakePubkey:e.keys[0].pubkey,authorityBase:e.keys[1].pubkey,authoritySeed:a,authorityOwner:new PublicKey(n),newAuthorizedPubkey:new PublicKey(t),stakeAuthorizationType:{index:r}};if(e.keys.length>3){i.custodianPubkey=e.keys[3].pubkey}return i}static decodeSplit(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);const{lamports:t}=decodeData$1(jr.Split,e.data);return{stakePubkey:e.keys[0].pubkey,splitStakePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[2].pubkey,lamports:t}}static decodeMerge(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);decodeData$1(jr.Merge,e.data);return{stakePubkey:e.keys[0].pubkey,sourceStakePubKey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,5);const{lamports:t}=decodeData$1(jr.Withdraw,e.data);const r={stakePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t};if(e.keys.length>5){r.custodianPubkey=e.keys[5].pubkey}return r}static decodeDeactivate(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);decodeData$1(jr.Deactivate,e.data);return{stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static checkProgramId(e){if(!e.equals(StakeProgram.programId)){throw new Error("invalid instruction; programId is not StakeProgram")}}static checkKeyLength(e,t){if(e.length<t){throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}}const jr=Object.freeze({Initialize:{index:0,layout:R.struct([R.u32("instruction"),authorized(),lockup()])},Authorize:{index:1,layout:R.struct([R.u32("instruction"),publicKey("newAuthorized"),R.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:R.struct([R.u32("instruction")])},Split:{index:3,layout:R.struct([R.u32("instruction"),R.ns64("lamports")])},Withdraw:{index:4,layout:R.struct([R.u32("instruction"),R.ns64("lamports")])},Deactivate:{index:5,layout:R.struct([R.u32("instruction")])},Merge:{index:7,layout:R.struct([R.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:R.struct([R.u32("instruction"),publicKey("newAuthorized"),R.u32("stakeAuthorizationType"),rustString("authoritySeed"),publicKey("authorityOwner")])}});const Hr=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class StakeProgram{constructor(){}static initialize(e){const{stakePubkey:t,authorized:r,lockup:a}=e;const n=a||Lockup.default;const i=jr.Initialize;const s=encodeData(i,{authorized:{staker:toBuffer(r.staker.toBuffer()),withdrawer:toBuffer(r.withdrawer.toBuffer())},lockup:{unixTimestamp:n.unixTimestamp,epoch:n.epoch,custodian:toBuffer(n.custodian.toBuffer())}});const o={keys:[{pubkey:t,isSigner:false,isWritable:true},{pubkey:ae,isSigner:false,isWritable:false}],programId:this.programId,data:s};return new TransactionInstruction(o)}static createAccountWithSeed(e){const t=new Transaction;t.add(SystemProgram.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:a,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:a,lockup:n}))}static createAccount(e){const t=new Transaction;t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:a,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:a,lockup:n}))}static delegate(e){const{stakePubkey:t,authorizedPubkey:r,votePubkey:a}=e;const n=jr.Delegate;const i=encodeData(n);return(new Transaction).add({keys:[{pubkey:t,isSigner:false,isWritable:true},{pubkey:a,isSigner:false,isWritable:false},{pubkey:Q,isSigner:false,isWritable:false},{pubkey:oe,isSigner:false,isWritable:false},{pubkey:zr,isSigner:false,isWritable:false},{pubkey:r,isSigner:true,isWritable:false}],programId:this.programId,data:i})}static authorize(e){const{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:a,stakeAuthorizationType:n,custodianPubkey:i}=e;const s=jr.Authorize;const o=encodeData(s,{newAuthorized:toBuffer(a.toBuffer()),stakeAuthorizationType:n.index});const d=[{pubkey:t,isSigner:false,isWritable:true},{pubkey:Q,isSigner:false,isWritable:true},{pubkey:r,isSigner:true,isWritable:false}];if(i){d.push({pubkey:i,isSigner:true,isWritable:false})}return(new Transaction).add({keys:d,programId:this.programId,data:o})}static authorizeWithSeed(e){const{stakePubkey:t,authorityBase:r,authoritySeed:a,authorityOwner:n,newAuthorizedPubkey:i,stakeAuthorizationType:s,custodianPubkey:o}=e;const d=jr.AuthorizeWithSeed;const p=encodeData(d,{newAuthorized:toBuffer(i.toBuffer()),stakeAuthorizationType:s.index,authoritySeed:a,authorityOwner:toBuffer(n.toBuffer())});const c=[{pubkey:t,isSigner:false,isWritable:true},{pubkey:r,isSigner:true,isWritable:false},{pubkey:Q,isSigner:false,isWritable:false}];if(o){c.push({pubkey:o,isSigner:true,isWritable:false})}return(new Transaction).add({keys:c,programId:this.programId,data:p})}static splitInstruction(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:a,lamports:n}=e;const i=jr.Split;const s=encodeData(i,{lamports:n});return new TransactionInstruction({keys:[{pubkey:t,isSigner:false,isWritable:true},{pubkey:a,isSigner:false,isWritable:true},{pubkey:r,isSigner:true,isWritable:false}],programId:this.programId,data:s})}static split(e,t){const r=new Transaction;r.add(SystemProgram.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:t,space:this.space,programId:this.programId}));return r.add(this.splitInstruction(e))}static splitWithSeed(e,t){const{stakePubkey:r,authorizedPubkey:a,splitStakePubkey:n,basePubkey:i,seed:s,lamports:o}=e;const d=new Transaction;d.add(SystemProgram.allocate({accountPubkey:n,basePubkey:i,seed:s,space:this.space,programId:this.programId}));if(t&&t>0){d.add(SystemProgram.transfer({fromPubkey:e.authorizedPubkey,toPubkey:n,lamports:t}))}return d.add(this.splitInstruction({stakePubkey:r,authorizedPubkey:a,splitStakePubkey:n,lamports:o}))}static merge(e){const{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:a}=e;const n=jr.Merge;const i=encodeData(n);return(new Transaction).add({keys:[{pubkey:t,isSigner:false,isWritable:true},{pubkey:r,isSigner:false,isWritable:true},{pubkey:Q,isSigner:false,isWritable:false},{pubkey:oe,isSigner:false,isWritable:false},{pubkey:a,isSigner:true,isWritable:false}],programId:this.programId,data:i})}static withdraw(e){const{stakePubkey:t,authorizedPubkey:r,toPubkey:a,lamports:n,custodianPubkey:i}=e;const s=jr.Withdraw;const o=encodeData(s,{lamports:n});const d=[{pubkey:t,isSigner:false,isWritable:true},{pubkey:a,isSigner:false,isWritable:true},{pubkey:Q,isSigner:false,isWritable:false},{pubkey:oe,isSigner:false,isWritable:false},{pubkey:r,isSigner:true,isWritable:false}];if(i){d.push({pubkey:i,isSigner:true,isWritable:false})}return(new Transaction).add({keys:d,programId:this.programId,data:o})}static deactivate(e){const{stakePubkey:t,authorizedPubkey:r}=e;const a=jr.Deactivate;const n=encodeData(a);return(new Transaction).add({keys:[{pubkey:t,isSigner:false,isWritable:true},{pubkey:Q,isSigner:false,isWritable:false},{pubkey:r,isSigner:true,isWritable:false}],programId:this.programId,data:n})}}StakeProgram.programId=new PublicKey("Stake11111111111111111111111111111111111111");StakeProgram.space=200;class VoteInit{constructor(e,t,r,a){this.nodePubkey=void 0;this.authorizedVoter=void 0;this.authorizedWithdrawer=void 0;this.commission=void 0;this.nodePubkey=e;this.authorizedVoter=t;this.authorizedWithdrawer=r;this.commission=a}}class VoteInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=R.u32("instruction");const r=t.decode(e.data);let a;for(const[e,t]of Object.entries(qr)){if(t.index==r){a=e;break}}if(!a){throw new Error("Instruction type incorrect; not a VoteInstruction")}return a}static decodeInitializeAccount(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,4);const{voteInit:t}=decodeData$1(qr.InitializeAccount,e.data);return{votePubkey:e.keys[0].pubkey,nodePubkey:e.keys[3].pubkey,voteInit:new VoteInit(new PublicKey(t.nodePubkey),new PublicKey(t.authorizedVoter),new PublicKey(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);const{newAuthorized:t,voteAuthorizationType:r}=decodeData$1(qr.Authorize,e.data);return{votePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new PublicKey(t),voteAuthorizationType:{index:r}}}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);const{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:r,newAuthorized:a,voteAuthorizationType:n}}=decodeData$1(qr.AuthorizeWithSeed,e.data);return{currentAuthorityDerivedKeyBasePubkey:e.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new PublicKey(t),currentAuthorityDerivedKeySeed:r,newAuthorizedPubkey:new PublicKey(a),voteAuthorizationType:{index:n},votePubkey:e.keys[0].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId);this.checkKeyLength(e.keys,3);const{lamports:t}=decodeData$1(qr.Withdraw,e.data);return{votePubkey:e.keys[0].pubkey,authorizedWithdrawerPubkey:e.keys[2].pubkey,lamports:t,toPubkey:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(VoteProgram.programId)){throw new Error("invalid instruction; programId is not VoteProgram")}}static checkKeyLength(e,t){if(e.length<t){throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}}const qr=Object.freeze({InitializeAccount:{index:0,layout:R.struct([R.u32("instruction"),voteInit()])},Authorize:{index:1,layout:R.struct([R.u32("instruction"),publicKey("newAuthorized"),R.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:R.struct([R.u32("instruction"),R.ns64("lamports")])},UpdateValidatorIdentity:{index:4,layout:R.struct([R.u32("instruction")])},AuthorizeWithSeed:{index:10,layout:R.struct([R.u32("instruction"),voteAuthorizeWithSeedArgs()])}});const $r=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class VoteProgram{constructor(){}static initializeAccount(e){const{votePubkey:t,nodePubkey:r,voteInit:a}=e;const n=qr.InitializeAccount;const i=encodeData(n,{voteInit:{nodePubkey:toBuffer(a.nodePubkey.toBuffer()),authorizedVoter:toBuffer(a.authorizedVoter.toBuffer()),authorizedWithdrawer:toBuffer(a.authorizedWithdrawer.toBuffer()),commission:a.commission}});const s={keys:[{pubkey:t,isSigner:false,isWritable:true},{pubkey:ae,isSigner:false,isWritable:false},{pubkey:Q,isSigner:false,isWritable:false},{pubkey:r,isSigner:true,isWritable:false}],programId:this.programId,data:i};return new TransactionInstruction(s)}static createAccount(e){const t=new Transaction;t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));return t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){const{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:a,voteAuthorizationType:n}=e;const i=qr.Authorize;const s=encodeData(i,{newAuthorized:toBuffer(a.toBuffer()),voteAuthorizationType:n.index});const o=[{pubkey:t,isSigner:false,isWritable:true},{pubkey:Q,isSigner:false,isWritable:false},{pubkey:r,isSigner:true,isWritable:false}];return(new Transaction).add({keys:o,programId:this.programId,data:s})}static authorizeWithSeed(e){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:a,newAuthorizedPubkey:n,voteAuthorizationType:i,votePubkey:s}=e;const o=qr.AuthorizeWithSeed;const d=encodeData(o,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:toBuffer(r.toBuffer()),currentAuthorityDerivedKeySeed:a,newAuthorized:toBuffer(n.toBuffer()),voteAuthorizationType:i.index}});const p=[{pubkey:s,isSigner:false,isWritable:true},{pubkey:Q,isSigner:false,isWritable:false},{pubkey:t,isSigner:true,isWritable:false}];return(new Transaction).add({keys:p,programId:this.programId,data:d})}static withdraw(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:a,toPubkey:n}=e;const i=qr.Withdraw;const s=encodeData(i,{lamports:a});const o=[{pubkey:t,isSigner:false,isWritable:true},{pubkey:n,isSigner:false,isWritable:true},{pubkey:r,isSigner:true,isWritable:false}];return(new Transaction).add({keys:o,programId:this.programId,data:s})}static safeWithdraw(e,t,r){if(e.lamports>t-r){throw new Error("Withdraw will leave vote account with insufficient funds.")}return VoteProgram.withdraw(e)}static updateValidatorIdentity(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,nodePubkey:a}=e;const n=qr.UpdateValidatorIdentity;const i=encodeData(n);const s=[{pubkey:t,isSigner:false,isWritable:true},{pubkey:a,isSigner:true,isWritable:false},{pubkey:r,isSigner:true,isWritable:false}];return(new Transaction).add({keys:s,programId:this.programId,data:i})}}VoteProgram.programId=new PublicKey("Vote111111111111111111111111111111111111111");VoteProgram.space=3762;const Kr=new PublicKey("Va1idator1nfo111111111111111111111111111111");const Wr=f.type({name:f.string(),website:f.optional(f.string()),details:f.optional(f.string()),iconUrl:f.optional(f.string()),keybaseUsername:f.optional(f.string())});class ValidatorInfo{constructor(e,t){this.key=void 0;this.info=void 0;this.key=e;this.info=t}static fromConfigData(e){let t=[...e];const r=decodeLength(t);if(r!==2)return null;const n=[];for(let e=0;e<2;e++){const e=new PublicKey(guardedSplice(t,0,U));const r=guardedShift(t)===1;n.push({publicKey:e,isSigner:r})}if(n[0].publicKey.equals(Kr)){if(n[1].isSigner){const e=rustString().decode(a.Buffer.from(t));const r=JSON.parse(e);f.assert(r,Wr);return new ValidatorInfo(n[1].publicKey,r)}}return null}}const Gr=new PublicKey("Vote111111111111111111111111111111111111111");const Yr=R.struct([publicKey("nodePubkey"),publicKey("authorizedWithdrawer"),R.u8("commission"),R.nu64(),R.seq(R.struct([R.nu64("slot"),R.u32("confirmationCount")]),R.offset(R.u32(),-8),"votes"),R.u8("rootSlotValid"),R.nu64("rootSlot"),R.nu64(),R.seq(R.struct([R.nu64("epoch"),publicKey("authorizedVoter")]),R.offset(R.u32(),-8),"authorizedVoters"),R.struct([R.seq(R.struct([publicKey("authorizedPubkey"),R.nu64("epochOfLastAuthorizedSwitch"),R.nu64("targetEpoch")]),32,"buf"),R.nu64("idx"),R.u8("isEmpty")],"priorVoters"),R.nu64(),R.seq(R.struct([R.nu64("epoch"),R.nu64("credits"),R.nu64("prevCredits")]),R.offset(R.u32(),-8),"epochCredits"),R.struct([R.nu64("slot"),R.nu64("timestamp")],"lastTimestamp")]);class VoteAccount{constructor(e){this.nodePubkey=void 0;this.authorizedWithdrawer=void 0;this.commission=void 0;this.rootSlot=void 0;this.votes=void 0;this.authorizedVoters=void 0;this.priorVoters=void 0;this.epochCredits=void 0;this.lastTimestamp=void 0;this.nodePubkey=e.nodePubkey;this.authorizedWithdrawer=e.authorizedWithdrawer;this.commission=e.commission;this.rootSlot=e.rootSlot;this.votes=e.votes;this.authorizedVoters=e.authorizedVoters;this.priorVoters=e.priorVoters;this.epochCredits=e.epochCredits;this.lastTimestamp=e.lastTimestamp}static fromAccountData(e){const t=4;const r=Yr.decode(toBuffer(e),t);let a=r.rootSlot;if(!r.rootSlotValid){a=null}return new VoteAccount({nodePubkey:new PublicKey(r.nodePubkey),authorizedWithdrawer:new PublicKey(r.authorizedWithdrawer),commission:r.commission,votes:r.votes,rootSlot:a,authorizedVoters:r.authorizedVoters.map(parseAuthorizedVoter),priorVoters:getPriorVoters(r.priorVoters),epochCredits:r.epochCredits,lastTimestamp:r.lastTimestamp})}}function parseAuthorizedVoter({authorizedVoter:e,epoch:t}){return{epoch:t,authorizedVoter:new PublicKey(e)}}function parsePriorVoters({authorizedPubkey:e,epochOfLastAuthorizedSwitch:t,targetEpoch:r}){return{authorizedPubkey:new PublicKey(e),epochOfLastAuthorizedSwitch:t,targetEpoch:r}}function getPriorVoters({buf:e,idx:t,isEmpty:r}){if(r){return[]}return[...e.slice(t+1).map(parsePriorVoters),...e.slice(0,t).map(parsePriorVoters)]}const Jr={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function clusterApiUrl(e,t){const r=t===false?"http":"https";if(!e){return Jr[r]["devnet"]}const a=Jr[r][e];if(!a){throw new Error(`Unknown ${r} cluster: ${e}`)}return a}async function sendAndConfirmRawTransaction(e,t,r,a){let n;let i;if(r&&Object.prototype.hasOwnProperty.call(r,"lastValidBlockHeight")){n=r;i=a}else if(r&&Object.prototype.hasOwnProperty.call(r,"nonceValue")){n=r;i=a}else{i=r}const s=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,minContextSlot:i.minContextSlot};const o=await e.sendRawTransaction(t,s);const d=i&&i.commitment;const p=n?e.confirmTransaction(n,d):e.confirmTransaction(o,d);const c=(await p).value;if(c.err){if(o!=null){throw new SendTransactionError({action:s?.skipPreflight?"send":"simulate",signature:o,transactionMessage:`Status: (${JSON.stringify(c)})`})}throw new Error(`Raw transaction ${o} failed (${JSON.stringify(c)})`)}return o}const Xr=1e9;t.Account=Account;t.AddressLookupTableAccount=AddressLookupTableAccount;t.AddressLookupTableInstruction=AddressLookupTableInstruction;t.AddressLookupTableProgram=AddressLookupTableProgram;t.Authorized=Authorized;t.BLOCKHASH_CACHE_TIMEOUT_MS=ze;t.BPF_LOADER_DEPRECATED_PROGRAM_ID=V;t.BPF_LOADER_PROGRAM_ID=he;t.BpfLoader=BpfLoader;t.COMPUTE_BUDGET_INSTRUCTION_LAYOUTS=Cr;t.ComputeBudgetInstruction=ComputeBudgetInstruction;t.ComputeBudgetProgram=ComputeBudgetProgram;t.Connection=Connection;t.Ed25519Program=Ed25519Program;t.Enum=Enum;t.EpochSchedule=EpochSchedule;t.FeeCalculatorLayout=pe;t.Keypair=Keypair;t.LAMPORTS_PER_SOL=Xr;t.LOOKUP_TABLE_INSTRUCTION_LAYOUTS=Nr;t.Loader=Loader;t.Lockup=Lockup;t.MAX_SEED_LENGTH=L;t.Message=Message;t.MessageAccountKeys=MessageAccountKeys;t.MessageV0=MessageV0;t.NONCE_ACCOUNT_LENGTH=le;t.NonceAccount=NonceAccount;t.PACKET_DATA_SIZE=z;t.PUBLIC_KEY_LENGTH=U;t.PublicKey=PublicKey;t.SIGNATURE_LENGTH_IN_BYTES=H;t.SOLANA_SCHEMA=P;t.STAKE_CONFIG_ID=zr;t.STAKE_INSTRUCTION_LAYOUTS=jr;t.SYSTEM_INSTRUCTION_LAYOUTS=ue;t.SYSVAR_CLOCK_PUBKEY=Q;t.SYSVAR_EPOCH_SCHEDULE_PUBKEY=ee;t.SYSVAR_INSTRUCTIONS_PUBKEY=te;t.SYSVAR_RECENT_BLOCKHASHES_PUBKEY=re;t.SYSVAR_RENT_PUBKEY=ae;t.SYSVAR_REWARDS_PUBKEY=ne;t.SYSVAR_SLOT_HASHES_PUBKEY=ie;t.SYSVAR_SLOT_HISTORY_PUBKEY=se;t.SYSVAR_STAKE_HISTORY_PUBKEY=oe;t.Secp256k1Program=Secp256k1Program;t.SendTransactionError=SendTransactionError;t.SolanaJSONRPCError=SolanaJSONRPCError;t.SolanaJSONRPCErrorCode=de;t.StakeAuthorizationLayout=Hr;t.StakeInstruction=StakeInstruction;t.StakeProgram=StakeProgram;t.Struct=Struct;t.SystemInstruction=SystemInstruction;t.SystemProgram=SystemProgram;t.Transaction=Transaction;t.TransactionExpiredBlockheightExceededError=TransactionExpiredBlockheightExceededError;t.TransactionExpiredNonceInvalidError=TransactionExpiredNonceInvalidError;t.TransactionExpiredTimeoutError=TransactionExpiredTimeoutError;t.TransactionInstruction=TransactionInstruction;t.TransactionMessage=TransactionMessage;t.TransactionStatus=K;t.VALIDATOR_INFO_KEY=Kr;t.VERSION_PREFIX_MASK=j;t.VOTE_PROGRAM_ID=Gr;t.ValidatorInfo=ValidatorInfo;t.VersionedMessage=$;t.VersionedTransaction=VersionedTransaction;t.VoteAccount=VoteAccount;t.VoteAuthorizationLayout=$r;t.VoteInit=VoteInit;t.VoteInstruction=VoteInstruction;t.VoteProgram=VoteProgram;t.clusterApiUrl=clusterApiUrl;t.sendAndConfirmRawTransaction=sendAndConfirmRawTransaction;t.sendAndConfirmTransaction=sendAndConfirmTransaction},6335:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var a=r(4343);class AbortSignal extends a.EventTarget{constructor(){super();throw new TypeError("AbortSignal cannot be constructed directly")}get aborted(){const e=n.get(this);if(typeof e!=="boolean"){throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this===null?"null":typeof this}`)}return e}}a.defineEventAttribute(AbortSignal.prototype,"abort");function createAbortSignal(){const e=Object.create(AbortSignal.prototype);a.EventTarget.call(e);n.set(e,false);return e}function abortSignal(e){if(n.get(e)!==false){return}n.set(e,true);e.dispatchEvent({type:"abort"})}const n=new WeakMap;Object.defineProperties(AbortSignal.prototype,{aborted:{enumerable:true}});if(typeof Symbol==="function"&&typeof Symbol.toStringTag==="symbol"){Object.defineProperty(AbortSignal.prototype,Symbol.toStringTag,{configurable:true,value:"AbortSignal"})}class AbortController{constructor(){i.set(this,createAbortSignal())}get signal(){return getSignal(this)}abort(){abortSignal(getSignal(this))}}const i=new WeakMap;function getSignal(e){const t=i.get(e);if(t==null){throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${e===null?"null":typeof e}`)}return t}Object.defineProperties(AbortController.prototype,{signal:{enumerable:true},abort:{enumerable:true}});if(typeof Symbol==="function"&&typeof Symbol.toStringTag==="symbol"){Object.defineProperty(AbortController.prototype,Symbol.toStringTag,{configurable:true,value:"AbortController"})}t.AbortController=AbortController;t.AbortSignal=AbortSignal;t["default"]=AbortController;e.exports=AbortController;e.exports.AbortController=e.exports["default"]=AbortController;e.exports.AbortSignal=AbortSignal},8674:(e,t,r)=>{"use strict";var a=r(3476).Buffer;function base(e){if(e.length>=255){throw new TypeError("Alphabet too long")}var t=new Uint8Array(256);for(var r=0;r<t.length;r++){t[r]=255}for(var n=0;n<e.length;n++){var i=e.charAt(n);var s=i.charCodeAt(0);if(t[s]!==255){throw new TypeError(i+" is ambiguous")}t[s]=n}var o=e.length;var d=e.charAt(0);var p=Math.log(o)/Math.log(256);var c=Math.log(256)/Math.log(o);function encode(t){if(Array.isArray(t)||t instanceof Uint8Array){t=a.from(t)}if(!a.isBuffer(t)){throw new TypeError("Expected Buffer")}if(t.length===0){return""}var r=0;var n=0;var i=0;var s=t.length;while(i!==s&&t[i]===0){i++;r++}var p=(s-i)*c+1>>>0;var l=new Uint8Array(p);while(i!==s){var u=t[i];var m=0;for(var f=p-1;(u!==0||m<n)&&f!==-1;f--,m++){u+=256*l[f]>>>0;l[f]=u%o>>>0;u=u/o>>>0}if(u!==0){throw new Error("Non-zero carry")}n=m;i++}var g=p-n;while(g!==p&&l[g]===0){g++}var y=d.repeat(r);for(;g<p;++g){y+=e.charAt(l[g])}return y}function decodeUnsafe(e){if(typeof e!=="string"){throw new TypeError("Expected String")}if(e.length===0){return a.alloc(0)}var r=0;var n=0;var i=0;while(e[r]===d){n++;r++}var s=(e.length-r)*p+1>>>0;var c=new Uint8Array(s);while(r<e.length){var l=e.charCodeAt(r);if(l>255){return}var u=t[l];if(u===255){return}var m=0;for(var f=s-1;(u!==0||m<i)&&f!==-1;f--,m++){u+=o*c[f]>>>0;c[f]=u%256>>>0;u=u/256>>>0}if(u!==0){throw new Error("Non-zero carry")}i=m;r++}var g=s-i;while(g!==s&&c[g]===0){g++}var y=a.allocUnsafe(n+(s-g));y.fill(0,0,n);var _=n;while(g!==s){y[_++]=c[g++]}return y}function decode(e){var t=decodeUnsafe(e);if(t){return t}throw new Error("Non-base"+o+" character")}return{encode:encode,decodeUnsafe:decodeUnsafe,decode:decode}}e.exports=base},4801:function(e,t,r){e=r.nmd(e);(function(e,t){"use strict";function assert(e,t){if(!e)throw new Error(t||"Assertion failed")}function inherits(e,t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}function BN(e,t,r){if(BN.isBN(e)){return e}this.negative=0;this.words=null;this.length=0;this.red=null;if(e!==null){if(t==="le"||t==="be"){r=t;t=10}this._init(e||0,t||10,r||"be")}}if(typeof e==="object"){e.exports=BN}else{t.BN=BN}BN.BN=BN;BN.wordSize=26;var a;try{if(typeof window!=="undefined"&&typeof window.Buffer!=="undefined"){a=window.Buffer}else{a=r(181).Buffer}}catch(e){}BN.isBN=function isBN(e){if(e instanceof BN){return true}return e!==null&&typeof e==="object"&&e.constructor.wordSize===BN.wordSize&&Array.isArray(e.words)};BN.max=function max(e,t){if(e.cmp(t)>0)return e;return t};BN.min=function min(e,t){if(e.cmp(t)<0)return e;return t};BN.prototype._init=function init(e,t,r){if(typeof e==="number"){return this._initNumber(e,t,r)}if(typeof e==="object"){return this._initArray(e,t,r)}if(t==="hex"){t=16}assert(t===(t|0)&&t>=2&&t<=36);e=e.toString().replace(/\s+/g,"");var a=0;if(e[0]==="-"){a++;this.negative=1}if(a<e.length){if(t===16){this._parseHex(e,a,r)}else{this._parseBase(e,t,a);if(r==="le"){this._initArray(this.toArray(),t,r)}}}};BN.prototype._initNumber=function _initNumber(e,t,r){if(e<0){this.negative=1;e=-e}if(e<67108864){this.words=[e&67108863];this.length=1}else if(e<4503599627370496){this.words=[e&67108863,e/67108864&67108863];this.length=2}else{assert(e<9007199254740992);this.words=[e&67108863,e/67108864&67108863,1];this.length=3}if(r!=="le")return;this._initArray(this.toArray(),t,r)};BN.prototype._initArray=function _initArray(e,t,r){assert(typeof e.length==="number");if(e.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(e.length/3);this.words=new Array(this.length);for(var a=0;a<this.length;a++){this.words[a]=0}var n,i;var s=0;if(r==="be"){for(a=e.length-1,n=0;a>=0;a-=3){i=e[a]|e[a-1]<<8|e[a-2]<<16;this.words[n]|=i<<s&67108863;this.words[n+1]=i>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}else if(r==="le"){for(a=0,n=0;a<e.length;a+=3){i=e[a]|e[a+1]<<8|e[a+2]<<16;this.words[n]|=i<<s&67108863;this.words[n+1]=i>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}return this._strip()};function parseHex4Bits(e,t){var r=e.charCodeAt(t);if(r>=48&&r<=57){return r-48}else if(r>=65&&r<=70){return r-55}else if(r>=97&&r<=102){return r-87}else{assert(false,"Invalid character in "+e)}}function parseHexByte(e,t,r){var a=parseHex4Bits(e,r);if(r-1>=t){a|=parseHex4Bits(e,r-1)<<4}return a}BN.prototype._parseHex=function _parseHex(e,t,r){this.length=Math.ceil((e.length-t)/6);this.words=new Array(this.length);for(var a=0;a<this.length;a++){this.words[a]=0}var n=0;var i=0;var s;if(r==="be"){for(a=e.length-1;a>=t;a-=2){s=parseHexByte(e,t,a)<<n;this.words[i]|=s&67108863;if(n>=18){n-=18;i+=1;this.words[i]|=s>>>26}else{n+=8}}}else{var o=e.length-t;for(a=o%2===0?t+1:t;a<e.length;a+=2){s=parseHexByte(e,t,a)<<n;this.words[i]|=s&67108863;if(n>=18){n-=18;i+=1;this.words[i]|=s>>>26}else{n+=8}}}this._strip()};function parseBase(e,t,r,a){var n=0;var i=0;var s=Math.min(e.length,r);for(var o=t;o<s;o++){var d=e.charCodeAt(o)-48;n*=a;if(d>=49){i=d-49+10}else if(d>=17){i=d-17+10}else{i=d}assert(d>=0&&i<a,"Invalid character");n+=i}return n}BN.prototype._parseBase=function _parseBase(e,t,r){this.words=[0];this.length=1;for(var a=0,n=1;n<=67108863;n*=t){a++}a--;n=n/t|0;var i=e.length-r;var s=i%a;var o=Math.min(i,i-s)+r;var d=0;for(var p=r;p<o;p+=a){d=parseBase(e,p,p+a,t);this.imuln(n);if(this.words[0]+d<67108864){this.words[0]+=d}else{this._iaddn(d)}}if(s!==0){var c=1;d=parseBase(e,p,e.length,t);for(p=0;p<s;p++){c*=t}this.imuln(c);if(this.words[0]+d<67108864){this.words[0]+=d}else{this._iaddn(d)}}this._strip()};BN.prototype.copy=function copy(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++){e.words[t]=this.words[t]}e.length=this.length;e.negative=this.negative;e.red=this.red};function move(e,t){e.words=t.words;e.length=t.length;e.negative=t.negative;e.red=t.red}BN.prototype._move=function _move(e){move(e,this)};BN.prototype.clone=function clone(){var e=new BN(null);this.copy(e);return e};BN.prototype._expand=function _expand(e){while(this.length<e){this.words[this.length++]=0}return this};BN.prototype._strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};if(typeof Symbol!=="undefined"&&typeof Symbol.for==="function"){try{BN.prototype[Symbol.for("nodejs.util.inspect.custom")]=inspect}catch(e){BN.prototype.inspect=inspect}}else{BN.prototype.inspect=inspect}function inspect(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var n=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"];var i=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var s=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(e,t){e=e||10;t=t|0||1;var r;if(e===16||e==="hex"){r="";var a=0;var o=0;for(var d=0;d<this.length;d++){var p=this.words[d];var c=((p<<a|o)&16777215).toString(16);o=p>>>24-a&16777215;a+=2;if(a>=26){a-=26;d--}if(o!==0||d!==this.length-1){r=n[6-c.length]+c+r}else{r=c+r}}if(o!==0){r=o.toString(16)+r}while(r.length%t!==0){r="0"+r}if(this.negative!==0){r="-"+r}return r}if(e===(e|0)&&e>=2&&e<=36){var l=i[e];var u=s[e];r="";var m=this.clone();m.negative=0;while(!m.isZero()){var f=m.modrn(u).toString(e);m=m.idivn(u);if(!m.isZero()){r=n[l-f.length]+f+r}else{r=f+r}}if(this.isZero()){r="0"+r}while(r.length%t!==0){r="0"+r}if(this.negative!==0){r="-"+r}return r}assert(false,"Base should be between 2 and 36")};BN.prototype.toNumber=function toNumber(){var e=this.words[0];if(this.length===2){e+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){e+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert(false,"Number can only safely store up to 53 bits")}return this.negative!==0?-e:e};BN.prototype.toJSON=function toJSON(){return this.toString(16,2)};if(a){BN.prototype.toBuffer=function toBuffer(e,t){return this.toArrayLike(a,e,t)}}BN.prototype.toArray=function toArray(e,t){return this.toArrayLike(Array,e,t)};var o=function allocate(e,t){if(e.allocUnsafe){return e.allocUnsafe(t)}return new e(t)};BN.prototype.toArrayLike=function toArrayLike(e,t,r){this._strip();var a=this.byteLength();var n=r||Math.max(1,a);assert(a<=n,"byte array longer than desired length");assert(n>0,"Requested array length <= 0");var i=o(e,n);var s=t==="le"?"LE":"BE";this["_toArrayLike"+s](i,a);return i};BN.prototype._toArrayLikeLE=function _toArrayLikeLE(e,t){var r=0;var a=0;for(var n=0,i=0;n<this.length;n++){var s=this.words[n]<<i|a;e[r++]=s&255;if(r<e.length){e[r++]=s>>8&255}if(r<e.length){e[r++]=s>>16&255}if(i===6){if(r<e.length){e[r++]=s>>24&255}a=0;i=0}else{a=s>>>24;i+=2}}if(r<e.length){e[r++]=a;while(r<e.length){e[r++]=0}}};BN.prototype._toArrayLikeBE=function _toArrayLikeBE(e,t){var r=e.length-1;var a=0;for(var n=0,i=0;n<this.length;n++){var s=this.words[n]<<i|a;e[r--]=s&255;if(r>=0){e[r--]=s>>8&255}if(r>=0){e[r--]=s>>16&255}if(i===6){if(r>=0){e[r--]=s>>24&255}a=0;i=0}else{a=s>>>24;i+=2}}if(r>=0){e[r--]=a;while(r>=0){e[r--]=0}}};if(Math.clz32){BN.prototype._countBits=function _countBits(e){return 32-Math.clz32(e)}}else{BN.prototype._countBits=function _countBits(e){var t=e;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN.prototype._zeroBits=function _zeroBits(e){if(e===0)return 26;var t=e;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN.prototype.bitLength=function bitLength(){var e=this.words[this.length-1];var t=this._countBits(e);return(this.length-1)*26+t};function toBitArray(e){var t=new Array(e.bitLength());for(var r=0;r<t.length;r++){var a=r/26|0;var n=r%26;t[r]=e.words[a]>>>n&1}return t}BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var e=0;for(var t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);e+=r;if(r!==26)break}return e};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN.prototype.toTwos=function toTwos(e){if(this.negative!==0){return this.abs().inotn(e).iaddn(1)}return this.clone()};BN.prototype.fromTwos=function fromTwos(e){if(this.testn(e-1)){return this.notn(e).iaddn(1).ineg()}return this.clone()};BN.prototype.isNeg=function isNeg(){return this.negative!==0};BN.prototype.neg=function neg(){return this.clone().ineg()};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN.prototype.iuor=function iuor(e){while(this.length<e.length){this.words[this.length++]=0}for(var t=0;t<e.length;t++){this.words[t]=this.words[t]|e.words[t]}return this._strip()};BN.prototype.ior=function ior(e){assert((this.negative|e.negative)===0);return this.iuor(e)};BN.prototype.or=function or(e){if(this.length>e.length)return this.clone().ior(e);return e.clone().ior(this)};BN.prototype.uor=function uor(e){if(this.length>e.length)return this.clone().iuor(e);return e.clone().iuor(this)};BN.prototype.iuand=function iuand(e){var t;if(this.length>e.length){t=e}else{t=this}for(var r=0;r<t.length;r++){this.words[r]=this.words[r]&e.words[r]}this.length=t.length;return this._strip()};BN.prototype.iand=function iand(e){assert((this.negative|e.negative)===0);return this.iuand(e)};BN.prototype.and=function and(e){if(this.length>e.length)return this.clone().iand(e);return e.clone().iand(this)};BN.prototype.uand=function uand(e){if(this.length>e.length)return this.clone().iuand(e);return e.clone().iuand(this)};BN.prototype.iuxor=function iuxor(e){var t;var r;if(this.length>e.length){t=this;r=e}else{t=e;r=this}for(var a=0;a<r.length;a++){this.words[a]=t.words[a]^r.words[a]}if(this!==t){for(;a<t.length;a++){this.words[a]=t.words[a]}}this.length=t.length;return this._strip()};BN.prototype.ixor=function ixor(e){assert((this.negative|e.negative)===0);return this.iuxor(e)};BN.prototype.xor=function xor(e){if(this.length>e.length)return this.clone().ixor(e);return e.clone().ixor(this)};BN.prototype.uxor=function uxor(e){if(this.length>e.length)return this.clone().iuxor(e);return e.clone().iuxor(this)};BN.prototype.inotn=function inotn(e){assert(typeof e==="number"&&e>=0);var t=Math.ceil(e/26)|0;var r=e%26;this._expand(t);if(r>0){t--}for(var a=0;a<t;a++){this.words[a]=~this.words[a]&67108863}if(r>0){this.words[a]=~this.words[a]&67108863>>26-r}return this._strip()};BN.prototype.notn=function notn(e){return this.clone().inotn(e)};BN.prototype.setn=function setn(e,t){assert(typeof e==="number"&&e>=0);var r=e/26|0;var a=e%26;this._expand(r+1);if(t){this.words[r]=this.words[r]|1<<a}else{this.words[r]=this.words[r]&~(1<<a)}return this._strip()};BN.prototype.iadd=function iadd(e){var t;if(this.negative!==0&&e.negative===0){this.negative=0;t=this.isub(e);this.negative^=1;return this._normSign()}else if(this.negative===0&&e.negative!==0){e.negative=0;t=this.isub(e);e.negative=1;return t._normSign()}var r,a;if(this.length>e.length){r=this;a=e}else{r=e;a=this}var n=0;for(var i=0;i<a.length;i++){t=(r.words[i]|0)+(a.words[i]|0)+n;this.words[i]=t&67108863;n=t>>>26}for(;n!==0&&i<r.length;i++){t=(r.words[i]|0)+n;this.words[i]=t&67108863;n=t>>>26}this.length=r.length;if(n!==0){this.words[this.length]=n;this.length++}else if(r!==this){for(;i<r.length;i++){this.words[i]=r.words[i]}}return this};BN.prototype.add=function add(e){var t;if(e.negative!==0&&this.negative===0){e.negative=0;t=this.sub(e);e.negative^=1;return t}else if(e.negative===0&&this.negative!==0){this.negative=0;t=e.sub(this);this.negative=1;return t}if(this.length>e.length)return this.clone().iadd(e);return e.clone().iadd(this)};BN.prototype.isub=function isub(e){if(e.negative!==0){e.negative=0;var t=this.iadd(e);e.negative=1;return t._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(e);this.negative=1;return this._normSign()}var r=this.cmp(e);if(r===0){this.negative=0;this.length=1;this.words[0]=0;return this}var a,n;if(r>0){a=this;n=e}else{a=e;n=this}var i=0;for(var s=0;s<n.length;s++){t=(a.words[s]|0)-(n.words[s]|0)+i;i=t>>26;this.words[s]=t&67108863}for(;i!==0&&s<a.length;s++){t=(a.words[s]|0)+i;i=t>>26;this.words[s]=t&67108863}if(i===0&&s<a.length&&a!==this){for(;s<a.length;s++){this.words[s]=a.words[s]}}this.length=Math.max(this.length,s);if(a!==this){this.negative=1}return this._strip()};BN.prototype.sub=function sub(e){return this.clone().isub(e)};function smallMulTo(e,t,r){r.negative=t.negative^e.negative;var a=e.length+t.length|0;r.length=a;a=a-1|0;var n=e.words[0]|0;var i=t.words[0]|0;var s=n*i;var o=s&67108863;var d=s/67108864|0;r.words[0]=o;for(var p=1;p<a;p++){var c=d>>>26;var l=d&67108863;var u=Math.min(p,t.length-1);for(var m=Math.max(0,p-e.length+1);m<=u;m++){var f=p-m|0;n=e.words[f]|0;i=t.words[m]|0;s=n*i+l;c+=s/67108864|0;l=s&67108863}r.words[p]=l|0;d=c|0}if(d!==0){r.words[p]=d|0}else{r.length--}return r._strip()}var d=function comb10MulTo(e,t,r){var a=e.words;var n=t.words;var i=r.words;var s=0;var o;var d;var p;var c=a[0]|0;var l=c&8191;var u=c>>>13;var m=a[1]|0;var f=m&8191;var g=m>>>13;var y=a[2]|0;var _=y&8191;var v=y>>>13;var b=a[3]|0;var w=b&8191;var E=b>>>13;var R=a[4]|0;var T=R&8191;var O=R>>>13;var N=a[5]|0;var C=N&8191;var k=N>>>13;var I=a[6]|0;var x=I&8191;var B=I>>>13;var P=a[7]|0;var D=P&8191;var L=P>>>13;var U=a[8]|0;var F=U&8191;var V=U>>>13;var z=a[9]|0;var j=z&8191;var H=z>>>13;var q=n[0]|0;var $=q&8191;var K=q>>>13;var W=n[1]|0;var G=W&8191;var Y=W>>>13;var J=n[2]|0;var X=J&8191;var Q=J>>>13;var ee=n[3]|0;var te=ee&8191;var re=ee>>>13;var ae=n[4]|0;var ne=ae&8191;var ie=ae>>>13;var se=n[5]|0;var oe=se&8191;var de=se>>>13;var pe=n[6]|0;var ce=pe&8191;var le=pe>>>13;var ue=n[7]|0;var me=ue&8191;var he=ue>>>13;var fe=n[8]|0;var ge=fe&8191;var ye=fe>>>13;var _e=n[9]|0;var ve=_e&8191;var be=_e>>>13;r.negative=e.negative^t.negative;r.length=19;o=Math.imul(l,$);d=Math.imul(l,K);d=d+Math.imul(u,$)|0;p=Math.imul(u,K);var we=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(we>>>26)|0;we&=67108863;o=Math.imul(f,$);d=Math.imul(f,K);d=d+Math.imul(g,$)|0;p=Math.imul(g,K);o=o+Math.imul(l,G)|0;d=d+Math.imul(l,Y)|0;d=d+Math.imul(u,G)|0;p=p+Math.imul(u,Y)|0;var Se=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Se>>>26)|0;Se&=67108863;o=Math.imul(_,$);d=Math.imul(_,K);d=d+Math.imul(v,$)|0;p=Math.imul(v,K);o=o+Math.imul(f,G)|0;d=d+Math.imul(f,Y)|0;d=d+Math.imul(g,G)|0;p=p+Math.imul(g,Y)|0;o=o+Math.imul(l,X)|0;d=d+Math.imul(l,Q)|0;d=d+Math.imul(u,X)|0;p=p+Math.imul(u,Q)|0;var Ee=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Ee>>>26)|0;Ee&=67108863;o=Math.imul(w,$);d=Math.imul(w,K);d=d+Math.imul(E,$)|0;p=Math.imul(E,K);o=o+Math.imul(_,G)|0;d=d+Math.imul(_,Y)|0;d=d+Math.imul(v,G)|0;p=p+Math.imul(v,Y)|0;o=o+Math.imul(f,X)|0;d=d+Math.imul(f,Q)|0;d=d+Math.imul(g,X)|0;p=p+Math.imul(g,Q)|0;o=o+Math.imul(l,te)|0;d=d+Math.imul(l,re)|0;d=d+Math.imul(u,te)|0;p=p+Math.imul(u,re)|0;var Ae=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Ae>>>26)|0;Ae&=67108863;o=Math.imul(T,$);d=Math.imul(T,K);d=d+Math.imul(O,$)|0;p=Math.imul(O,K);o=o+Math.imul(w,G)|0;d=d+Math.imul(w,Y)|0;d=d+Math.imul(E,G)|0;p=p+Math.imul(E,Y)|0;o=o+Math.imul(_,X)|0;d=d+Math.imul(_,Q)|0;d=d+Math.imul(v,X)|0;p=p+Math.imul(v,Q)|0;o=o+Math.imul(f,te)|0;d=d+Math.imul(f,re)|0;d=d+Math.imul(g,te)|0;p=p+Math.imul(g,re)|0;o=o+Math.imul(l,ne)|0;d=d+Math.imul(l,ie)|0;d=d+Math.imul(u,ne)|0;p=p+Math.imul(u,ie)|0;var Re=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Re>>>26)|0;Re&=67108863;o=Math.imul(C,$);d=Math.imul(C,K);d=d+Math.imul(k,$)|0;p=Math.imul(k,K);o=o+Math.imul(T,G)|0;d=d+Math.imul(T,Y)|0;d=d+Math.imul(O,G)|0;p=p+Math.imul(O,Y)|0;o=o+Math.imul(w,X)|0;d=d+Math.imul(w,Q)|0;d=d+Math.imul(E,X)|0;p=p+Math.imul(E,Q)|0;o=o+Math.imul(_,te)|0;d=d+Math.imul(_,re)|0;d=d+Math.imul(v,te)|0;p=p+Math.imul(v,re)|0;o=o+Math.imul(f,ne)|0;d=d+Math.imul(f,ie)|0;d=d+Math.imul(g,ne)|0;p=p+Math.imul(g,ie)|0;o=o+Math.imul(l,oe)|0;d=d+Math.imul(l,de)|0;d=d+Math.imul(u,oe)|0;p=p+Math.imul(u,de)|0;var Te=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Te>>>26)|0;Te&=67108863;o=Math.imul(x,$);d=Math.imul(x,K);d=d+Math.imul(B,$)|0;p=Math.imul(B,K);o=o+Math.imul(C,G)|0;d=d+Math.imul(C,Y)|0;d=d+Math.imul(k,G)|0;p=p+Math.imul(k,Y)|0;o=o+Math.imul(T,X)|0;d=d+Math.imul(T,Q)|0;d=d+Math.imul(O,X)|0;p=p+Math.imul(O,Q)|0;o=o+Math.imul(w,te)|0;d=d+Math.imul(w,re)|0;d=d+Math.imul(E,te)|0;p=p+Math.imul(E,re)|0;o=o+Math.imul(_,ne)|0;d=d+Math.imul(_,ie)|0;d=d+Math.imul(v,ne)|0;p=p+Math.imul(v,ie)|0;o=o+Math.imul(f,oe)|0;d=d+Math.imul(f,de)|0;d=d+Math.imul(g,oe)|0;p=p+Math.imul(g,de)|0;o=o+Math.imul(l,ce)|0;d=d+Math.imul(l,le)|0;d=d+Math.imul(u,ce)|0;p=p+Math.imul(u,le)|0;var Oe=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Oe>>>26)|0;Oe&=67108863;o=Math.imul(D,$);d=Math.imul(D,K);d=d+Math.imul(L,$)|0;p=Math.imul(L,K);o=o+Math.imul(x,G)|0;d=d+Math.imul(x,Y)|0;d=d+Math.imul(B,G)|0;p=p+Math.imul(B,Y)|0;o=o+Math.imul(C,X)|0;d=d+Math.imul(C,Q)|0;d=d+Math.imul(k,X)|0;p=p+Math.imul(k,Q)|0;o=o+Math.imul(T,te)|0;d=d+Math.imul(T,re)|0;d=d+Math.imul(O,te)|0;p=p+Math.imul(O,re)|0;o=o+Math.imul(w,ne)|0;d=d+Math.imul(w,ie)|0;d=d+Math.imul(E,ne)|0;p=p+Math.imul(E,ie)|0;o=o+Math.imul(_,oe)|0;d=d+Math.imul(_,de)|0;d=d+Math.imul(v,oe)|0;p=p+Math.imul(v,de)|0;o=o+Math.imul(f,ce)|0;d=d+Math.imul(f,le)|0;d=d+Math.imul(g,ce)|0;p=p+Math.imul(g,le)|0;o=o+Math.imul(l,me)|0;d=d+Math.imul(l,he)|0;d=d+Math.imul(u,me)|0;p=p+Math.imul(u,he)|0;var Ne=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Ne>>>26)|0;Ne&=67108863;o=Math.imul(F,$);d=Math.imul(F,K);d=d+Math.imul(V,$)|0;p=Math.imul(V,K);o=o+Math.imul(D,G)|0;d=d+Math.imul(D,Y)|0;d=d+Math.imul(L,G)|0;p=p+Math.imul(L,Y)|0;o=o+Math.imul(x,X)|0;d=d+Math.imul(x,Q)|0;d=d+Math.imul(B,X)|0;p=p+Math.imul(B,Q)|0;o=o+Math.imul(C,te)|0;d=d+Math.imul(C,re)|0;d=d+Math.imul(k,te)|0;p=p+Math.imul(k,re)|0;o=o+Math.imul(T,ne)|0;d=d+Math.imul(T,ie)|0;d=d+Math.imul(O,ne)|0;p=p+Math.imul(O,ie)|0;o=o+Math.imul(w,oe)|0;d=d+Math.imul(w,de)|0;d=d+Math.imul(E,oe)|0;p=p+Math.imul(E,de)|0;o=o+Math.imul(_,ce)|0;d=d+Math.imul(_,le)|0;d=d+Math.imul(v,ce)|0;p=p+Math.imul(v,le)|0;o=o+Math.imul(f,me)|0;d=d+Math.imul(f,he)|0;d=d+Math.imul(g,me)|0;p=p+Math.imul(g,he)|0;o=o+Math.imul(l,ge)|0;d=d+Math.imul(l,ye)|0;d=d+Math.imul(u,ge)|0;p=p+Math.imul(u,ye)|0;var Ce=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Ce>>>26)|0;Ce&=67108863;o=Math.imul(j,$);d=Math.imul(j,K);d=d+Math.imul(H,$)|0;p=Math.imul(H,K);o=o+Math.imul(F,G)|0;d=d+Math.imul(F,Y)|0;d=d+Math.imul(V,G)|0;p=p+Math.imul(V,Y)|0;o=o+Math.imul(D,X)|0;d=d+Math.imul(D,Q)|0;d=d+Math.imul(L,X)|0;p=p+Math.imul(L,Q)|0;o=o+Math.imul(x,te)|0;d=d+Math.imul(x,re)|0;d=d+Math.imul(B,te)|0;p=p+Math.imul(B,re)|0;o=o+Math.imul(C,ne)|0;d=d+Math.imul(C,ie)|0;d=d+Math.imul(k,ne)|0;p=p+Math.imul(k,ie)|0;o=o+Math.imul(T,oe)|0;d=d+Math.imul(T,de)|0;d=d+Math.imul(O,oe)|0;p=p+Math.imul(O,de)|0;o=o+Math.imul(w,ce)|0;d=d+Math.imul(w,le)|0;d=d+Math.imul(E,ce)|0;p=p+Math.imul(E,le)|0;o=o+Math.imul(_,me)|0;d=d+Math.imul(_,he)|0;d=d+Math.imul(v,me)|0;p=p+Math.imul(v,he)|0;o=o+Math.imul(f,ge)|0;d=d+Math.imul(f,ye)|0;d=d+Math.imul(g,ge)|0;p=p+Math.imul(g,ye)|0;o=o+Math.imul(l,ve)|0;d=d+Math.imul(l,be)|0;d=d+Math.imul(u,ve)|0;p=p+Math.imul(u,be)|0;var ke=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(ke>>>26)|0;ke&=67108863;o=Math.imul(j,G);d=Math.imul(j,Y);d=d+Math.imul(H,G)|0;p=Math.imul(H,Y);o=o+Math.imul(F,X)|0;d=d+Math.imul(F,Q)|0;d=d+Math.imul(V,X)|0;p=p+Math.imul(V,Q)|0;o=o+Math.imul(D,te)|0;d=d+Math.imul(D,re)|0;d=d+Math.imul(L,te)|0;p=p+Math.imul(L,re)|0;o=o+Math.imul(x,ne)|0;d=d+Math.imul(x,ie)|0;d=d+Math.imul(B,ne)|0;p=p+Math.imul(B,ie)|0;o=o+Math.imul(C,oe)|0;d=d+Math.imul(C,de)|0;d=d+Math.imul(k,oe)|0;p=p+Math.imul(k,de)|0;o=o+Math.imul(T,ce)|0;d=d+Math.imul(T,le)|0;d=d+Math.imul(O,ce)|0;p=p+Math.imul(O,le)|0;o=o+Math.imul(w,me)|0;d=d+Math.imul(w,he)|0;d=d+Math.imul(E,me)|0;p=p+Math.imul(E,he)|0;o=o+Math.imul(_,ge)|0;d=d+Math.imul(_,ye)|0;d=d+Math.imul(v,ge)|0;p=p+Math.imul(v,ye)|0;o=o+Math.imul(f,ve)|0;d=d+Math.imul(f,be)|0;d=d+Math.imul(g,ve)|0;p=p+Math.imul(g,be)|0;var Ie=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Ie>>>26)|0;Ie&=67108863;o=Math.imul(j,X);d=Math.imul(j,Q);d=d+Math.imul(H,X)|0;p=Math.imul(H,Q);o=o+Math.imul(F,te)|0;d=d+Math.imul(F,re)|0;d=d+Math.imul(V,te)|0;p=p+Math.imul(V,re)|0;o=o+Math.imul(D,ne)|0;d=d+Math.imul(D,ie)|0;d=d+Math.imul(L,ne)|0;p=p+Math.imul(L,ie)|0;o=o+Math.imul(x,oe)|0;d=d+Math.imul(x,de)|0;d=d+Math.imul(B,oe)|0;p=p+Math.imul(B,de)|0;o=o+Math.imul(C,ce)|0;d=d+Math.imul(C,le)|0;d=d+Math.imul(k,ce)|0;p=p+Math.imul(k,le)|0;o=o+Math.imul(T,me)|0;d=d+Math.imul(T,he)|0;d=d+Math.imul(O,me)|0;p=p+Math.imul(O,he)|0;o=o+Math.imul(w,ge)|0;d=d+Math.imul(w,ye)|0;d=d+Math.imul(E,ge)|0;p=p+Math.imul(E,ye)|0;o=o+Math.imul(_,ve)|0;d=d+Math.imul(_,be)|0;d=d+Math.imul(v,ve)|0;p=p+Math.imul(v,be)|0;var xe=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(xe>>>26)|0;xe&=67108863;o=Math.imul(j,te);d=Math.imul(j,re);d=d+Math.imul(H,te)|0;p=Math.imul(H,re);o=o+Math.imul(F,ne)|0;d=d+Math.imul(F,ie)|0;d=d+Math.imul(V,ne)|0;p=p+Math.imul(V,ie)|0;o=o+Math.imul(D,oe)|0;d=d+Math.imul(D,de)|0;d=d+Math.imul(L,oe)|0;p=p+Math.imul(L,de)|0;o=o+Math.imul(x,ce)|0;d=d+Math.imul(x,le)|0;d=d+Math.imul(B,ce)|0;p=p+Math.imul(B,le)|0;o=o+Math.imul(C,me)|0;d=d+Math.imul(C,he)|0;d=d+Math.imul(k,me)|0;p=p+Math.imul(k,he)|0;o=o+Math.imul(T,ge)|0;d=d+Math.imul(T,ye)|0;d=d+Math.imul(O,ge)|0;p=p+Math.imul(O,ye)|0;o=o+Math.imul(w,ve)|0;d=d+Math.imul(w,be)|0;d=d+Math.imul(E,ve)|0;p=p+Math.imul(E,be)|0;var Be=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Be>>>26)|0;Be&=67108863;o=Math.imul(j,ne);d=Math.imul(j,ie);d=d+Math.imul(H,ne)|0;p=Math.imul(H,ie);o=o+Math.imul(F,oe)|0;d=d+Math.imul(F,de)|0;d=d+Math.imul(V,oe)|0;p=p+Math.imul(V,de)|0;o=o+Math.imul(D,ce)|0;d=d+Math.imul(D,le)|0;d=d+Math.imul(L,ce)|0;p=p+Math.imul(L,le)|0;o=o+Math.imul(x,me)|0;d=d+Math.imul(x,he)|0;d=d+Math.imul(B,me)|0;p=p+Math.imul(B,he)|0;o=o+Math.imul(C,ge)|0;d=d+Math.imul(C,ye)|0;d=d+Math.imul(k,ge)|0;p=p+Math.imul(k,ye)|0;o=o+Math.imul(T,ve)|0;d=d+Math.imul(T,be)|0;d=d+Math.imul(O,ve)|0;p=p+Math.imul(O,be)|0;var Pe=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Pe>>>26)|0;Pe&=67108863;o=Math.imul(j,oe);d=Math.imul(j,de);d=d+Math.imul(H,oe)|0;p=Math.imul(H,de);o=o+Math.imul(F,ce)|0;d=d+Math.imul(F,le)|0;d=d+Math.imul(V,ce)|0;p=p+Math.imul(V,le)|0;o=o+Math.imul(D,me)|0;d=d+Math.imul(D,he)|0;d=d+Math.imul(L,me)|0;p=p+Math.imul(L,he)|0;o=o+Math.imul(x,ge)|0;d=d+Math.imul(x,ye)|0;d=d+Math.imul(B,ge)|0;p=p+Math.imul(B,ye)|0;o=o+Math.imul(C,ve)|0;d=d+Math.imul(C,be)|0;d=d+Math.imul(k,ve)|0;p=p+Math.imul(k,be)|0;var De=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(De>>>26)|0;De&=67108863;o=Math.imul(j,ce);d=Math.imul(j,le);d=d+Math.imul(H,ce)|0;p=Math.imul(H,le);o=o+Math.imul(F,me)|0;d=d+Math.imul(F,he)|0;d=d+Math.imul(V,me)|0;p=p+Math.imul(V,he)|0;o=o+Math.imul(D,ge)|0;d=d+Math.imul(D,ye)|0;d=d+Math.imul(L,ge)|0;p=p+Math.imul(L,ye)|0;o=o+Math.imul(x,ve)|0;d=d+Math.imul(x,be)|0;d=d+Math.imul(B,ve)|0;p=p+Math.imul(B,be)|0;var Le=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Le>>>26)|0;Le&=67108863;o=Math.imul(j,me);d=Math.imul(j,he);d=d+Math.imul(H,me)|0;p=Math.imul(H,he);o=o+Math.imul(F,ge)|0;d=d+Math.imul(F,ye)|0;d=d+Math.imul(V,ge)|0;p=p+Math.imul(V,ye)|0;o=o+Math.imul(D,ve)|0;d=d+Math.imul(D,be)|0;d=d+Math.imul(L,ve)|0;p=p+Math.imul(L,be)|0;var Me=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Me>>>26)|0;Me&=67108863;o=Math.imul(j,ge);d=Math.imul(j,ye);d=d+Math.imul(H,ge)|0;p=Math.imul(H,ye);o=o+Math.imul(F,ve)|0;d=d+Math.imul(F,be)|0;d=d+Math.imul(V,ve)|0;p=p+Math.imul(V,be)|0;var Ue=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Ue>>>26)|0;Ue&=67108863;o=Math.imul(j,ve);d=Math.imul(j,be);d=d+Math.imul(H,ve)|0;p=Math.imul(H,be);var Fe=(s+o|0)+((d&8191)<<13)|0;s=(p+(d>>>13)|0)+(Fe>>>26)|0;Fe&=67108863;i[0]=we;i[1]=Se;i[2]=Ee;i[3]=Ae;i[4]=Re;i[5]=Te;i[6]=Oe;i[7]=Ne;i[8]=Ce;i[9]=ke;i[10]=Ie;i[11]=xe;i[12]=Be;i[13]=Pe;i[14]=De;i[15]=Le;i[16]=Me;i[17]=Ue;i[18]=Fe;if(s!==0){i[19]=s;r.length++}return r};if(!Math.imul){d=smallMulTo}function bigMulTo(e,t,r){r.negative=t.negative^e.negative;r.length=e.length+t.length;var a=0;var n=0;for(var i=0;i<r.length-1;i++){var s=n;n=0;var o=a&67108863;var d=Math.min(i,t.length-1);for(var p=Math.max(0,i-e.length+1);p<=d;p++){var c=i-p;var l=e.words[c]|0;var u=t.words[p]|0;var m=l*u;var f=m&67108863;s=s+(m/67108864|0)|0;f=f+o|0;o=f&67108863;s=s+(f>>>26)|0;n+=s>>>26;s&=67108863}r.words[i]=o;a=s;s=n}if(a!==0){r.words[i]=a}else{r.length--}return r._strip()}function jumboMulTo(e,t,r){return bigMulTo(e,t,r)}BN.prototype.mulTo=function mulTo(e,t){var r;var a=this.length+e.length;if(this.length===10&&e.length===10){r=d(this,e,t)}else if(a<63){r=smallMulTo(this,e,t)}else if(a<1024){r=bigMulTo(this,e,t)}else{r=jumboMulTo(this,e,t)}return r};function FFTM(e,t){this.x=e;this.y=t}FFTM.prototype.makeRBT=function makeRBT(e){var t=new Array(e);var r=BN.prototype._countBits(e)-1;for(var a=0;a<e;a++){t[a]=this.revBin(a,r,e)}return t};FFTM.prototype.revBin=function revBin(e,t,r){if(e===0||e===r-1)return e;var a=0;for(var n=0;n<t;n++){a|=(e&1)<<t-n-1;e>>=1}return a};FFTM.prototype.permute=function permute(e,t,r,a,n,i){for(var s=0;s<i;s++){a[s]=t[e[s]];n[s]=r[e[s]]}};FFTM.prototype.transform=function transform(e,t,r,a,n,i){this.permute(i,e,t,r,a,n);for(var s=1;s<n;s<<=1){var o=s<<1;var d=Math.cos(2*Math.PI/o);var p=Math.sin(2*Math.PI/o);for(var c=0;c<n;c+=o){var l=d;var u=p;for(var m=0;m<s;m++){var f=r[c+m];var g=a[c+m];var y=r[c+m+s];var _=a[c+m+s];var v=l*y-u*_;_=l*_+u*y;y=v;r[c+m]=f+y;a[c+m]=g+_;r[c+m+s]=f-y;a[c+m+s]=g-_;if(m!==o){v=d*l-p*u;u=d*u+p*l;l=v}}}}};FFTM.prototype.guessLen13b=function guessLen13b(e,t){var r=Math.max(t,e)|1;var a=r&1;var n=0;for(r=r/2|0;r;r=r>>>1){n++}return 1<<n+1+a};FFTM.prototype.conjugate=function conjugate(e,t,r){if(r<=1)return;for(var a=0;a<r/2;a++){var n=e[a];e[a]=e[r-a-1];e[r-a-1]=n;n=t[a];t[a]=-t[r-a-1];t[r-a-1]=-n}};FFTM.prototype.normalize13b=function normalize13b(e,t){var r=0;for(var a=0;a<t/2;a++){var n=Math.round(e[2*a+1]/t)*8192+Math.round(e[2*a]/t)+r;e[a]=n&67108863;if(n<67108864){r=0}else{r=n/67108864|0}}return e};FFTM.prototype.convert13b=function convert13b(e,t,r,a){var n=0;for(var i=0;i<t;i++){n=n+(e[i]|0);r[2*i]=n&8191;n=n>>>13;r[2*i+1]=n&8191;n=n>>>13}for(i=2*t;i<a;++i){r[i]=0}assert(n===0);assert((n&~8191)===0)};FFTM.prototype.stub=function stub(e){var t=new Array(e);for(var r=0;r<e;r++){t[r]=0}return t};FFTM.prototype.mulp=function mulp(e,t,r){var a=2*this.guessLen13b(e.length,t.length);var n=this.makeRBT(a);var i=this.stub(a);var s=new Array(a);var o=new Array(a);var d=new Array(a);var p=new Array(a);var c=new Array(a);var l=new Array(a);var u=r.words;u.length=a;this.convert13b(e.words,e.length,s,a);this.convert13b(t.words,t.length,p,a);this.transform(s,i,o,d,a,n);this.transform(p,i,c,l,a,n);for(var m=0;m<a;m++){var f=o[m]*c[m]-d[m]*l[m];d[m]=o[m]*l[m]+d[m]*c[m];o[m]=f}this.conjugate(o,d,a);this.transform(o,d,u,i,a,n);this.conjugate(u,i,a);this.normalize13b(u,a);r.negative=e.negative^t.negative;r.length=e.length+t.length;return r._strip()};BN.prototype.mul=function mul(e){var t=new BN(null);t.words=new Array(this.length+e.length);return this.mulTo(e,t)};BN.prototype.mulf=function mulf(e){var t=new BN(null);t.words=new Array(this.length+e.length);return jumboMulTo(this,e,t)};BN.prototype.imul=function imul(e){return this.clone().mulTo(e,this)};BN.prototype.imuln=function imuln(e){var t=e<0;if(t)e=-e;assert(typeof e==="number");assert(e<67108864);var r=0;for(var a=0;a<this.length;a++){var n=(this.words[a]|0)*e;var i=(n&67108863)+(r&67108863);r>>=26;r+=n/67108864|0;r+=i>>>26;this.words[a]=i&67108863}if(r!==0){this.words[a]=r;this.length++}this.length=e===0?1:this.length;return t?this.ineg():this};BN.prototype.muln=function muln(e){return this.clone().imuln(e)};BN.prototype.sqr=function sqr(){return this.mul(this)};BN.prototype.isqr=function isqr(){return this.imul(this.clone())};BN.prototype.pow=function pow(e){var t=toBitArray(e);if(t.length===0)return new BN(1);var r=this;for(var a=0;a<t.length;a++,r=r.sqr()){if(t[a]!==0)break}if(++a<t.length){for(var n=r.sqr();a<t.length;a++,n=n.sqr()){if(t[a]===0)continue;r=r.mul(n)}}return r};BN.prototype.iushln=function iushln(e){assert(typeof e==="number"&&e>=0);var t=e%26;var r=(e-t)/26;var a=67108863>>>26-t<<26-t;var n;if(t!==0){var i=0;for(n=0;n<this.length;n++){var s=this.words[n]&a;var o=(this.words[n]|0)-s<<t;this.words[n]=o|i;i=s>>>26-t}if(i){this.words[n]=i;this.length++}}if(r!==0){for(n=this.length-1;n>=0;n--){this.words[n+r]=this.words[n]}for(n=0;n<r;n++){this.words[n]=0}this.length+=r}return this._strip()};BN.prototype.ishln=function ishln(e){assert(this.negative===0);return this.iushln(e)};BN.prototype.iushrn=function iushrn(e,t,r){assert(typeof e==="number"&&e>=0);var a;if(t){a=(t-t%26)/26}else{a=0}var n=e%26;var i=Math.min((e-n)/26,this.length);var s=67108863^67108863>>>n<<n;var o=r;a-=i;a=Math.max(0,a);if(o){for(var d=0;d<i;d++){o.words[d]=this.words[d]}o.length=i}if(i===0){}else if(this.length>i){this.length-=i;for(d=0;d<this.length;d++){this.words[d]=this.words[d+i]}}else{this.words[0]=0;this.length=1}var p=0;for(d=this.length-1;d>=0&&(p!==0||d>=a);d--){var c=this.words[d]|0;this.words[d]=p<<26-n|c>>>n;p=c&s}if(o&&p!==0){o.words[o.length++]=p}if(this.length===0){this.words[0]=0;this.length=1}return this._strip()};BN.prototype.ishrn=function ishrn(e,t,r){assert(this.negative===0);return this.iushrn(e,t,r)};BN.prototype.shln=function shln(e){return this.clone().ishln(e)};BN.prototype.ushln=function ushln(e){return this.clone().iushln(e)};BN.prototype.shrn=function shrn(e){return this.clone().ishrn(e)};BN.prototype.ushrn=function ushrn(e){return this.clone().iushrn(e)};BN.prototype.testn=function testn(e){assert(typeof e==="number"&&e>=0);var t=e%26;var r=(e-t)/26;var a=1<<t;if(this.length<=r)return false;var n=this.words[r];return!!(n&a)};BN.prototype.imaskn=function imaskn(e){assert(typeof e==="number"&&e>=0);var t=e%26;var r=(e-t)/26;assert(this.negative===0,"imaskn works only with positive numbers");if(this.length<=r){return this}if(t!==0){r++}this.length=Math.min(r,this.length);if(t!==0){var a=67108863^67108863>>>t<<t;this.words[this.length-1]&=a}return this._strip()};BN.prototype.maskn=function maskn(e){return this.clone().imaskn(e)};BN.prototype.iaddn=function iaddn(e){assert(typeof e==="number");assert(e<67108864);if(e<0)return this.isubn(-e);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<=e){this.words[0]=e-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(e);this.negative=1;return this}return this._iaddn(e)};BN.prototype._iaddn=function _iaddn(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++){this.words[t]-=67108864;if(t===this.length-1){this.words[t+1]=1}else{this.words[t+1]++}}this.length=Math.max(this.length,t+1);return this};BN.prototype.isubn=function isubn(e){assert(typeof e==="number");assert(e<67108864);if(e<0)return this.iaddn(-e);if(this.negative!==0){this.negative=0;this.iaddn(e);this.negative=1;return this}this.words[0]-=e;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var t=0;t<this.length&&this.words[t]<0;t++){this.words[t]+=67108864;this.words[t+1]-=1}}return this._strip()};BN.prototype.addn=function addn(e){return this.clone().iaddn(e)};BN.prototype.subn=function subn(e){return this.clone().isubn(e)};BN.prototype.iabs=function iabs(){this.negative=0;return this};BN.prototype.abs=function abs(){return this.clone().iabs()};BN.prototype._ishlnsubmul=function _ishlnsubmul(e,t,r){var a=e.length+r;var n;this._expand(a);var i;var s=0;for(n=0;n<e.length;n++){i=(this.words[n+r]|0)+s;var o=(e.words[n]|0)*t;i-=o&67108863;s=(i>>26)-(o/67108864|0);this.words[n+r]=i&67108863}for(;n<this.length-r;n++){i=(this.words[n+r]|0)+s;s=i>>26;this.words[n+r]=i&67108863}if(s===0)return this._strip();assert(s===-1);s=0;for(n=0;n<this.length;n++){i=-(this.words[n]|0)+s;s=i>>26;this.words[n]=i&67108863}this.negative=1;return this._strip()};BN.prototype._wordDiv=function _wordDiv(e,t){var r=this.length-e.length;var a=this.clone();var n=e;var i=n.words[n.length-1]|0;var s=this._countBits(i);r=26-s;if(r!==0){n=n.ushln(r);a.iushln(r);i=n.words[n.length-1]|0}var o=a.length-n.length;var d;if(t!=="mod"){d=new BN(null);d.length=o+1;d.words=new Array(d.length);for(var p=0;p<d.length;p++){d.words[p]=0}}var c=a.clone()._ishlnsubmul(n,1,o);if(c.negative===0){a=c;if(d){d.words[o]=1}}for(var l=o-1;l>=0;l--){var u=(a.words[n.length+l]|0)*67108864+(a.words[n.length+l-1]|0);u=Math.min(u/i|0,67108863);a._ishlnsubmul(n,u,l);while(a.negative!==0){u--;a.negative=0;a._ishlnsubmul(n,1,l);if(!a.isZero()){a.negative^=1}}if(d){d.words[l]=u}}if(d){d._strip()}a._strip();if(t!=="div"&&r!==0){a.iushrn(r)}return{div:d||null,mod:a}};BN.prototype.divmod=function divmod(e,t,r){assert(!e.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)}}var a,n,i;if(this.negative!==0&&e.negative===0){i=this.neg().divmod(e,t);if(t!=="mod"){a=i.div.neg()}if(t!=="div"){n=i.mod.neg();if(r&&n.negative!==0){n.iadd(e)}}return{div:a,mod:n}}if(this.negative===0&&e.negative!==0){i=this.divmod(e.neg(),t);if(t!=="mod"){a=i.div.neg()}return{div:a,mod:i.mod}}if((this.negative&e.negative)!==0){i=this.neg().divmod(e.neg(),t);if(t!=="div"){n=i.mod.neg();if(r&&n.negative!==0){n.isub(e)}}return{div:i.div,mod:n}}if(e.length>this.length||this.cmp(e)<0){return{div:new BN(0),mod:this}}if(e.length===1){if(t==="div"){return{div:this.divn(e.words[0]),mod:null}}if(t==="mod"){return{div:null,mod:new BN(this.modrn(e.words[0]))}}return{div:this.divn(e.words[0]),mod:new BN(this.modrn(e.words[0]))}}return this._wordDiv(e,t)};BN.prototype.div=function div(e){return this.divmod(e,"div",false).div};BN.prototype.mod=function mod(e){return this.divmod(e,"mod",false).mod};BN.prototype.umod=function umod(e){return this.divmod(e,"mod",true).mod};BN.prototype.divRound=function divRound(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=t.div.negative!==0?t.mod.isub(e):t.mod;var a=e.ushrn(1);var n=e.andln(1);var i=r.cmp(a);if(i<0||n===1&&i===0)return t.div;return t.div.negative!==0?t.div.isubn(1):t.div.iaddn(1)};BN.prototype.modrn=function modrn(e){var t=e<0;if(t)e=-e;assert(e<=67108863);var r=(1<<26)%e;var a=0;for(var n=this.length-1;n>=0;n--){a=(r*a+(this.words[n]|0))%e}return t?-a:a};BN.prototype.modn=function modn(e){return this.modrn(e)};BN.prototype.idivn=function idivn(e){var t=e<0;if(t)e=-e;assert(e<=67108863);var r=0;for(var a=this.length-1;a>=0;a--){var n=(this.words[a]|0)+r*67108864;this.words[a]=n/e|0;r=n%e}this._strip();return t?this.ineg():this};BN.prototype.divn=function divn(e){return this.clone().idivn(e)};BN.prototype.egcd=function egcd(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var a=new BN(1);var n=new BN(0);var i=new BN(0);var s=new BN(1);var o=0;while(t.isEven()&&r.isEven()){t.iushrn(1);r.iushrn(1);++o}var d=r.clone();var p=t.clone();while(!t.isZero()){for(var c=0,l=1;(t.words[0]&l)===0&&c<26;++c,l<<=1);if(c>0){t.iushrn(c);while(c-- >0){if(a.isOdd()||n.isOdd()){a.iadd(d);n.isub(p)}a.iushrn(1);n.iushrn(1)}}for(var u=0,m=1;(r.words[0]&m)===0&&u<26;++u,m<<=1);if(u>0){r.iushrn(u);while(u-- >0){if(i.isOdd()||s.isOdd()){i.iadd(d);s.isub(p)}i.iushrn(1);s.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);a.isub(i);n.isub(s)}else{r.isub(t);i.isub(a);s.isub(n)}}return{a:i,b:s,gcd:r.iushln(o)}};BN.prototype._invmp=function _invmp(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var a=new BN(1);var n=new BN(0);var i=r.clone();while(t.cmpn(1)>0&&r.cmpn(1)>0){for(var s=0,o=1;(t.words[0]&o)===0&&s<26;++s,o<<=1);if(s>0){t.iushrn(s);while(s-- >0){if(a.isOdd()){a.iadd(i)}a.iushrn(1)}}for(var d=0,p=1;(r.words[0]&p)===0&&d<26;++d,p<<=1);if(d>0){r.iushrn(d);while(d-- >0){if(n.isOdd()){n.iadd(i)}n.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);a.isub(n)}else{r.isub(t);n.isub(a)}}var c;if(t.cmpn(1)===0){c=a}else{c=n}if(c.cmpn(0)<0){c.iadd(e)}return c};BN.prototype.gcd=function gcd(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone();var r=e.clone();t.negative=0;r.negative=0;for(var a=0;t.isEven()&&r.isEven();a++){t.iushrn(1);r.iushrn(1)}do{while(t.isEven()){t.iushrn(1)}while(r.isEven()){r.iushrn(1)}var n=t.cmp(r);if(n<0){var i=t;t=r;r=i}else if(n===0||r.cmpn(1)===0){break}t.isub(r)}while(true);return r.iushln(a)};BN.prototype.invm=function invm(e){return this.egcd(e).a.umod(e)};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN.prototype.andln=function andln(e){return this.words[0]&e};BN.prototype.bincn=function bincn(e){assert(typeof e==="number");var t=e%26;var r=(e-t)/26;var a=1<<t;if(this.length<=r){this._expand(r+1);this.words[r]|=a;return this}var n=a;for(var i=r;n!==0&&i<this.length;i++){var s=this.words[i]|0;s+=n;n=s>>>26;s&=67108863;this.words[i]=s}if(n!==0){this.words[i]=n;this.length++}return this};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN.prototype.cmpn=function cmpn(e){var t=e<0;if(this.negative!==0&&!t)return-1;if(this.negative===0&&t)return 1;this._strip();var r;if(this.length>1){r=1}else{if(t){e=-e}assert(e<=67108863,"Number is too big");var a=this.words[0]|0;r=a===e?0:a<e?-1:1}if(this.negative!==0)return-r|0;return r};BN.prototype.cmp=function cmp(e){if(this.negative!==0&&e.negative===0)return-1;if(this.negative===0&&e.negative!==0)return 1;var t=this.ucmp(e);if(this.negative!==0)return-t|0;return t};BN.prototype.ucmp=function ucmp(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;var t=0;for(var r=this.length-1;r>=0;r--){var a=this.words[r]|0;var n=e.words[r]|0;if(a===n)continue;if(a<n){t=-1}else if(a>n){t=1}break}return t};BN.prototype.gtn=function gtn(e){return this.cmpn(e)===1};BN.prototype.gt=function gt(e){return this.cmp(e)===1};BN.prototype.gten=function gten(e){return this.cmpn(e)>=0};BN.prototype.gte=function gte(e){return this.cmp(e)>=0};BN.prototype.ltn=function ltn(e){return this.cmpn(e)===-1};BN.prototype.lt=function lt(e){return this.cmp(e)===-1};BN.prototype.lten=function lten(e){return this.cmpn(e)<=0};BN.prototype.lte=function lte(e){return this.cmp(e)<=0};BN.prototype.eqn=function eqn(e){return this.cmpn(e)===0};BN.prototype.eq=function eq(e){return this.cmp(e)===0};BN.red=function red(e){return new Red(e)};BN.prototype.toRed=function toRed(e){assert(!this.red,"Already a number in reduction context");assert(this.negative===0,"red works only with positives");return e.convertTo(this)._forceRed(e)};BN.prototype.fromRed=function fromRed(){assert(this.red,"fromRed works only with numbers in reduction context");return this.red.convertFrom(this)};BN.prototype._forceRed=function _forceRed(e){this.red=e;return this};BN.prototype.forceRed=function forceRed(e){assert(!this.red,"Already a number in reduction context");return this._forceRed(e)};BN.prototype.redAdd=function redAdd(e){assert(this.red,"redAdd works only with red numbers");return this.red.add(this,e)};BN.prototype.redIAdd=function redIAdd(e){assert(this.red,"redIAdd works only with red numbers");return this.red.iadd(this,e)};BN.prototype.redSub=function redSub(e){assert(this.red,"redSub works only with red numbers");return this.red.sub(this,e)};BN.prototype.redISub=function redISub(e){assert(this.red,"redISub works only with red numbers");return this.red.isub(this,e)};BN.prototype.redShl=function redShl(e){assert(this.red,"redShl works only with red numbers");return this.red.shl(this,e)};BN.prototype.redMul=function redMul(e){assert(this.red,"redMul works only with red numbers");this.red._verify2(this,e);return this.red.mul(this,e)};BN.prototype.redIMul=function redIMul(e){assert(this.red,"redMul works only with red numbers");this.red._verify2(this,e);return this.red.imul(this,e)};BN.prototype.redSqr=function redSqr(){assert(this.red,"redSqr works only with red numbers");this.red._verify1(this);return this.red.sqr(this)};BN.prototype.redISqr=function redISqr(){assert(this.red,"redISqr works only with red numbers");this.red._verify1(this);return this.red.isqr(this)};BN.prototype.redSqrt=function redSqrt(){assert(this.red,"redSqrt works only with red numbers");this.red._verify1(this);return this.red.sqrt(this)};BN.prototype.redInvm=function redInvm(){assert(this.red,"redInvm works only with red numbers");this.red._verify1(this);return this.red.invm(this)};BN.prototype.redNeg=function redNeg(){assert(this.red,"redNeg works only with red numbers");this.red._verify1(this);return this.red.neg(this)};BN.prototype.redPow=function redPow(e){assert(this.red&&!e.red,"redPow(normalNum)");this.red._verify1(this);return this.red.pow(this,e)};var p={k256:null,p224:null,p192:null,p25519:null};function MPrime(e,t){this.name=e;this.p=new BN(t,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var e=new BN(null);e.words=new Array(Math.ceil(this.n/13));return e};MPrime.prototype.ireduce=function ireduce(e){var t=e;var r;do{this.split(t,this.tmp);t=this.imulK(t);t=t.iadd(this.tmp);r=t.bitLength()}while(r>this.n);var a=r<this.n?-1:t.ucmp(this.p);if(a===0){t.words[0]=0;t.length=1}else if(a>0){t.isub(this.p)}else{if(t.strip!==undefined){t.strip()}else{t._strip()}}return t};MPrime.prototype.split=function split(e,t){e.iushrn(this.n,0,t)};MPrime.prototype.imulK=function imulK(e){return e.imul(this.k)};function K256(){MPrime.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}inherits(K256,MPrime);K256.prototype.split=function split(e,t){var r=4194303;var a=Math.min(e.length,9);for(var n=0;n<a;n++){t.words[n]=e.words[n]}t.length=a;if(e.length<=9){e.words[0]=0;e.length=1;return}var i=e.words[9];t.words[t.length++]=i&r;for(n=10;n<e.length;n++){var s=e.words[n]|0;e.words[n-10]=(s&r)<<4|i>>>22;i=s}i>>>=22;e.words[n-10]=i;if(i===0&&e.length>10){e.length-=10}else{e.length-=9}};K256.prototype.imulK=function imulK(e){e.words[e.length]=0;e.words[e.length+1]=0;e.length+=2;var t=0;for(var r=0;r<e.length;r++){var a=e.words[r]|0;t+=a*977;e.words[r]=t&67108863;t=a*64+(t/67108864|0)}if(e.words[e.length-1]===0){e.length--;if(e.words[e.length-1]===0){e.length--}}return e};function P224(){MPrime.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}inherits(P224,MPrime);function P192(){MPrime.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}inherits(P192,MPrime);function P25519(){MPrime.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(e){var t=0;for(var r=0;r<e.length;r++){var a=(e.words[r]|0)*19+t;var n=a&67108863;a>>>=26;e.words[r]=n;t=a}if(t!==0){e.words[e.length++]=t}return e};BN._prime=function prime(e){if(p[e])return p[e];var prime;if(e==="k256"){prime=new K256}else if(e==="p224"){prime=new P224}else if(e==="p192"){prime=new P192}else if(e==="p25519"){prime=new P25519}else{throw new Error("Unknown prime "+e)}p[e]=prime;return prime};function Red(e){if(typeof e==="string"){var t=BN._prime(e);this.m=t.p;this.prime=t}else{assert(e.gtn(1),"modulus must be greater than 1");this.m=e;this.prime=null}}Red.prototype._verify1=function _verify1(e){assert(e.negative===0,"red works only with positives");assert(e.red,"red works only with red numbers")};Red.prototype._verify2=function _verify2(e,t){assert((e.negative|t.negative)===0,"red works only with positives");assert(e.red&&e.red===t.red,"red works only with red numbers")};Red.prototype.imod=function imod(e){if(this.prime)return this.prime.ireduce(e)._forceRed(this);move(e,e.umod(this.m)._forceRed(this));return e};Red.prototype.neg=function neg(e){if(e.isZero()){return e.clone()}return this.m.sub(e)._forceRed(this)};Red.prototype.add=function add(e,t){this._verify2(e,t);var r=e.add(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r._forceRed(this)};Red.prototype.iadd=function iadd(e,t){this._verify2(e,t);var r=e.iadd(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r};Red.prototype.sub=function sub(e,t){this._verify2(e,t);var r=e.sub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r._forceRed(this)};Red.prototype.isub=function isub(e,t){this._verify2(e,t);var r=e.isub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r};Red.prototype.shl=function shl(e,t){this._verify1(e);return this.imod(e.ushln(t))};Red.prototype.imul=function imul(e,t){this._verify2(e,t);return this.imod(e.imul(t))};Red.prototype.mul=function mul(e,t){this._verify2(e,t);return this.imod(e.mul(t))};Red.prototype.isqr=function isqr(e){return this.imul(e,e.clone())};Red.prototype.sqr=function sqr(e){return this.mul(e,e)};Red.prototype.sqrt=function sqrt(e){if(e.isZero())return e.clone();var t=this.m.andln(3);assert(t%2===1);if(t===3){var r=this.m.add(new BN(1)).iushrn(2);return this.pow(e,r)}var a=this.m.subn(1);var n=0;while(!a.isZero()&&a.andln(1)===0){n++;a.iushrn(1)}assert(!a.isZero());var i=new BN(1).toRed(this);var s=i.redNeg();var o=this.m.subn(1).iushrn(1);var d=this.m.bitLength();d=new BN(2*d*d).toRed(this);while(this.pow(d,o).cmp(s)!==0){d.redIAdd(s)}var p=this.pow(d,a);var c=this.pow(e,a.addn(1).iushrn(1));var l=this.pow(e,a);var u=n;while(l.cmp(i)!==0){var m=l;for(var f=0;m.cmp(i)!==0;f++){m=m.redSqr()}assert(f<u);var g=this.pow(p,new BN(1).iushln(u-f-1));c=c.redMul(g);p=g.redSqr();l=l.redMul(p);u=f}return c};Red.prototype.invm=function invm(e){var t=e._invmp(this.m);if(t.negative!==0){t.negative=0;return this.imod(t).redNeg()}else{return this.imod(t)}};Red.prototype.pow=function pow(e,t){if(t.isZero())return new BN(1).toRed(this);if(t.cmpn(1)===0)return e.clone();var r=4;var a=new Array(1<<r);a[0]=new BN(1).toRed(this);a[1]=e;for(var n=2;n<a.length;n++){a[n]=this.mul(a[n-1],e)}var i=a[0];var s=0;var o=0;var d=t.bitLength()%26;if(d===0){d=26}for(n=t.length-1;n>=0;n--){var p=t.words[n];for(var c=d-1;c>=0;c--){var l=p>>c&1;if(i!==a[0]){i=this.sqr(i)}if(l===0&&s===0){o=0;continue}s<<=1;s|=l;o++;if(o!==r&&(n!==0||c!==0))continue;i=this.mul(i,a[s]);o=0;s=0}d=26}return i};Red.prototype.convertTo=function convertTo(e){var t=e.umod(this.m);return t===e?t.clone():t};Red.prototype.convertFrom=function convertFrom(e){var t=e.clone();t.red=null;return t};BN.mont=function mont(e){return new Mont(e)};function Mont(e){Red.call(this,e);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(e){return this.imod(e.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(e){var t=this.imod(e.mul(this.rinv));t.red=null;return t};Mont.prototype.imul=function imul(e,t){if(e.isZero()||t.isZero()){e.words[0]=0;e.length=1;return e}var r=e.imul(t);var a=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(a).iushrn(this.shift);var i=n;if(n.cmp(this.m)>=0){i=n.isub(this.m)}else if(n.cmpn(0)<0){i=n.iadd(this.m)}return i._forceRed(this)};Mont.prototype.mul=function mul(e,t){if(e.isZero()||t.isZero())return new BN(0)._forceRed(this);var r=e.mul(t);var a=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(a).iushrn(this.shift);var i=n;if(n.cmp(this.m)>=0){i=n.isub(this.m)}else if(n.cmpn(0)<0){i=n.iadd(this.m)}return i._forceRed(this)};Mont.prototype.invm=function invm(e){var t=this.imod(e._invmp(this.m).mul(this.r2));return t._forceRed(this)}})(false||e,this)},2209:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;Object.defineProperty(e,a,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__decorate||function(e,t,r,a){var n=arguments.length,i=n<3?t:a===null?a=Object.getOwnPropertyDescriptor(t,r):a,s;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")i=Reflect.decorate(e,t,r,a);else for(var o=e.length-1;o>=0;o--)if(s=e[o])i=(n<3?s(i):n>3?s(t,r,i):s(t,r))||i;return n>3&&i&&Object.defineProperty(t,r,i),i};var s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.deserializeUnchecked=t.deserialize=t.serialize=t.BinaryReader=t.BinaryWriter=t.BorshError=t.baseDecode=t.baseEncode=void 0;const d=o(r(4801));const p=o(r(7565));const c=s(r(1397));const l=typeof TextDecoder!=="function"?c.TextDecoder:TextDecoder;const u=new l("utf-8",{fatal:true});function baseEncode(e){if(typeof e==="string"){e=Buffer.from(e,"utf8")}return p.default.encode(Buffer.from(e))}t.baseEncode=baseEncode;function baseDecode(e){return Buffer.from(p.default.decode(e))}t.baseDecode=baseDecode;const m=1024;class BorshError extends Error{constructor(e){super(e);this.fieldPath=[];this.originalMessage=e}addToFieldPath(e){this.fieldPath.splice(0,0,e);this.message=this.originalMessage+": "+this.fieldPath.join(".")}}t.BorshError=BorshError;class BinaryWriter{constructor(){this.buf=Buffer.alloc(m);this.length=0}maybeResize(){if(this.buf.length<16+this.length){this.buf=Buffer.concat([this.buf,Buffer.alloc(m)])}}writeU8(e){this.maybeResize();this.buf.writeUInt8(e,this.length);this.length+=1}writeU16(e){this.maybeResize();this.buf.writeUInt16LE(e,this.length);this.length+=2}writeU32(e){this.maybeResize();this.buf.writeUInt32LE(e,this.length);this.length+=4}writeU64(e){this.maybeResize();this.writeBuffer(Buffer.from(new d.default(e).toArray("le",8)))}writeU128(e){this.maybeResize();this.writeBuffer(Buffer.from(new d.default(e).toArray("le",16)))}writeU256(e){this.maybeResize();this.writeBuffer(Buffer.from(new d.default(e).toArray("le",32)))}writeU512(e){this.maybeResize();this.writeBuffer(Buffer.from(new d.default(e).toArray("le",64)))}writeBuffer(e){this.buf=Buffer.concat([Buffer.from(this.buf.subarray(0,this.length)),e,Buffer.alloc(m)]);this.length+=e.length}writeString(e){this.maybeResize();const t=Buffer.from(e,"utf8");this.writeU32(t.length);this.writeBuffer(t)}writeFixedArray(e){this.writeBuffer(Buffer.from(e))}writeArray(e,t){this.maybeResize();this.writeU32(e.length);for(const r of e){this.maybeResize();t(r)}}toArray(){return this.buf.subarray(0,this.length)}}t.BinaryWriter=BinaryWriter;function handlingRangeError(e,t,r){const a=r.value;r.value=function(...e){try{return a.apply(this,e)}catch(e){if(e instanceof RangeError){const t=e.code;if(["ERR_BUFFER_OUT_OF_BOUNDS","ERR_OUT_OF_RANGE"].indexOf(t)>=0){throw new BorshError("Reached the end of buffer when deserializing")}}throw e}}}class BinaryReader{constructor(e){this.buf=e;this.offset=0}readU8(){const e=this.buf.readUInt8(this.offset);this.offset+=1;return e}readU16(){const e=this.buf.readUInt16LE(this.offset);this.offset+=2;return e}readU32(){const e=this.buf.readUInt32LE(this.offset);this.offset+=4;return e}readU64(){const e=this.readBuffer(8);return new d.default(e,"le")}readU128(){const e=this.readBuffer(16);return new d.default(e,"le")}readU256(){const e=this.readBuffer(32);return new d.default(e,"le")}readU512(){const e=this.readBuffer(64);return new d.default(e,"le")}readBuffer(e){if(this.offset+e>this.buf.length){throw new BorshError(`Expected buffer length ${e} isn't within bounds`)}const t=this.buf.slice(this.offset,this.offset+e);this.offset+=e;return t}readString(){const e=this.readU32();const t=this.readBuffer(e);try{return u.decode(t)}catch(e){throw new BorshError(`Error decoding UTF-8 string: ${e}`)}}readFixedArray(e){return new Uint8Array(this.readBuffer(e))}readArray(e){const t=this.readU32();const r=Array();for(let a=0;a<t;++a){r.push(e())}return r}}i([handlingRangeError],BinaryReader.prototype,"readU8",null);i([handlingRangeError],BinaryReader.prototype,"readU16",null);i([handlingRangeError],BinaryReader.prototype,"readU32",null);i([handlingRangeError],BinaryReader.prototype,"readU64",null);i([handlingRangeError],BinaryReader.prototype,"readU128",null);i([handlingRangeError],BinaryReader.prototype,"readU256",null);i([handlingRangeError],BinaryReader.prototype,"readU512",null);i([handlingRangeError],BinaryReader.prototype,"readString",null);i([handlingRangeError],BinaryReader.prototype,"readFixedArray",null);i([handlingRangeError],BinaryReader.prototype,"readArray",null);t.BinaryReader=BinaryReader;function capitalizeFirstLetter(e){return e.charAt(0).toUpperCase()+e.slice(1)}function serializeField(e,t,r,a,n){try{if(typeof a==="string"){n[`write${capitalizeFirstLetter(a)}`](r)}else if(a instanceof Array){if(typeof a[0]==="number"){if(r.length!==a[0]){throw new BorshError(`Expecting byte array of length ${a[0]}, but got ${r.length} bytes`)}n.writeFixedArray(r)}else if(a.length===2&&typeof a[1]==="number"){if(r.length!==a[1]){throw new BorshError(`Expecting byte array of length ${a[1]}, but got ${r.length} bytes`)}for(let t=0;t<a[1];t++){serializeField(e,null,r[t],a[0],n)}}else{n.writeArray(r,(r=>{serializeField(e,t,r,a[0],n)}))}}else if(a.kind!==undefined){switch(a.kind){case"option":{if(r===null||r===undefined){n.writeU8(0)}else{n.writeU8(1);serializeField(e,t,r,a.type,n)}break}case"map":{n.writeU32(r.size);r.forEach(((r,i)=>{serializeField(e,t,i,a.key,n);serializeField(e,t,r,a.value,n)}));break}default:throw new BorshError(`FieldType ${a} unrecognized`)}}else{serializeStruct(e,r,n)}}catch(e){if(e instanceof BorshError){e.addToFieldPath(t)}throw e}}function serializeStruct(e,t,r){if(typeof t.borshSerialize==="function"){t.borshSerialize(r);return}const a=e.get(t.constructor);if(!a){throw new BorshError(`Class ${t.constructor.name} is missing in schema`)}if(a.kind==="struct"){a.fields.map((([a,n])=>{serializeField(e,a,t[a],n,r)}))}else if(a.kind==="enum"){const n=t[a.field];for(let i=0;i<a.values.length;++i){const[s,o]=a.values[i];if(s===n){r.writeU8(i);serializeField(e,s,t[s],o,r);break}}}else{throw new BorshError(`Unexpected schema kind: ${a.kind} for ${t.constructor.name}`)}}function serialize(e,t,r=BinaryWriter){const a=new r;serializeStruct(e,t,a);return a.toArray()}t.serialize=serialize;function deserializeField(e,t,r,a){try{if(typeof r==="string"){return a[`read${capitalizeFirstLetter(r)}`]()}if(r instanceof Array){if(typeof r[0]==="number"){return a.readFixedArray(r[0])}else if(typeof r[1]==="number"){const t=[];for(let n=0;n<r[1];n++){t.push(deserializeField(e,null,r[0],a))}return t}else{return a.readArray((()=>deserializeField(e,t,r[0],a)))}}if(r.kind==="option"){const n=a.readU8();if(n){return deserializeField(e,t,r.type,a)}return undefined}if(r.kind==="map"){let n=new Map;const i=a.readU32();for(let s=0;s<i;s++){const i=deserializeField(e,t,r.key,a);const s=deserializeField(e,t,r.value,a);n.set(i,s)}return n}return deserializeStruct(e,r,a)}catch(e){if(e instanceof BorshError){e.addToFieldPath(t)}throw e}}function deserializeStruct(e,t,r){if(typeof t.borshDeserialize==="function"){return t.borshDeserialize(r)}const a=e.get(t);if(!a){throw new BorshError(`Class ${t.name} is missing in schema`)}if(a.kind==="struct"){const a={};for(const[n,i]of e.get(t).fields){a[n]=deserializeField(e,n,i,r)}return new t(a)}if(a.kind==="enum"){const n=r.readU8();if(n>=a.values.length){throw new BorshError(`Enum index: ${n} is out of range`)}const[i,s]=a.values[n];const o=deserializeField(e,i,s,r);return new t({[i]:o})}throw new BorshError(`Unexpected schema kind: ${a.kind} for ${t.constructor.name}`)}function deserialize(e,t,r,a=BinaryReader){const n=new a(r);const i=deserializeStruct(e,t,n);if(n.offset<r.length){throw new BorshError(`Unexpected ${r.length-n.offset} bytes after deserialized data`)}return i}t.deserialize=deserialize;function deserializeUnchecked(e,t,r,a=BinaryReader){const n=new a(r);return deserializeStruct(e,t,n)}t.deserializeUnchecked=deserializeUnchecked},7565:(e,t,r)=>{var a=r(8674);var n="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";e.exports=a(n)},8684:e=>{function allocUnsafe(e){if(typeof e!=="number"){throw new TypeError('"size" argument must be a number')}if(e<0){throw new RangeError('"size" argument must not be negative')}if(Buffer.allocUnsafe){return Buffer.allocUnsafe(e)}else{return new Buffer(e)}}e.exports=allocUnsafe},9623:(e,t,r)=>{var a=r(5119);var n=r(8684);e.exports=function alloc(e,t,r){if(typeof e!=="number"){throw new TypeError('"size" argument must be a number')}if(e<0){throw new RangeError('"size" argument must not be negative')}if(Buffer.alloc){return Buffer.alloc(e,t,r)}var i=n(e);if(e===0){return i}if(t===undefined){return a(i,0)}if(typeof r!=="string"){r=undefined}return a(i,t,r)}},5119:e=>{var t=function(){try{if(!Buffer.isEncoding("latin1")){return false}var e=Buffer.alloc?Buffer.alloc(4):new Buffer(4);e.fill("ab","ucs2");return e.toString("hex")==="61006200"}catch(e){return false}}();function isSingleByte(e){return e.length===1&&e.charCodeAt(0)<256}function fillWithNumber(e,t,r,a){if(r<0||a>e.length){throw new RangeError("Out of range index")}r=r>>>0;a=a===undefined?e.length:a>>>0;if(a>r){e.fill(t,r,a)}return e}function fillWithBuffer(e,t,r,a){if(r<0||a>e.length){throw new RangeError("Out of range index")}if(a<=r){return e}r=r>>>0;a=a===undefined?e.length:a>>>0;var n=r;var i=t.length;while(n<=a-i){t.copy(e,n);n+=i}if(n!==a){t.copy(e,n,0,a-n)}return e}function fill(e,r,a,n,i){if(t){return e.fill(r,a,n,i)}if(typeof r==="number"){return fillWithNumber(e,r,a,n)}if(typeof r==="string"){if(typeof a==="string"){i=a;a=0;n=e.length}else if(typeof n==="string"){i=n;n=e.length}if(i!==undefined&&typeof i!=="string"){throw new TypeError("encoding must be a string")}if(i==="latin1"){i="binary"}if(typeof i==="string"&&!Buffer.isEncoding(i)){throw new TypeError("Unknown encoding: "+i)}if(r===""){return fillWithNumber(e,0,a,n)}if(isSingleByte(r)){return fillWithNumber(e,r.charCodeAt(0),a,n)}r=new Buffer(r,i)}if(Buffer.isBuffer(r)){return fillWithBuffer(e,r,a,n)}return fillWithNumber(e,0,a,n)}e.exports=fill},5831:e=>{"use strict";const mask=(e,t,r,a,n)=>{for(var i=0;i<n;i++){r[a+i]=e[i]^t[i&3]}};const unmask=(e,t)=>{const r=e.length;for(var a=0;a<r;a++){e[a]^=t[a&3]}};e.exports={mask:mask,unmask:unmask}},4017:(e,t,r)=>{"use strict";try{e.exports=r(1234)(__dirname)}catch(t){e.exports=r(5831)}},4468:(e,t,r)=>{t.formatArgs=formatArgs;t.save=save;t.load=load;t.useColors=useColors;t.storage=localstorage();t.destroy=(()=>{let e=false;return()=>{if(!e){e=true;console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}}})();t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function useColors(){if(typeof window!=="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)){return true}if(typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)){return false}let e;return typeof document!=="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!=="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!=="undefined"&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function formatArgs(t){t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff);if(!this.useColors){return}const r="color: "+this.color;t.splice(1,0,r,"color: inherit");let a=0;let n=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{if(e==="%%"){return}a++;if(e==="%c"){n=a}}));t.splice(n,0,r)}t.log=console.debug||console.log||(()=>{});function save(e){try{if(e){t.storage.setItem("debug",e)}else{t.storage.removeItem("debug")}}catch(e){}}function load(){let e;try{e=t.storage.getItem("debug")||t.storage.getItem("DEBUG")}catch(e){}if(!e&&typeof process!=="undefined"&&"env"in process){e=process.env.DEBUG}return e}function localstorage(){try{return localStorage}catch(e){}}e.exports=r(1163)(t);const{formatters:a}=e.exports;a.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},1163:(e,t,r)=>{function setup(e){createDebug.debug=createDebug;createDebug.default=createDebug;createDebug.coerce=coerce;createDebug.disable=disable;createDebug.enable=enable;createDebug.enabled=enabled;createDebug.humanize=r(2134);createDebug.destroy=destroy;Object.keys(e).forEach((t=>{createDebug[t]=e[t]}));createDebug.names=[];createDebug.skips=[];createDebug.formatters={};function selectColor(e){let t=0;for(let r=0;r<e.length;r++){t=(t<<5)-t+e.charCodeAt(r);t|=0}return createDebug.colors[Math.abs(t)%createDebug.colors.length]}createDebug.selectColor=selectColor;function createDebug(e){let t;let r=null;let a;let n;function debug(...e){if(!debug.enabled){return}const r=debug;const a=Number(new Date);const n=a-(t||a);r.diff=n;r.prev=t;r.curr=a;t=a;e[0]=createDebug.coerce(e[0]);if(typeof e[0]!=="string"){e.unshift("%O")}let i=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((t,a)=>{if(t==="%%"){return"%"}i++;const n=createDebug.formatters[a];if(typeof n==="function"){const a=e[i];t=n.call(r,a);e.splice(i,1);i--}return t}));createDebug.formatArgs.call(r,e);const s=r.log||createDebug.log;s.apply(r,e)}debug.namespace=e;debug.useColors=createDebug.useColors();debug.color=createDebug.selectColor(e);debug.extend=extend;debug.destroy=createDebug.destroy;Object.defineProperty(debug,"enabled",{enumerable:true,configurable:false,get:()=>{if(r!==null){return r}if(a!==createDebug.namespaces){a=createDebug.namespaces;n=createDebug.enabled(e)}return n},set:e=>{r=e}});if(typeof createDebug.init==="function"){createDebug.init(debug)}return debug}function extend(e,t){const r=createDebug(this.namespace+(typeof t==="undefined"?":":t)+e);r.log=this.log;return r}function enable(e){createDebug.save(e);createDebug.namespaces=e;createDebug.names=[];createDebug.skips=[];const t=(typeof e==="string"?e:"").trim().replace(/\s+/g,",").split(",").filter(Boolean);for(const e of t){if(e[0]==="-"){createDebug.skips.push(e.slice(1))}else{createDebug.names.push(e)}}}function matchesTemplate(e,t){let r=0;let a=0;let n=-1;let i=0;while(r<e.length){if(a<t.length&&(t[a]===e[r]||t[a]==="*")){if(t[a]==="*"){n=a;i=r;a++}else{r++;a++}}else if(n!==-1){a=n+1;i++;r=i}else{return false}}while(a<t.length&&t[a]==="*"){a++}return a===t.length}function disable(){const e=[...createDebug.names,...createDebug.skips.map((e=>"-"+e))].join(",");createDebug.enable("");return e}function enabled(e){for(const t of createDebug.skips){if(matchesTemplate(e,t)){return false}}for(const t of createDebug.names){if(matchesTemplate(e,t)){return true}}return false}function coerce(e){if(e instanceof Error){return e.stack||e.message}return e}function destroy(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}createDebug.enable(createDebug.load());return createDebug}e.exports=setup},9592:(e,t,r)=>{if(typeof process==="undefined"||process.type==="renderer"||process.browser===true||process.__nwjs){e.exports=r(4468)}else{e.exports=r(3606)}},3606:(e,t,r)=>{const a=r(2018);const n=r(9023);t.init=init;t.log=log;t.formatArgs=formatArgs;t.save=save;t.load=load;t.useColors=useColors;t.destroy=n.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");t.colors=[6,2,3,4,5,1];try{const e=r(5545);if(e&&(e.stderr||e).level>=2){t.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221]}}catch(e){}t.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,t)=>{const r=t.substring(6).toLowerCase().replace(/_([a-z])/g,((e,t)=>t.toUpperCase()));let a=process.env[t];if(/^(yes|on|true|enabled)$/i.test(a)){a=true}else if(/^(no|off|false|disabled)$/i.test(a)){a=false}else if(a==="null"){a=null}else{a=Number(a)}e[r]=a;return e}),{});function useColors(){return"colors"in t.inspectOpts?Boolean(t.inspectOpts.colors):a.isatty(process.stderr.fd)}function formatArgs(t){const{namespace:r,useColors:a}=this;if(a){const a=this.color;const n="[3"+(a<8?a:"8;5;"+a);const i=`  ${n};1m${r} [0m`;t[0]=i+t[0].split("\n").join("\n"+i);t.push(n+"m+"+e.exports.humanize(this.diff)+"[0m")}else{t[0]=getDate()+r+" "+t[0]}}function getDate(){if(t.inspectOpts.hideDate){return""}return(new Date).toISOString()+" "}function log(...e){return process.stderr.write(n.formatWithOptions(t.inspectOpts,...e)+"\n")}function save(e){if(e){process.env.DEBUG=e}else{delete process.env.DEBUG}}function load(){return process.env.DEBUG}function init(e){e.inspectOpts={};const r=Object.keys(t.inspectOpts);for(let a=0;a<r.length;a++){e.inspectOpts[r[a]]=t.inspectOpts[r[a]]}}e.exports=r(1163)(t);const{formatters:i}=e.exports;i.o=function(e){this.inspectOpts.colors=this.useColors;return n.inspect(e,this.inspectOpts).split("\n").map((e=>e.trim())).join(" ")};i.O=function(e){this.inspectOpts.colors=this.useColors;return n.inspect(e,this.inspectOpts)}},2706:(e,t,r)=>{const a=r(9896);const n=r(6928);const i=r(857);const s=r(6982);const o=r(5101);const d=o.version;const p=["🔐 encrypt with Dotenvx: https://dotenvx.com","🔐 prevent committing .env to code: https://dotenvx.com/precommit","🔐 prevent building .env in docker: https://dotenvx.com/prebuild","📡 observe env with Radar: https://dotenvx.com/radar","📡 auto-backup env with Radar: https://dotenvx.com/radar","📡 version env with Radar: https://dotenvx.com/radar","🛠️  run anywhere with `dotenvx run -- yourcommand`","⚙️  specify custom .env file path with { path: '/custom/path/.env' }","⚙️  enable debug logging with { debug: true }","⚙️  override existing env vars with { override: true }","⚙️  suppress all logs with { quiet: true }","⚙️  write to custom object with { processEnv: myObject }","⚙️  load multiple .env files with { path: ['.env.local', '.env'] }"];function _getRandomTip(){return p[Math.floor(Math.random()*p.length)]}function parseBoolean(e){if(typeof e==="string"){return!["false","0","no","off",""].includes(e.toLowerCase())}return Boolean(e)}function supportsAnsi(){return process.stdout.isTTY}function dim(e){return supportsAnsi()?`[2m${e}[0m`:e}const c=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function parse(e){const t={};let r=e.toString();r=r.replace(/\r\n?/gm,"\n");let a;while((a=c.exec(r))!=null){const e=a[1];let r=a[2]||"";r=r.trim();const n=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/gm,"$2");if(n==='"'){r=r.replace(/\\n/g,"\n");r=r.replace(/\\r/g,"\r")}t[e]=r}return t}function _parseVault(e){e=e||{};const t=_vaultPath(e);e.path=t;const r=l.configDotenv(e);if(!r.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);e.code="MISSING_DATA";throw e}const a=_dotenvKey(e).split(",");const n=a.length;let i;for(let e=0;e<n;e++){try{const t=a[e].trim();const n=_instructions(r,t);i=l.decrypt(n.ciphertext,n.key);break}catch(t){if(e+1>=n){throw t}}}return l.parse(i)}function _warn(e){console.error(`[dotenv@${d}][WARN] ${e}`)}function _debug(e){console.log(`[dotenv@${d}][DEBUG] ${e}`)}function _log(e){console.log(`[dotenv@${d}] ${e}`)}function _dotenvKey(e){if(e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0){return e.DOTENV_KEY}if(process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0){return process.env.DOTENV_KEY}return""}function _instructions(e,t){let r;try{r=new URL(t)}catch(e){if(e.code==="ERR_INVALID_URL"){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");e.code="INVALID_DOTENV_KEY";throw e}throw e}const a=r.password;if(!a){const e=new Error("INVALID_DOTENV_KEY: Missing key part");e.code="INVALID_DOTENV_KEY";throw e}const n=r.searchParams.get("environment");if(!n){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");e.code="INVALID_DOTENV_KEY";throw e}const i=`DOTENV_VAULT_${n.toUpperCase()}`;const s=e.parsed[i];if(!s){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${i} in your .env.vault file.`);e.code="NOT_FOUND_DOTENV_ENVIRONMENT";throw e}return{ciphertext:s,key:a}}function _vaultPath(e){let t=null;if(e&&e.path&&e.path.length>0){if(Array.isArray(e.path)){for(const r of e.path){if(a.existsSync(r)){t=r.endsWith(".vault")?r:`${r}.vault`}}}else{t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`}}else{t=n.resolve(process.cwd(),".env.vault")}if(a.existsSync(t)){return t}return null}function _resolveHome(e){return e[0]==="~"?n.join(i.homedir(),e.slice(1)):e}function _configVault(e){const t=parseBoolean(process.env.DOTENV_CONFIG_DEBUG||e&&e.debug);const r=parseBoolean(process.env.DOTENV_CONFIG_QUIET||e&&e.quiet);if(t||!r){_log("Loading env from encrypted .env.vault")}const a=l._parseVault(e);let n=process.env;if(e&&e.processEnv!=null){n=e.processEnv}l.populate(n,a,e);return{parsed:a}}function configDotenv(e){const t=n.resolve(process.cwd(),".env");let r="utf8";let i=process.env;if(e&&e.processEnv!=null){i=e.processEnv}let s=parseBoolean(i.DOTENV_CONFIG_DEBUG||e&&e.debug);let o=parseBoolean(i.DOTENV_CONFIG_QUIET||e&&e.quiet);if(e&&e.encoding){r=e.encoding}else{if(s){_debug("No encoding is specified. UTF-8 is used by default")}}let d=[t];if(e&&e.path){if(!Array.isArray(e.path)){d=[_resolveHome(e.path)]}else{d=[];for(const t of e.path){d.push(_resolveHome(t))}}}let p;const c={};for(const t of d){try{const n=l.parse(a.readFileSync(t,{encoding:r}));l.populate(c,n,e)}catch(e){if(s){_debug(`Failed to load ${t} ${e.message}`)}p=e}}const u=l.populate(i,c,e);s=parseBoolean(i.DOTENV_CONFIG_DEBUG||s);o=parseBoolean(i.DOTENV_CONFIG_QUIET||o);if(s||!o){const e=Object.keys(u).length;const t=[];for(const e of d){try{const r=n.relative(process.cwd(),e);t.push(r)}catch(t){if(s){_debug(`Failed to load ${e} ${t.message}`)}p=t}}_log(`injecting env (${e}) from ${t.join(",")} ${dim(`-- tip: ${_getRandomTip()}`)}`)}if(p){return{parsed:c,error:p}}else{return{parsed:c}}}function config(e){if(_dotenvKey(e).length===0){return l.configDotenv(e)}const t=_vaultPath(e);if(!t){_warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`);return l.configDotenv(e)}return l._configVault(e)}function decrypt(e,t){const r=Buffer.from(t.slice(-64),"hex");let a=Buffer.from(e,"base64");const n=a.subarray(0,12);const i=a.subarray(-16);a=a.subarray(12,-16);try{const e=s.createDecipheriv("aes-256-gcm",r,n);e.setAuthTag(i);return`${e.update(a)}${e.final()}`}catch(e){const t=e instanceof RangeError;const r=e.message==="Invalid key length";const a=e.message==="Unsupported state or unable to authenticate data";if(t||r){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");e.code="INVALID_DOTENV_KEY";throw e}else if(a){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");e.code="DECRYPTION_FAILED";throw e}else{throw e}}}function populate(e,t,r={}){const a=Boolean(r&&r.debug);const n=Boolean(r&&r.override);const i={};if(typeof t!=="object"){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");e.code="OBJECT_REQUIRED";throw e}for(const r of Object.keys(t)){if(Object.prototype.hasOwnProperty.call(e,r)){if(n===true){e[r]=t[r];i[r]=t[r]}if(a){if(n===true){_debug(`"${r}" is already defined and WAS overwritten`)}else{_debug(`"${r}" is already defined and was NOT overwritten`)}}}else{e[r]=t[r];i[r]=t[r]}}return i}const l={configDotenv:configDotenv,_configVault:_configVault,_parseVault:_parseVault,config:config,decrypt:decrypt,parse:parse,populate:populate};e.exports.configDotenv=l.configDotenv;e.exports._configVault=l._configVault;e.exports._parseVault=l._parseVault;e.exports.config=l.config;e.exports.decrypt=l.decrypt;e.exports.parse=l.parse;e.exports.populate=l.populate;e.exports=l},4343:(e,t)=>{"use strict";
/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * @copyright 2015 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */Object.defineProperty(t,"__esModule",{value:true});const r=new WeakMap;const a=new WeakMap;function pd(e){const t=r.get(e);console.assert(t!=null,"'this' is expected an Event object, but got",e);return t}function setCancelFlag(e){if(e.passiveListener!=null){if(typeof console!=="undefined"&&typeof console.error==="function"){console.error("Unable to preventDefault inside passive event listener invocation.",e.passiveListener)}return}if(!e.event.cancelable){return}e.canceled=true;if(typeof e.event.preventDefault==="function"){e.event.preventDefault()}}function Event(e,t){r.set(this,{eventTarget:e,event:t,eventPhase:2,currentTarget:e,canceled:false,stopped:false,immediateStopped:false,passiveListener:null,timeStamp:t.timeStamp||Date.now()});Object.defineProperty(this,"isTrusted",{value:false,enumerable:true});const a=Object.keys(t);for(let e=0;e<a.length;++e){const t=a[e];if(!(t in this)){Object.defineProperty(this,t,defineRedirectDescriptor(t))}}}Event.prototype={get type(){return pd(this).event.type},get target(){return pd(this).eventTarget},get currentTarget(){return pd(this).currentTarget},composedPath(){const e=pd(this).currentTarget;if(e==null){return[]}return[e]},get NONE(){return 0},get CAPTURING_PHASE(){return 1},get AT_TARGET(){return 2},get BUBBLING_PHASE(){return 3},get eventPhase(){return pd(this).eventPhase},stopPropagation(){const e=pd(this);e.stopped=true;if(typeof e.event.stopPropagation==="function"){e.event.stopPropagation()}},stopImmediatePropagation(){const e=pd(this);e.stopped=true;e.immediateStopped=true;if(typeof e.event.stopImmediatePropagation==="function"){e.event.stopImmediatePropagation()}},get bubbles(){return Boolean(pd(this).event.bubbles)},get cancelable(){return Boolean(pd(this).event.cancelable)},preventDefault(){setCancelFlag(pd(this))},get defaultPrevented(){return pd(this).canceled},get composed(){return Boolean(pd(this).event.composed)},get timeStamp(){return pd(this).timeStamp},get srcElement(){return pd(this).eventTarget},get cancelBubble(){return pd(this).stopped},set cancelBubble(e){if(!e){return}const t=pd(this);t.stopped=true;if(typeof t.event.cancelBubble==="boolean"){t.event.cancelBubble=true}},get returnValue(){return!pd(this).canceled},set returnValue(e){if(!e){setCancelFlag(pd(this))}},initEvent(){}};Object.defineProperty(Event.prototype,"constructor",{value:Event,configurable:true,writable:true});if(typeof window!=="undefined"&&typeof window.Event!=="undefined"){Object.setPrototypeOf(Event.prototype,window.Event.prototype);a.set(window.Event.prototype,Event)}function defineRedirectDescriptor(e){return{get(){return pd(this).event[e]},set(t){pd(this).event[e]=t},configurable:true,enumerable:true}}function defineCallDescriptor(e){return{value(){const t=pd(this).event;return t[e].apply(t,arguments)},configurable:true,enumerable:true}}function defineWrapper(e,t){const r=Object.keys(t);if(r.length===0){return e}function CustomEvent(t,r){e.call(this,t,r)}CustomEvent.prototype=Object.create(e.prototype,{constructor:{value:CustomEvent,configurable:true,writable:true}});for(let a=0;a<r.length;++a){const n=r[a];if(!(n in e.prototype)){const e=Object.getOwnPropertyDescriptor(t,n);const r=typeof e.value==="function";Object.defineProperty(CustomEvent.prototype,n,r?defineCallDescriptor(n):defineRedirectDescriptor(n))}}return CustomEvent}function getWrapper(e){if(e==null||e===Object.prototype){return Event}let t=a.get(e);if(t==null){t=defineWrapper(getWrapper(Object.getPrototypeOf(e)),e);a.set(e,t)}return t}function wrapEvent(e,t){const r=getWrapper(Object.getPrototypeOf(t));return new r(e,t)}function isStopped(e){return pd(e).immediateStopped}function setEventPhase(e,t){pd(e).eventPhase=t}function setCurrentTarget(e,t){pd(e).currentTarget=t}function setPassiveListener(e,t){pd(e).passiveListener=t}const n=new WeakMap;const i=1;const s=2;const o=3;function isObject(e){return e!==null&&typeof e==="object"}function getListeners(e){const t=n.get(e);if(t==null){throw new TypeError("'this' is expected an EventTarget object, but got another value.")}return t}function defineEventAttributeDescriptor(e){return{get(){const t=getListeners(this);let r=t.get(e);while(r!=null){if(r.listenerType===o){return r.listener}r=r.next}return null},set(t){if(typeof t!=="function"&&!isObject(t)){t=null}const r=getListeners(this);let a=null;let n=r.get(e);while(n!=null){if(n.listenerType===o){if(a!==null){a.next=n.next}else if(n.next!==null){r.set(e,n.next)}else{r.delete(e)}}else{a=n}n=n.next}if(t!==null){const n={listener:t,listenerType:o,passive:false,once:false,next:null};if(a===null){r.set(e,n)}else{a.next=n}}},configurable:true,enumerable:true}}function defineEventAttribute(e,t){Object.defineProperty(e,`on${t}`,defineEventAttributeDescriptor(t))}function defineCustomEventTarget(e){function CustomEventTarget(){EventTarget.call(this)}CustomEventTarget.prototype=Object.create(EventTarget.prototype,{constructor:{value:CustomEventTarget,configurable:true,writable:true}});for(let t=0;t<e.length;++t){defineEventAttribute(CustomEventTarget.prototype,e[t])}return CustomEventTarget}function EventTarget(){if(this instanceof EventTarget){n.set(this,new Map);return}if(arguments.length===1&&Array.isArray(arguments[0])){return defineCustomEventTarget(arguments[0])}if(arguments.length>0){const e=new Array(arguments.length);for(let t=0;t<arguments.length;++t){e[t]=arguments[t]}return defineCustomEventTarget(e)}throw new TypeError("Cannot call a class as a function")}EventTarget.prototype={addEventListener(e,t,r){if(t==null){return}if(typeof t!=="function"&&!isObject(t)){throw new TypeError("'listener' should be a function or an object.")}const a=getListeners(this);const n=isObject(r);const o=n?Boolean(r.capture):Boolean(r);const d=o?i:s;const p={listener:t,listenerType:d,passive:n&&Boolean(r.passive),once:n&&Boolean(r.once),next:null};let c=a.get(e);if(c===undefined){a.set(e,p);return}let l=null;while(c!=null){if(c.listener===t&&c.listenerType===d){return}l=c;c=c.next}l.next=p},removeEventListener(e,t,r){if(t==null){return}const a=getListeners(this);const n=isObject(r)?Boolean(r.capture):Boolean(r);const o=n?i:s;let d=null;let p=a.get(e);while(p!=null){if(p.listener===t&&p.listenerType===o){if(d!==null){d.next=p.next}else if(p.next!==null){a.set(e,p.next)}else{a.delete(e)}return}d=p;p=p.next}},dispatchEvent(e){if(e==null||typeof e.type!=="string"){throw new TypeError('"event.type" should be a string.')}const t=getListeners(this);const r=e.type;let a=t.get(r);if(a==null){return true}const n=wrapEvent(this,e);let i=null;while(a!=null){if(a.once){if(i!==null){i.next=a.next}else if(a.next!==null){t.set(r,a.next)}else{t.delete(r)}}else{i=a}setPassiveListener(n,a.passive?a.listener:null);if(typeof a.listener==="function"){try{a.listener.call(this,n)}catch(e){if(typeof console!=="undefined"&&typeof console.error==="function"){console.error(e)}}}else if(a.listenerType!==o&&typeof a.listener.handleEvent==="function"){a.listener.handleEvent(n)}if(isStopped(n)){break}a=a.next}setPassiveListener(n,null);setEventPhase(n,0);setCurrentTarget(n,null);return!n.defaultPrevented}};Object.defineProperty(EventTarget.prototype,"constructor",{value:EventTarget,configurable:true,writable:true});if(typeof window!=="undefined"&&typeof window.EventTarget!=="undefined"){Object.setPrototypeOf(EventTarget.prototype,window.EventTarget.prototype)}t.defineEventAttribute=defineEventAttribute;t.EventTarget=EventTarget;t["default"]=EventTarget;e.exports=EventTarget;e.exports.EventTarget=e.exports["default"]=EventTarget;e.exports.defineEventAttribute=defineEventAttribute},1164:e=>{"use strict";var t=Object.prototype.hasOwnProperty,r="~";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)r=false}function EE(e,t,r){this.fn=e;this.context=t;this.once=r||false}function addListener(e,t,a,n,i){if(typeof a!=="function"){throw new TypeError("The listener must be a function")}var s=new EE(a,n||e,i),o=r?r+t:t;if(!e._events[o])e._events[o]=s,e._eventsCount++;else if(!e._events[o].fn)e._events[o].push(s);else e._events[o]=[e._events[o],s];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],a,n;if(this._eventsCount===0)return e;for(n in a=this._events){if(t.call(a,n))e.push(r?n.slice(1):n)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(a))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=r?r+e:e,a=this._events[t];if(!a)return[];if(a.fn)return[a.fn];for(var n=0,i=a.length,s=new Array(i);n<i;n++){s[n]=a[n].fn}return s};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=r?r+e:e,a=this._events[t];if(!a)return 0;if(a.fn)return 1;return a.length};EventEmitter.prototype.emit=function emit(e,t,a,n,i,s){var o=r?r+e:e;if(!this._events[o])return false;var d=this._events[o],p=arguments.length,c,l;if(d.fn){if(d.once)this.removeListener(e,d.fn,undefined,true);switch(p){case 1:return d.fn.call(d.context),true;case 2:return d.fn.call(d.context,t),true;case 3:return d.fn.call(d.context,t,a),true;case 4:return d.fn.call(d.context,t,a,n),true;case 5:return d.fn.call(d.context,t,a,n,i),true;case 6:return d.fn.call(d.context,t,a,n,i,s),true}for(l=1,c=new Array(p-1);l<p;l++){c[l-1]=arguments[l]}d.fn.apply(d.context,c)}else{var u=d.length,m;for(l=0;l<u;l++){if(d[l].once)this.removeListener(e,d[l].fn,undefined,true);switch(p){case 1:d[l].fn.call(d[l].context);break;case 2:d[l].fn.call(d[l].context,t);break;case 3:d[l].fn.call(d[l].context,t,a);break;case 4:d[l].fn.call(d[l].context,t,a,n);break;default:if(!c)for(m=1,c=new Array(p-1);m<p;m++){c[m-1]=arguments[m]}d[l].fn.apply(d[l].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,r){return addListener(this,e,t,r,false)};EventEmitter.prototype.once=function once(e,t,r){return addListener(this,e,t,r,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,a,n){var i=r?r+e:e;if(!this._events[i])return this;if(!t){clearEvent(this,i);return this}var s=this._events[i];if(s.fn){if(s.fn===t&&(!n||s.once)&&(!a||s.context===a)){clearEvent(this,i)}}else{for(var o=0,d=[],p=s.length;o<p;o++){if(s[o].fn!==t||n&&!s[o].once||a&&s[o].context!==a){d.push(s[o])}}if(d.length)this._events[i]=d.length===1?d[0]:d;else clearEvent(this,i)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=r?r+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=r;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},1149:(e,t,r)=>{"use strict";const a=r(3342).v4;const n=r(6952);const ClientBrowser=function(e,t){if(!(this instanceof ClientBrowser)){return new ClientBrowser(e,t)}if(!t){t={}}this.options={reviver:typeof t.reviver!=="undefined"?t.reviver:null,replacer:typeof t.replacer!=="undefined"?t.replacer:null,generator:typeof t.generator!=="undefined"?t.generator:function(){return a()},version:typeof t.version!=="undefined"?t.version:2,notificationIdNull:typeof t.notificationIdNull==="boolean"?t.notificationIdNull:false};this.callServer=e};e.exports=ClientBrowser;ClientBrowser.prototype.request=function(e,t,r,a){const i=this;let s=null;const o=Array.isArray(e)&&typeof t==="function";if(this.options.version===1&&o){throw new TypeError("JSON-RPC 1.0 does not support batching")}const d=!o&&e&&typeof e==="object"&&typeof t==="function";if(o||d){a=t;s=e}else{if(typeof r==="function"){a=r;r=undefined}const i=typeof a==="function";try{s=n(e,t,r,{generator:this.options.generator,version:this.options.version,notificationIdNull:this.options.notificationIdNull})}catch(e){if(i){return a(e)}throw e}if(!i){return s}}let p;try{p=JSON.stringify(s,this.options.replacer)}catch(e){return a(e)}this.callServer(p,(function(e,t){i._parseResponse(e,t,a)}));return s};ClientBrowser.prototype._parseResponse=function(e,t,r){if(e){r(e);return}if(!t){return r()}let a;try{a=JSON.parse(t,this.options.reviver)}catch(e){return r(e)}if(r.length===3){if(Array.isArray(a)){const isError=function(e){return typeof e.error!=="undefined"};const isNotError=function(e){return!isError(e)};return r(null,a.filter(isError),a.filter(isNotError))}else{return r(null,a.error,a.result)}}r(null,a)}},6952:(e,t,r)=>{"use strict";const a=r(3342).v4;const generateRequest=function(e,t,r,n){if(typeof e!=="string"){throw new TypeError(e+" must be a string")}n=n||{};const i=typeof n.version==="number"?n.version:2;if(i!==1&&i!==2){throw new TypeError(i+" must be 1 or 2")}const s={method:e};if(i===2){s.jsonrpc="2.0"}if(t){if(typeof t!=="object"&&!Array.isArray(t)){throw new TypeError(t+" must be an object, array or omitted")}s.params=t}if(typeof r==="undefined"){const e=typeof n.generator==="function"?n.generator:function(){return a()};s.id=e(s,n)}else if(i===2&&r===null){if(n.notificationIdNull){s.id=null}}else{s.id=r}return s};e.exports=generateRequest},7009:(e,t,r)=>{
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.11.1
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2025
 * @license MIT
 */
(function(){"use strict";var t="input is invalid type";var a=typeof window==="object";var n=a?window:{};if(n.JS_SHA256_NO_WINDOW){a=false}var i=!a&&typeof self==="object";var s=!n.JS_SHA256_NO_NODE_JS&&typeof process==="object"&&process.versions&&process.versions.node&&process.type!="renderer";if(s){n=global}else if(i){n=self}var o=!n.JS_SHA256_NO_COMMON_JS&&"object"==="object"&&e.exports;var d=typeof define==="function"&&define.amd;var p=!n.JS_SHA256_NO_ARRAY_BUFFER&&typeof ArrayBuffer!=="undefined";var c="0123456789abcdef".split("");var l=[-2147483648,8388608,32768,128];var u=[24,16,8,0];var m=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];var f=["hex","array","digest","arrayBuffer"];var g=[];if(n.JS_SHA256_NO_NODE_JS||!Array.isArray){Array.isArray=function(e){return Object.prototype.toString.call(e)==="[object Array]"}}if(p&&(n.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)){ArrayBuffer.isView=function(e){return typeof e==="object"&&e.buffer&&e.buffer.constructor===ArrayBuffer}}var createOutputMethod=function(e,t){return function(r){return new Sha256(t,true).update(r)[e]()}};var createMethod=function(e){var t=createOutputMethod("hex",e);if(s){t=nodeWrap(t,e)}t.create=function(){return new Sha256(e)};t.update=function(e){return t.create().update(e)};for(var r=0;r<f.length;++r){var a=f[r];t[a]=createOutputMethod(a,e)}return t};var nodeWrap=function(e,a){var i=r(6982);var s=r(181).Buffer;var o=a?"sha224":"sha256";var d;if(s.from&&!n.JS_SHA256_NO_BUFFER_FROM){d=s.from}else{d=function(e){return new s(e)}}var nodeMethod=function(r){if(typeof r==="string"){return i.createHash(o).update(r,"utf8").digest("hex")}else{if(r===null||r===undefined){throw new Error(t)}else if(r.constructor===ArrayBuffer){r=new Uint8Array(r)}}if(Array.isArray(r)||ArrayBuffer.isView(r)||r.constructor===s){return i.createHash(o).update(d(r)).digest("hex")}else{return e(r)}};return nodeMethod};var createHmacOutputMethod=function(e,t){return function(r,a){return new HmacSha256(r,t,true).update(a)[e]()}};var createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(t){return new HmacSha256(t,e)};t.update=function(e,r){return t.create(e).update(r)};for(var r=0;r<f.length;++r){var a=f[r];t[a]=createHmacOutputMethod(a,e)}return t};function Sha256(e,t){if(t){g[0]=g[16]=g[1]=g[2]=g[3]=g[4]=g[5]=g[6]=g[7]=g[8]=g[9]=g[10]=g[11]=g[12]=g[13]=g[14]=g[15]=0;this.blocks=g}else{this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}if(e){this.h0=3238371032;this.h1=914150663;this.h2=812702999;this.h3=4144912697;this.h4=4290775857;this.h5=1750603025;this.h6=1694076839;this.h7=3204075428}else{this.h0=1779033703;this.h1=3144134277;this.h2=1013904242;this.h3=2773480762;this.h4=1359893119;this.h5=2600822924;this.h6=528734635;this.h7=1541459225}this.block=this.start=this.bytes=this.hBytes=0;this.finalized=this.hashed=false;this.first=true;this.is224=e}Sha256.prototype.update=function(e){if(this.finalized){return}var r,a=typeof e;if(a!=="string"){if(a==="object"){if(e===null){throw new Error(t)}else if(p&&e.constructor===ArrayBuffer){e=new Uint8Array(e)}else if(!Array.isArray(e)){if(!p||!ArrayBuffer.isView(e)){throw new Error(t)}}}else{throw new Error(t)}r=true}var n,i=0,s,o=e.length,d=this.blocks;while(i<o){if(this.hashed){this.hashed=false;d[0]=this.block;this.block=d[16]=d[1]=d[2]=d[3]=d[4]=d[5]=d[6]=d[7]=d[8]=d[9]=d[10]=d[11]=d[12]=d[13]=d[14]=d[15]=0}if(r){for(s=this.start;i<o&&s<64;++i){d[s>>>2]|=e[i]<<u[s++&3]}}else{for(s=this.start;i<o&&s<64;++i){n=e.charCodeAt(i);if(n<128){d[s>>>2]|=n<<u[s++&3]}else if(n<2048){d[s>>>2]|=(192|n>>>6)<<u[s++&3];d[s>>>2]|=(128|n&63)<<u[s++&3]}else if(n<55296||n>=57344){d[s>>>2]|=(224|n>>>12)<<u[s++&3];d[s>>>2]|=(128|n>>>6&63)<<u[s++&3];d[s>>>2]|=(128|n&63)<<u[s++&3]}else{n=65536+((n&1023)<<10|e.charCodeAt(++i)&1023);d[s>>>2]|=(240|n>>>18)<<u[s++&3];d[s>>>2]|=(128|n>>>12&63)<<u[s++&3];d[s>>>2]|=(128|n>>>6&63)<<u[s++&3];d[s>>>2]|=(128|n&63)<<u[s++&3]}}}this.lastByteIndex=s;this.bytes+=s-this.start;if(s>=64){this.block=d[16];this.start=s-64;this.hash();this.hashed=true}else{this.start=s}}if(this.bytes>4294967295){this.hBytes+=this.bytes/4294967296<<0;this.bytes=this.bytes%4294967296}return this};Sha256.prototype.finalize=function(){if(this.finalized){return}this.finalized=true;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block;e[t>>>2]|=l[t&3];this.block=e[16];if(t>=56){if(!this.hashed){this.hash()}e[0]=this.block;e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0}e[14]=this.hBytes<<3|this.bytes>>>29;e[15]=this.bytes<<3;this.hash()};Sha256.prototype.hash=function(){var e=this.h0,t=this.h1,r=this.h2,a=this.h3,n=this.h4,i=this.h5,s=this.h6,o=this.h7,d=this.blocks,p,c,l,u,f,g,y,_,v,b,w;for(p=16;p<64;++p){f=d[p-15];c=(f>>>7|f<<25)^(f>>>18|f<<14)^f>>>3;f=d[p-2];l=(f>>>17|f<<15)^(f>>>19|f<<13)^f>>>10;d[p]=d[p-16]+c+d[p-7]+l<<0}w=t&r;for(p=0;p<64;p+=4){if(this.first){if(this.is224){_=300032;f=d[0]-1413257819;o=f-150054599<<0;a=f+24177077<<0}else{_=704751109;f=d[0]-210244248;o=f-1521486534<<0;a=f+143694565<<0}this.first=false}else{c=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10);l=(n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7);_=e&t;u=_^e&r^w;y=n&i^~n&s;f=o+l+y+m[p]+d[p];g=c+u;o=a+f<<0;a=f+g<<0}c=(a>>>2|a<<30)^(a>>>13|a<<19)^(a>>>22|a<<10);l=(o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7);v=a&e;u=v^a&t^_;y=o&n^~o&i;f=s+l+y+m[p+1]+d[p+1];g=c+u;s=r+f<<0;r=f+g<<0;c=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10);l=(s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7);b=r&a;u=b^r&e^v;y=s&o^~s&n;f=i+l+y+m[p+2]+d[p+2];g=c+u;i=t+f<<0;t=f+g<<0;c=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10);l=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7);w=t&r;u=w^t&a^b;y=i&s^~i&o;f=n+l+y+m[p+3]+d[p+3];g=c+u;n=e+f<<0;e=f+g<<0;this.chromeBugWorkAround=true}this.h0=this.h0+e<<0;this.h1=this.h1+t<<0;this.h2=this.h2+r<<0;this.h3=this.h3+a<<0;this.h4=this.h4+n<<0;this.h5=this.h5+i<<0;this.h6=this.h6+s<<0;this.h7=this.h7+o<<0};Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,a=this.h3,n=this.h4,i=this.h5,s=this.h6,o=this.h7;var d=c[e>>>28&15]+c[e>>>24&15]+c[e>>>20&15]+c[e>>>16&15]+c[e>>>12&15]+c[e>>>8&15]+c[e>>>4&15]+c[e&15]+c[t>>>28&15]+c[t>>>24&15]+c[t>>>20&15]+c[t>>>16&15]+c[t>>>12&15]+c[t>>>8&15]+c[t>>>4&15]+c[t&15]+c[r>>>28&15]+c[r>>>24&15]+c[r>>>20&15]+c[r>>>16&15]+c[r>>>12&15]+c[r>>>8&15]+c[r>>>4&15]+c[r&15]+c[a>>>28&15]+c[a>>>24&15]+c[a>>>20&15]+c[a>>>16&15]+c[a>>>12&15]+c[a>>>8&15]+c[a>>>4&15]+c[a&15]+c[n>>>28&15]+c[n>>>24&15]+c[n>>>20&15]+c[n>>>16&15]+c[n>>>12&15]+c[n>>>8&15]+c[n>>>4&15]+c[n&15]+c[i>>>28&15]+c[i>>>24&15]+c[i>>>20&15]+c[i>>>16&15]+c[i>>>12&15]+c[i>>>8&15]+c[i>>>4&15]+c[i&15]+c[s>>>28&15]+c[s>>>24&15]+c[s>>>20&15]+c[s>>>16&15]+c[s>>>12&15]+c[s>>>8&15]+c[s>>>4&15]+c[s&15];if(!this.is224){d+=c[o>>>28&15]+c[o>>>24&15]+c[o>>>20&15]+c[o>>>16&15]+c[o>>>12&15]+c[o>>>8&15]+c[o>>>4&15]+c[o&15]}return d};Sha256.prototype.toString=Sha256.prototype.hex;Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,a=this.h3,n=this.h4,i=this.h5,s=this.h6,o=this.h7;var d=[e>>>24&255,e>>>16&255,e>>>8&255,e&255,t>>>24&255,t>>>16&255,t>>>8&255,t&255,r>>>24&255,r>>>16&255,r>>>8&255,r&255,a>>>24&255,a>>>16&255,a>>>8&255,a&255,n>>>24&255,n>>>16&255,n>>>8&255,n&255,i>>>24&255,i>>>16&255,i>>>8&255,i&255,s>>>24&255,s>>>16&255,s>>>8&255,s&255];if(!this.is224){d.push(o>>>24&255,o>>>16&255,o>>>8&255,o&255)}return d};Sha256.prototype.array=Sha256.prototype.digest;Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32);var t=new DataView(e);t.setUint32(0,this.h0);t.setUint32(4,this.h1);t.setUint32(8,this.h2);t.setUint32(12,this.h3);t.setUint32(16,this.h4);t.setUint32(20,this.h5);t.setUint32(24,this.h6);if(!this.is224){t.setUint32(28,this.h7)}return e};function HmacSha256(e,r,a){var n,i=typeof e;if(i==="string"){var s=[],o=e.length,d=0,c;for(n=0;n<o;++n){c=e.charCodeAt(n);if(c<128){s[d++]=c}else if(c<2048){s[d++]=192|c>>>6;s[d++]=128|c&63}else if(c<55296||c>=57344){s[d++]=224|c>>>12;s[d++]=128|c>>>6&63;s[d++]=128|c&63}else{c=65536+((c&1023)<<10|e.charCodeAt(++n)&1023);s[d++]=240|c>>>18;s[d++]=128|c>>>12&63;s[d++]=128|c>>>6&63;s[d++]=128|c&63}}e=s}else{if(i==="object"){if(e===null){throw new Error(t)}else if(p&&e.constructor===ArrayBuffer){e=new Uint8Array(e)}else if(!Array.isArray(e)){if(!p||!ArrayBuffer.isView(e)){throw new Error(t)}}}else{throw new Error(t)}}if(e.length>64){e=new Sha256(r,true).update(e).array()}var l=[],u=[];for(n=0;n<64;++n){var m=e[n]||0;l[n]=92^m;u[n]=54^m}Sha256.call(this,r,a);this.update(u);this.oKeyPad=l;this.inner=true;this.sharedMemory=a}HmacSha256.prototype=new Sha256;HmacSha256.prototype.finalize=function(){Sha256.prototype.finalize.call(this);if(this.inner){this.inner=false;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory);this.update(this.oKeyPad);this.update(e);Sha256.prototype.finalize.call(this)}};var y=createMethod();y.sha256=y;y.sha224=createMethod(true);y.sha256.hmac=createHmacMethod();y.sha224.hmac=createHmacMethod(true);if(o){e.exports=y}else{n.sha256=y.sha256;n.sha224=y.sha224;if(d){define((function(){return y}))}}})()},2134:e=>{var t=1e3;var r=t*60;var a=r*60;var n=a*24;var i=n*7;var s=n*365.25;e.exports=function(e,t){t=t||{};var r=typeof e;if(r==="string"&&e.length>0){return parse(e)}else if(r==="number"&&isFinite(e)){return t.long?fmtLong(e):fmtShort(e)}throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse(e){e=String(e);if(e.length>100){return}var o=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!o){return}var d=parseFloat(o[1]);var p=(o[2]||"ms").toLowerCase();switch(p){case"years":case"year":case"yrs":case"yr":case"y":return d*s;case"weeks":case"week":case"w":return d*i;case"days":case"day":case"d":return d*n;case"hours":case"hour":case"hrs":case"hr":case"h":return d*a;case"minutes":case"minute":case"mins":case"min":case"m":return d*r;case"seconds":case"second":case"secs":case"sec":case"s":return d*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return d;default:return undefined}}function fmtShort(e){var i=Math.abs(e);if(i>=n){return Math.round(e/n)+"d"}if(i>=a){return Math.round(e/a)+"h"}if(i>=r){return Math.round(e/r)+"m"}if(i>=t){return Math.round(e/t)+"s"}return e+"ms"}function fmtLong(e){var i=Math.abs(e);if(i>=n){return plural(e,i,n,"day")}if(i>=a){return plural(e,i,a,"hour")}if(i>=r){return plural(e,i,r,"minute")}if(i>=t){return plural(e,i,t,"second")}return e+" ms"}function plural(e,t,r,a){var n=t>=r*1.5;return Math.round(e/r)+" "+a+(n?"s":"")}},9201:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var a=_interopDefault(r(2203));var n=_interopDefault(r(8611));var i=_interopDefault(r(7016));var s=_interopDefault(r(969));var o=_interopDefault(r(5692));var d=_interopDefault(r(3106));const p=a.Readable;const c=Symbol("buffer");const l=Symbol("type");class Blob{constructor(){this[l]="";const e=arguments[0];const t=arguments[1];const r=[];let a=0;if(e){const t=e;const n=Number(t.length);for(let e=0;e<n;e++){const n=t[e];let i;if(n instanceof Buffer){i=n}else if(ArrayBuffer.isView(n)){i=Buffer.from(n.buffer,n.byteOffset,n.byteLength)}else if(n instanceof ArrayBuffer){i=Buffer.from(n)}else if(n instanceof Blob){i=n[c]}else{i=Buffer.from(typeof n==="string"?n:String(n))}a+=i.length;r.push(i)}}this[c]=Buffer.concat(r);let n=t&&t.type!==undefined&&String(t.type).toLowerCase();if(n&&!/[^\u0020-\u007E]/.test(n)){this[l]=n}}get size(){return this[c].length}get type(){return this[l]}text(){return Promise.resolve(this[c].toString())}arrayBuffer(){const e=this[c];const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new p;e._read=function(){};e.push(this[c]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const t=arguments[0];const r=arguments[1];let a,n;if(t===undefined){a=0}else if(t<0){a=Math.max(e+t,0)}else{a=Math.min(t,e)}if(r===undefined){n=e}else if(r<0){n=Math.max(e+r,0)}else{n=Math.min(r,e)}const i=Math.max(n-a,0);const s=this[c];const o=s.slice(a,a+i);const d=new Blob([],{type:arguments[2]});d[c]=o;return d}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,t,r){Error.call(this,e);this.message=e;this.type=t;if(r){this.code=this.errno=r.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let u;try{u=r(5960).convert}catch(e){}const m=Symbol("Body internals");const f=a.PassThrough;function Body(e){var t=this;var r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},n=r.size;let i=n===undefined?0:n;var s=r.timeout;let o=s===undefined?0:s;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof a);else{e=Buffer.from(String(e))}this[m]={body:e,disturbed:false,error:null};this.size=i;this.timeout=o;if(e instanceof a){e.on("error",(function(e){const r=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[m].error=r}))}}Body.prototype={get body(){return this[m].body},get bodyUsed(){return this[m].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[c]:t})}))},json(){var e=this;return consumeBody.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(t){return convertBody(t,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype)){if(!(t in e)){const r=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,r)}}};function consumeBody(){var e=this;if(this[m].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[m].disturbed=true;if(this[m].error){return Body.Promise.reject(this[m].error)}let t=this.body;if(t===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(t)){t=t.stream()}if(Buffer.isBuffer(t)){return Body.Promise.resolve(t)}if(!(t instanceof a)){return Body.Promise.resolve(Buffer.alloc(0))}let r=[];let n=0;let i=false;return new Body.Promise((function(a,s){let o;if(e.timeout){o=setTimeout((function(){i=true;s(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}t.on("error",(function(t){if(t.name==="AbortError"){i=true;s(t)}else{s(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}}));t.on("data",(function(t){if(i||t===null){return}if(e.size&&n+t.length>e.size){i=true;s(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}n+=t.length;r.push(t)}));t.on("end",(function(){if(i){return}clearTimeout(o);try{a(Buffer.concat(r,n))}catch(t){s(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}))}))}function convertBody(e,t){if(typeof u!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const r=t.get("content-type");let a="utf-8";let n,i;if(r){n=/charset=([^;]*)/i.exec(r)}i=e.slice(0,1024).toString();if(!n&&i){n=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)}if(!n&&i){n=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i);if(!n){n=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i);if(n){n.pop()}}if(n){n=/charset=(.*)/i.exec(n.pop())}}if(!n&&i){n=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)}if(n){a=n.pop();if(a==="gb2312"||a==="gbk"){a="gb18030"}}return u(e,"UTF-8",a).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,r;let n=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(n instanceof a&&typeof n.getBoundary!=="function"){t=new f;r=new f;n.pipe(t);n.pipe(r);e[m].body=t;n=r}return n}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof a){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const t=e.body;if(t===null){return 0}else if(isBlob(t)){return t.size}else if(Buffer.isBuffer(t)){return t.length}else if(t&&typeof t.getLengthSync==="function"){if(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength()){return t.getLengthSync()}return null}else{return null}}function writeToStream(e,t){const r=t.body;if(r===null){e.end()}else if(isBlob(r)){r.stream().pipe(e)}else if(Buffer.isBuffer(r)){e.write(r);e.end()}else{r.pipe(e)}}Body.Promise=global.Promise;const g=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const y=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(g.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(y.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,t){t=t.toLowerCase();for(const r in e){if(r.toLowerCase()===t){return r}}return undefined}const _=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[_]=Object.create(null);if(e instanceof Headers){const t=e.raw();const r=Object.keys(t);for(const e of r){for(const r of t[e]){this.append(e,r)}}return}if(e==null);else if(typeof e==="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!=="function"){throw new TypeError("Header pairs must be iterable")}const r=[];for(const t of e){if(typeof t!=="object"||typeof t[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}r.push(Array.from(t))}for(const e of r){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const t of Object.keys(e)){const r=e[t];this.append(t,r)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const t=find(this[_],e);if(t===undefined){return null}return this[_][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let r=getHeaders(this);let a=0;while(a<r.length){var n=r[a];const i=n[0],s=n[1];e.call(t,s,i,this);r=getHeaders(this);a++}}set(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const r=find(this[_],e);this[_][r!==undefined?r:e]=[t]}append(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const r=find(this[_],e);if(r!==undefined){this[_][r].push(t)}else{this[_][e]=[t]}}has(e){e=`${e}`;validateName(e);return find(this[_],e)!==undefined}delete(e){e=`${e}`;validateName(e);const t=find(this[_],e);if(t!==undefined){delete this[_][t]}}raw(){return this[_]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const r=Object.keys(e[_]).sort();return r.map(t==="key"?function(e){return e.toLowerCase()}:t==="value"?function(t){return e[_][t].join(", ")}:function(t){return[t.toLowerCase(),e[_][t].join(", ")]})}const v=Symbol("internal");function createHeadersIterator(e,t){const r=Object.create(b);r[v]={target:e,kind:t,index:0};return r}const b=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==b){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[v];const t=e.target,r=e.kind,a=e.index;const n=getHeaders(t,r);const i=n.length;if(a>=i){return{value:undefined,done:true}}this[v].index=a+1;return{value:n[a],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(b,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[_]);const r=find(e[_],"Host");if(r!==undefined){t[r]=t[r][0]}return t}function createHeadersLenient(e){const t=new Headers;for(const r of Object.keys(e)){if(g.test(r)){continue}if(Array.isArray(e[r])){for(const a of e[r]){if(y.test(a)){continue}if(t[_][r]===undefined){t[_][r]=[a]}else{t[_][r].push(a)}}}else if(!y.test(e[r])){t[_][r]=[e[r]]}}return t}const w=Symbol("Response internals");const E=n.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,t);const r=t.status||200;const a=new Headers(t.headers);if(e!=null&&!a.has("Content-Type")){const t=extractContentType(e);if(t){a.append("Content-Type",t)}}this[w]={url:t.url,status:r,statusText:t.statusText||E[r],headers:a,counter:t.counter}}get url(){return this[w].url||""}get status(){return this[w].status}get ok(){return this[w].status>=200&&this[w].status<300}get redirected(){return this[w].counter>0}get statusText(){return this[w].statusText}get headers(){return this[w].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const R=Symbol("Request internals");const T=i.URL||s.URL;const O=i.parse;const N=i.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)){e=new T(e).toString()}return O(e)}const C="destroy"in a.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[R]==="object"}function isAbortSignal(e){const t=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let r;if(!isRequest(e)){if(e&&e.href){r=parseURL(e.href)}else{r=parseURL(`${e}`)}e={}}else{r=parseURL(e.url)}let a=t.method||e.method||"GET";a=a.toUpperCase();if((t.body!=null||isRequest(e)&&e.body!==null)&&(a==="GET"||a==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let n=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,n,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const i=new Headers(t.headers||e.headers||{});if(n!=null&&!i.has("Content-Type")){const e=extractContentType(n);if(e){i.append("Content-Type",e)}}let s=isRequest(e)?e.signal:null;if("signal"in t)s=t.signal;if(s!=null&&!isAbortSignal(s)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[R]={method:a,redirect:t.redirect||e.redirect||"follow",headers:i,parsedURL:r,signal:s};this.follow=t.follow!==undefined?t.follow:e.follow!==undefined?e.follow:20;this.compress=t.compress!==undefined?t.compress:e.compress!==undefined?e.compress:true;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent}get method(){return this[R].method}get url(){return N(this[R].parsedURL)}get headers(){return this[R].headers}get redirect(){return this[R].redirect}get signal(){return this[R].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const t=e[R].parsedURL;const r=new Headers(e[R].headers);if(!r.has("Accept")){r.set("Accept","*/*")}if(!t.protocol||!t.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(t.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof a.Readable&&!C){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let n=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){n="0"}if(e.body!=null){const t=getTotalBytes(e);if(typeof t==="number"){n=String(t)}}if(n){r.set("Content-Length",n)}if(!r.has("User-Agent")){r.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!r.has("Accept-Encoding")){r.set("Accept-Encoding","gzip,deflate")}let i=e.agent;if(typeof i==="function"){i=i(t)}return Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(r),agent:i})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const k=i.URL||s.URL;const I=a.PassThrough;const x=function isDomainOrSubdomain(e,t){const r=new k(t).hostname;const a=new k(e).hostname;return r===a||r[r.length-a.length-1]==="."&&r.endsWith(a)};const B=function isSameProtocol(e,t){const r=new k(t).protocol;const a=new k(e).protocol;return r===a};function fetch(e,t){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(r,i){const s=new Request(e,t);const p=getNodeRequestOptions(s);const c=(p.protocol==="https:"?o:n).request;const l=s.signal;let u=null;const m=function abort(){let e=new AbortError("The user aborted a request.");i(e);if(s.body&&s.body instanceof a.Readable){destroyStream(s.body,e)}if(!u||!u.body)return;u.body.emit("error",e)};if(l&&l.aborted){m();return}const f=function abortAndFinalize(){m();finalize()};const g=c(p);let y;if(l){l.addEventListener("abort",f)}function finalize(){g.abort();if(l)l.removeEventListener("abort",f);clearTimeout(y)}if(s.timeout){g.once("socket",(function(e){y=setTimeout((function(){i(new FetchError(`network timeout at: ${s.url}`,"request-timeout"));finalize()}),s.timeout)}))}g.on("error",(function(e){i(new FetchError(`request to ${s.url} failed, reason: ${e.message}`,"system",e));if(u&&u.body){destroyStream(u.body,e)}finalize()}));fixResponseChunkedTransferBadEnding(g,(function(e){if(l&&l.aborted){return}if(u&&u.body){destroyStream(u.body,e)}}));if(parseInt(process.version.substring(1))<14){g.on("socket",(function(e){e.addListener("close",(function(t){const r=e.listenerCount("data")>0;if(u&&r&&!t&&!(l&&l.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";u.body.emit("error",e)}}))}))}g.on("response",(function(e){clearTimeout(y);const t=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const a=t.get("Location");let n=null;try{n=a===null?null:new k(a,s.url).toString()}catch(e){if(s.redirect!=="manual"){i(new FetchError(`uri requested responds with an invalid redirect URL: ${a}`,"invalid-redirect"));finalize();return}}switch(s.redirect){case"error":i(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${s.url}`,"no-redirect"));finalize();return;case"manual":if(n!==null){try{t.set("Location",n)}catch(e){i(e)}}break;case"follow":if(n===null){break}if(s.counter>=s.follow){i(new FetchError(`maximum redirect reached at: ${s.url}`,"max-redirect"));finalize();return}const a={headers:new Headers(s.headers),follow:s.follow,counter:s.counter+1,agent:s.agent,compress:s.compress,method:s.method,body:s.body,signal:s.signal,timeout:s.timeout,size:s.size};if(!x(s.url,n)||!B(s.url,n)){for(const e of["authorization","www-authenticate","cookie","cookie2"]){a.headers.delete(e)}}if(e.statusCode!==303&&s.body&&getTotalBytes(s)===null){i(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&s.method==="POST"){a.method="GET";a.body=undefined;a.headers.delete("content-length")}r(fetch(new Request(n,a)));finalize();return}}e.once("end",(function(){if(l)l.removeEventListener("abort",f)}));let a=e.pipe(new I);const n={url:s.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:s.size,timeout:s.timeout,counter:s.counter};const o=t.get("Content-Encoding");if(!s.compress||s.method==="HEAD"||o===null||e.statusCode===204||e.statusCode===304){u=new Response(a,n);r(u);return}const p={flush:d.Z_SYNC_FLUSH,finishFlush:d.Z_SYNC_FLUSH};if(o=="gzip"||o=="x-gzip"){a=a.pipe(d.createGunzip(p));u=new Response(a,n);r(u);return}if(o=="deflate"||o=="x-deflate"){const t=e.pipe(new I);t.once("data",(function(e){if((e[0]&15)===8){a=a.pipe(d.createInflate())}else{a=a.pipe(d.createInflateRaw())}u=new Response(a,n);r(u)}));t.on("end",(function(){if(!u){u=new Response(a,n);r(u)}}));return}if(o=="br"&&typeof d.createBrotliDecompress==="function"){a=a.pipe(d.createBrotliDecompress());u=new Response(a,n);r(u);return}u=new Response(a,n);r(u)}));writeToStream(g,s)}))}function fixResponseChunkedTransferBadEnding(e,t){let r;e.on("socket",(function(e){r=e}));e.on("response",(function(e){const a=e.headers;if(a["transfer-encoding"]==="chunked"&&!a["content-length"]){e.once("close",(function(e){const a=r&&r.listenerCount("data")>0;if(a&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";t(e)}}))}}))}function destroyStream(e,t){if(e.destroy){e.destroy(t)}else{e.emit("error",t);e.end()}}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=t=fetch;Object.defineProperty(t,"__esModule",{value:true});t["default"]=t;t.Headers=Headers;t.Request=Request;t.Response=Response;t.FetchError=FetchError;t.AbortError=AbortError},1234:(module,__unused_webpack_exports,__nccwpck_require__)=>{const runtimeRequire=true?eval("require"):0;if(typeof runtimeRequire.addon==="function"){module.exports=runtimeRequire.addon.bind(runtimeRequire)}else{module.exports=__nccwpck_require__(2404)}},2404:(module,__unused_webpack_exports,__nccwpck_require__)=>{var fs=__nccwpck_require__(9896);var path=__nccwpck_require__(6928);var os=__nccwpck_require__(857);var runtimeRequire=true?eval("require"):0;var vars=process.config&&process.config.variables||{};var prebuildsOnly=!!process.env.PREBUILDS_ONLY;var abi=process.versions.modules;var runtime=isElectron()?"electron":isNwjs()?"node-webkit":"node";var arch=process.env.npm_config_arch||os.arch();var platform=process.env.npm_config_platform||os.platform();var libc=process.env.LIBC||(isAlpine(platform)?"musl":"glibc");var armv=process.env.ARM_VERSION||(arch==="arm64"?"8":vars.arm_version)||"";var uv=(process.versions.uv||"").split(".")[0];module.exports=load;function load(e){return runtimeRequire(load.resolve(e))}load.resolve=load.path=function(e){e=path.resolve(e||".");try{var t=runtimeRequire(path.join(e,"package.json")).name.toUpperCase().replace(/-/g,"_");if(process.env[t+"_PREBUILD"])e=process.env[t+"_PREBUILD"]}catch(e){}if(!prebuildsOnly){var r=getFirst(path.join(e,"build/Release"),matchBuild);if(r)return r;var a=getFirst(path.join(e,"build/Debug"),matchBuild);if(a)return a}var n=resolve(e);if(n)return n;var i=resolve(path.dirname(process.execPath));if(i)return i;var s=["platform="+platform,"arch="+arch,"runtime="+runtime,"abi="+abi,"uv="+uv,armv?"armv="+armv:"","libc="+libc,"node="+process.versions.node,process.versions.electron?"electron="+process.versions.electron:"",true?"webpack=true":0].filter(Boolean).join(" ");throw new Error("No native build was found for "+s+"\n    loaded from: "+e+"\n");function resolve(e){var t=readdirSync(path.join(e,"prebuilds")).map(parseTuple);var r=t.filter(matchTuple(platform,arch)).sort(compareTuples)[0];if(!r)return;var a=path.join(e,"prebuilds",r.name);var n=readdirSync(a).map(parseTags);var i=n.filter(matchTags(runtime,abi));var s=i.sort(compareTags(runtime))[0];if(s)return path.join(a,s.file)}};function readdirSync(e){try{return fs.readdirSync(e)}catch(e){return[]}}function getFirst(e,t){var r=readdirSync(e).filter(t);return r[0]&&path.join(e,r[0])}function matchBuild(e){return/\.node$/.test(e)}function parseTuple(e){var t=e.split("-");if(t.length!==2)return;var r=t[0];var a=t[1].split("+");if(!r)return;if(!a.length)return;if(!a.every(Boolean))return;return{name:e,platform:r,architectures:a}}function matchTuple(e,t){return function(r){if(r==null)return false;if(r.platform!==e)return false;return r.architectures.includes(t)}}function compareTuples(e,t){return e.architectures.length-t.architectures.length}function parseTags(e){var t=e.split(".");var r=t.pop();var a={file:e,specificity:0};if(r!=="node")return;for(var n=0;n<t.length;n++){var i=t[n];if(i==="node"||i==="electron"||i==="node-webkit"){a.runtime=i}else if(i==="napi"){a.napi=true}else if(i.slice(0,3)==="abi"){a.abi=i.slice(3)}else if(i.slice(0,2)==="uv"){a.uv=i.slice(2)}else if(i.slice(0,4)==="armv"){a.armv=i.slice(4)}else if(i==="glibc"||i==="musl"){a.libc=i}else{continue}a.specificity++}return a}function matchTags(e,t){return function(r){if(r==null)return false;if(r.runtime&&r.runtime!==e&&!runtimeAgnostic(r))return false;if(r.abi&&r.abi!==t&&!r.napi)return false;if(r.uv&&r.uv!==uv)return false;if(r.armv&&r.armv!==armv)return false;if(r.libc&&r.libc!==libc)return false;return true}}function runtimeAgnostic(e){return e.runtime==="node"&&e.napi}function compareTags(e){return function(t,r){if(t.runtime!==r.runtime){return t.runtime===e?-1:1}else if(t.abi!==r.abi){return t.abi?-1:1}else if(t.specificity!==r.specificity){return t.specificity>r.specificity?-1:1}else{return 0}}}function isNwjs(){return!!(process.versions&&process.versions.nw)}function isElectron(){if(process.versions&&process.versions.electron)return true;if(process.env.ELECTRON_RUN_AS_NODE)return true;return typeof window!=="undefined"&&window.process&&window.process.type==="renderer"}function isAlpine(e){return e==="linux"&&fs.existsSync("/etc/alpine-release")}load.parseTags=parseTags;load.matchTags=matchTags;load.compareTags=compareTags;load.parseTuple=parseTuple;load.matchTuple=matchTuple;load.compareTuples=compareTuples},5783:e=>{"use strict";class TimeoutError extends Error{constructor(e){super(e);this.name="TimeoutError"}}const pTimeout=(e,t,r,a)=>{let n;const i=new Promise(((i,s)=>{if(typeof t!=="number"||t<0){throw new TypeError("Expected `milliseconds` to be a positive number")}if(t===Infinity){i(e);return}a={customTimers:{setTimeout:setTimeout,clearTimeout:clearTimeout},...a};n=a.customTimers.setTimeout.call(undefined,(()=>{if(typeof r==="function"){try{i(r())}catch(e){s(e)}return}const a=typeof r==="string"?r:`Promise timed out after ${t} milliseconds`;const n=r instanceof Error?r:new TimeoutError(a);if(typeof e.cancel==="function"){e.cancel()}s(n)}),t);(async()=>{try{i(await e)}catch(e){s(e)}finally{a.customTimers.clearTimeout.call(undefined,n)}})()}));i.clear=()=>{clearTimeout(n);n=undefined};return i};e.exports=pTimeout;e.exports["default"]=pTimeout;e.exports.TimeoutError=TimeoutError},3476:(e,t,r)=>{
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
var a=r(181);var n=a.Buffer;function copyProps(e,t){for(var r in e){t[r]=e[r]}}if(n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow){e.exports=a}else{copyProps(a,t);t.Buffer=SafeBuffer}function SafeBuffer(e,t,r){return n(e,t,r)}SafeBuffer.prototype=Object.create(n.prototype);copyProps(n,SafeBuffer);SafeBuffer.from=function(e,t,r){if(typeof e==="number"){throw new TypeError("Argument must not be a number")}return n(e,t,r)};SafeBuffer.alloc=function(e,t,r){if(typeof e!=="number"){throw new TypeError("Argument must be a number")}var a=n(e);if(t!==undefined){if(typeof r==="string"){a.fill(t,r)}else{a.fill(t)}}else{a.fill(0)}return a};SafeBuffer.allocUnsafe=function(e){if(typeof e!=="number"){throw new TypeError("Argument must be a number")}return n(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!=="number"){throw new TypeError("Argument must be a number")}return a.SlowBuffer(e)}},2478:(e,t,r)=>{"use strict";var a=r(6982);var n=r(9623);var i=function safeCompare(e,t){var r=String(e);var a=String(t);var n=r.length;var i=0;if(n!==a.length){a=r;i=1}for(var s=0;s<n;s++){i|=r.charCodeAt(s)^a.charCodeAt(s)}return i===0};var s=function nativeTimingSafeEqual(e,t){var r=String(e);var i=String(t);var s=Buffer.byteLength(r);var o=Buffer.byteLength(i);var d=n(s,0,"utf8");d.write(r);var p=n(s,0,"utf8");p.write(i);return a.timingSafeEqual(d,p)&&s===o};e.exports=typeof a.timingSafeEqual!=="undefined"?s:i},4775:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var a=r(2203);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function __rest(e,t){var r={};for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0)r[a]=e[a];if(e!=null&&typeof Object.getOwnPropertySymbols==="function")for(var n=0,a=Object.getOwnPropertySymbols(e);n<a.length;n++)if(t.indexOf(a[n])<0)r[a[n]]=e[a[n]];return r}class SandwichStream extends a.Readable{constructor(e){var{head:t,tail:r,separator:a}=e,n=__rest(e,["head","tail","separator"]);super(n);this.streamsActive=false;this.streams=[];this.newStreams=[];this.currentStream=null;this.head=null!==t&&undefined!==t?t:null;this.tail=null!==r&&undefined!==r?r:null;this.separator=null!==a&&undefined!==a?a:null}add(e){if(false===this.streamsActive){this.streams.push(e);e.on("error",this.subStreamOnError.bind(this))}else{this.newStreams.push(e)}return this}_read(){if(false===this.streamsActive){this.streamsActive=true;this.pushHead();this.streamNextStream()}}subStreamOnError(e){this.emit("error",e)}streamNextStream(){if(true===this.nextStream()){this.bindCurrentStreamEvents()}else{this.pushTail();this.push(null)}}nextStream(){const e=this.streams.shift();this.currentStream=undefined!==e?e:null;return null!==this.currentStream}bindCurrentStreamEvents(){this.currentStream.on("readable",this.currentStreamOnReadable.bind(this));this.currentStream.on("end",this.currentStreamOnEnd.bind(this))}currentStreamOnReadable(){const e=this.currentStream.read();const t=undefined!==e&&null!==e?e:"";this.push(t)}currentStreamOnEnd(){this.pushSeparator();this.streams.concat(this.newStreams);this.newStreams=[];this.streamNextStream()}pushHead(){if(null!==this.head){this.push(this.head)}}pushSeparator(){if(0<this.streams.length&&null!==this.separator){this.push(this.separator)}}pushTail(){if(null!==this.tail){this.push(this.tail)}}}t.SandwichStream=SandwichStream;t["default"]=SandwichStream},1397:(e,t)=>{"use strict";function inRange(e,t,r){return t<=e&&e<=r}function ToDictionary(e){if(e===undefined)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}function stringToCodePoints(e){var t=String(e);var r=t.length;var a=0;var n=[];while(a<r){var i=t.charCodeAt(a);if(i<55296||i>57343){n.push(i)}else if(56320<=i&&i<=57343){n.push(65533)}else if(55296<=i&&i<=56319){if(a===r-1){n.push(65533)}else{var s=e.charCodeAt(a+1);if(56320<=s&&s<=57343){var o=i&1023;var d=s&1023;n.push(65536+(o<<10)+d);a+=1}else{n.push(65533)}}}a+=1}return n}function codePointsToString(e){var t="";for(var r=0;r<e.length;++r){var a=e[r];if(a<=65535){t+=String.fromCharCode(a)}else{a-=65536;t+=String.fromCharCode((a>>10)+55296,(a&1023)+56320)}}return t}var r=-1;function Stream(e){this.tokens=[].slice.call(e)}Stream.prototype={endOfStream:function(){return!this.tokens.length},read:function(){if(!this.tokens.length)return r;return this.tokens.shift()},prepend:function(e){if(Array.isArray(e)){var t=e;while(t.length)this.tokens.unshift(t.pop())}else{this.tokens.unshift(e)}},push:function(e){if(Array.isArray(e)){var t=e;while(t.length)this.tokens.push(t.shift())}else{this.tokens.push(e)}}};var a=-1;function decoderError(e,t){if(e)throw TypeError("Decoder error");return t||65533}var n="utf-8";function TextDecoder(e,t){if(!(this instanceof TextDecoder)){return new TextDecoder(e,t)}e=e!==undefined?String(e).toLowerCase():n;if(e!==n){throw new Error("Encoding not supported. Only utf-8 is supported")}t=ToDictionary(t);this._streaming=false;this._BOMseen=false;this._decoder=null;this._fatal=Boolean(t["fatal"]);this._ignoreBOM=Boolean(t["ignoreBOM"]);Object.defineProperty(this,"encoding",{value:"utf-8"});Object.defineProperty(this,"fatal",{value:this._fatal});Object.defineProperty(this,"ignoreBOM",{value:this._ignoreBOM})}TextDecoder.prototype={decode:function decode(e,t){var r;if(typeof e==="object"&&e instanceof ArrayBuffer){r=new Uint8Array(e)}else if(typeof e==="object"&&"buffer"in e&&e.buffer instanceof ArrayBuffer){r=new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}else{r=new Uint8Array(0)}t=ToDictionary(t);if(!this._streaming){this._decoder=new UTF8Decoder({fatal:this._fatal});this._BOMseen=false}this._streaming=Boolean(t["stream"]);var n=new Stream(r);var i=[];var s;while(!n.endOfStream()){s=this._decoder.handler(n,n.read());if(s===a)break;if(s===null)continue;if(Array.isArray(s))i.push.apply(i,s);else i.push(s)}if(!this._streaming){do{s=this._decoder.handler(n,n.read());if(s===a)break;if(s===null)continue;if(Array.isArray(s))i.push.apply(i,s);else i.push(s)}while(!n.endOfStream());this._decoder=null}if(i.length){if(["utf-8"].indexOf(this.encoding)!==-1&&!this._ignoreBOM&&!this._BOMseen){if(i[0]===65279){this._BOMseen=true;i.shift()}else{this._BOMseen=true}}}return codePointsToString(i)}};function TextEncoder(e,t){if(!(this instanceof TextEncoder))return new TextEncoder(e,t);e=e!==undefined?String(e).toLowerCase():n;if(e!==n){throw new Error("Encoding not supported. Only utf-8 is supported")}t=ToDictionary(t);this._streaming=false;this._encoder=null;this._options={fatal:Boolean(t["fatal"])};Object.defineProperty(this,"encoding",{value:"utf-8"})}TextEncoder.prototype={encode:function encode(e,t){e=e?String(e):"";t=ToDictionary(t);if(!this._streaming)this._encoder=new UTF8Encoder(this._options);this._streaming=Boolean(t["stream"]);var r=[];var n=new Stream(stringToCodePoints(e));var i;while(!n.endOfStream()){i=this._encoder.handler(n,n.read());if(i===a)break;if(Array.isArray(i))r.push.apply(r,i);else r.push(i)}if(!this._streaming){while(true){i=this._encoder.handler(n,n.read());if(i===a)break;if(Array.isArray(i))r.push.apply(r,i);else r.push(i)}this._encoder=null}return new Uint8Array(r)}};function UTF8Decoder(e){var t=e.fatal;var n=0,i=0,s=0,o=128,d=191;this.handler=function(e,p){if(p===r&&s!==0){s=0;return decoderError(t)}if(p===r)return a;if(s===0){if(inRange(p,0,127)){return p}if(inRange(p,194,223)){s=1;n=p-192}else if(inRange(p,224,239)){if(p===224)o=160;if(p===237)d=159;s=2;n=p-224}else if(inRange(p,240,244)){if(p===240)o=144;if(p===244)d=143;s=3;n=p-240}else{return decoderError(t)}n=n<<6*s;return null}if(!inRange(p,o,d)){n=s=i=0;o=128;d=191;e.prepend(p);return decoderError(t)}o=128;d=191;i+=1;n+=p-128<<6*(s-i);if(i!==s)return null;var c=n;n=s=i=0;return c}}function UTF8Encoder(e){var t=e.fatal;this.handler=function(e,t){if(t===r)return a;if(inRange(t,0,127))return t;var n,i;if(inRange(t,128,2047)){n=1;i=192}else if(inRange(t,2048,65535)){n=2;i=224}else if(inRange(t,65536,1114111)){n=3;i=240}var s=[(t>>6*n)+i];while(n>0){var o=t>>6*(n-1);s.push(128|o&63);n-=1}return s}}t.TextEncoder=TextEncoder;t.TextDecoder=TextDecoder},3979:(e,t,r)=>{"use strict";var a=r(4876);var n=r(2547);var i={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function findStatus(e){var t=0;var r=n.length-1;while(t<=r){var a=Math.floor((t+r)/2);var i=n[a];if(i[0][0]<=e&&i[0][1]>=e){return i}else if(i[0][0]>e){r=a-1}else{t=a+1}}return null}var s=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function countSymbols(e){return e.replace(s,"_").length}function mapChars(e,t,r){var a=false;var n="";var s=countSymbols(e);for(var o=0;o<s;++o){var d=e.codePointAt(o);var p=findStatus(d);switch(p[1]){case"disallowed":a=true;n+=String.fromCodePoint(d);break;case"ignored":break;case"mapped":n+=String.fromCodePoint.apply(String,p[2]);break;case"deviation":if(r===i.TRANSITIONAL){n+=String.fromCodePoint.apply(String,p[2])}else{n+=String.fromCodePoint(d)}break;case"valid":n+=String.fromCodePoint(d);break;case"disallowed_STD3_mapped":if(t){a=true;n+=String.fromCodePoint(d)}else{n+=String.fromCodePoint.apply(String,p[2])}break;case"disallowed_STD3_valid":if(t){a=true}n+=String.fromCodePoint(d);break}}return{string:n,error:a}}var o=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function validateLabel(e,t){if(e.substr(0,4)==="xn--"){e=a.toUnicode(e);t=i.NONTRANSITIONAL}var r=false;if(normalize(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(o)===0){r=true}var n=countSymbols(e);for(var s=0;s<n;++s){var d=findStatus(e.codePointAt(s));if(processing===i.TRANSITIONAL&&d[1]!=="valid"||processing===i.NONTRANSITIONAL&&d[1]!=="valid"&&d[1]!=="deviation"){r=true;break}}return{label:e,error:r}}function processing(e,t,r){var a=mapChars(e,t,r);a.string=normalize(a.string);var n=a.string.split(".");for(var i=0;i<n.length;++i){try{var s=validateLabel(n[i]);n[i]=s.label;a.error=a.error||s.error}catch(e){a.error=true}}return{string:n.join("."),error:a.error}}e.exports.toASCII=function(e,t,r,n){var i=processing(e,t,r);var s=i.string.split(".");s=s.map((function(e){try{return a.toASCII(e)}catch(t){i.error=true;return e}}));if(n){var o=s.slice(0,s.length-1).join(".").length;if(o.length>253||o.length===0){i.error=true}for(var d=0;d<s.length;++d){if(s.length>63||s.length===0){i.error=true;break}}}if(i.error)return null;return s.join(".")};e.exports.toUnicode=function(e,t){var r=processing(e,t,i.NONTRANSITIONAL);return{domain:r.string,error:r.error}};e.exports.PROCESSING_OPTIONS=i},1177:(e,t,r)=>{(function(e){"use strict";var gf=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r};var randombytes=function(){throw new Error("no PRNG")};var t=new Uint8Array(16);var a=new Uint8Array(32);a[0]=9;var n=gf(),i=gf([1]),s=gf([56129,1]),o=gf([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),d=gf([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),p=gf([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),c=gf([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),l=gf([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function ts64(e,t,r,a){e[t]=r>>24&255;e[t+1]=r>>16&255;e[t+2]=r>>8&255;e[t+3]=r&255;e[t+4]=a>>24&255;e[t+5]=a>>16&255;e[t+6]=a>>8&255;e[t+7]=a&255}function vn(e,t,r,a,n){var i,s=0;for(i=0;i<n;i++)s|=e[t+i]^r[a+i];return(1&s-1>>>8)-1}function crypto_verify_16(e,t,r,a){return vn(e,t,r,a,16)}function crypto_verify_32(e,t,r,a){return vn(e,t,r,a,32)}function core_salsa20(e,t,r,a){var n=a[0]&255|(a[1]&255)<<8|(a[2]&255)<<16|(a[3]&255)<<24,i=r[0]&255|(r[1]&255)<<8|(r[2]&255)<<16|(r[3]&255)<<24,s=r[4]&255|(r[5]&255)<<8|(r[6]&255)<<16|(r[7]&255)<<24,o=r[8]&255|(r[9]&255)<<8|(r[10]&255)<<16|(r[11]&255)<<24,d=r[12]&255|(r[13]&255)<<8|(r[14]&255)<<16|(r[15]&255)<<24,p=a[4]&255|(a[5]&255)<<8|(a[6]&255)<<16|(a[7]&255)<<24,c=t[0]&255|(t[1]&255)<<8|(t[2]&255)<<16|(t[3]&255)<<24,l=t[4]&255|(t[5]&255)<<8|(t[6]&255)<<16|(t[7]&255)<<24,u=t[8]&255|(t[9]&255)<<8|(t[10]&255)<<16|(t[11]&255)<<24,m=t[12]&255|(t[13]&255)<<8|(t[14]&255)<<16|(t[15]&255)<<24,f=a[8]&255|(a[9]&255)<<8|(a[10]&255)<<16|(a[11]&255)<<24,g=r[16]&255|(r[17]&255)<<8|(r[18]&255)<<16|(r[19]&255)<<24,y=r[20]&255|(r[21]&255)<<8|(r[22]&255)<<16|(r[23]&255)<<24,_=r[24]&255|(r[25]&255)<<8|(r[26]&255)<<16|(r[27]&255)<<24,v=r[28]&255|(r[29]&255)<<8|(r[30]&255)<<16|(r[31]&255)<<24,b=a[12]&255|(a[13]&255)<<8|(a[14]&255)<<16|(a[15]&255)<<24;var w=n,E=i,R=s,T=o,O=d,N=p,C=c,k=l,I=u,x=m,B=f,P=g,D=y,L=_,U=v,F=b,V;for(var z=0;z<20;z+=2){V=w+D|0;O^=V<<7|V>>>32-7;V=O+w|0;I^=V<<9|V>>>32-9;V=I+O|0;D^=V<<13|V>>>32-13;V=D+I|0;w^=V<<18|V>>>32-18;V=N+E|0;x^=V<<7|V>>>32-7;V=x+N|0;L^=V<<9|V>>>32-9;V=L+x|0;E^=V<<13|V>>>32-13;V=E+L|0;N^=V<<18|V>>>32-18;V=B+C|0;U^=V<<7|V>>>32-7;V=U+B|0;R^=V<<9|V>>>32-9;V=R+U|0;C^=V<<13|V>>>32-13;V=C+R|0;B^=V<<18|V>>>32-18;V=F+P|0;T^=V<<7|V>>>32-7;V=T+F|0;k^=V<<9|V>>>32-9;V=k+T|0;P^=V<<13|V>>>32-13;V=P+k|0;F^=V<<18|V>>>32-18;V=w+T|0;E^=V<<7|V>>>32-7;V=E+w|0;R^=V<<9|V>>>32-9;V=R+E|0;T^=V<<13|V>>>32-13;V=T+R|0;w^=V<<18|V>>>32-18;V=N+O|0;C^=V<<7|V>>>32-7;V=C+N|0;k^=V<<9|V>>>32-9;V=k+C|0;O^=V<<13|V>>>32-13;V=O+k|0;N^=V<<18|V>>>32-18;V=B+x|0;P^=V<<7|V>>>32-7;V=P+B|0;I^=V<<9|V>>>32-9;V=I+P|0;x^=V<<13|V>>>32-13;V=x+I|0;B^=V<<18|V>>>32-18;V=F+U|0;D^=V<<7|V>>>32-7;V=D+F|0;L^=V<<9|V>>>32-9;V=L+D|0;U^=V<<13|V>>>32-13;V=U+L|0;F^=V<<18|V>>>32-18}w=w+n|0;E=E+i|0;R=R+s|0;T=T+o|0;O=O+d|0;N=N+p|0;C=C+c|0;k=k+l|0;I=I+u|0;x=x+m|0;B=B+f|0;P=P+g|0;D=D+y|0;L=L+_|0;U=U+v|0;F=F+b|0;e[0]=w>>>0&255;e[1]=w>>>8&255;e[2]=w>>>16&255;e[3]=w>>>24&255;e[4]=E>>>0&255;e[5]=E>>>8&255;e[6]=E>>>16&255;e[7]=E>>>24&255;e[8]=R>>>0&255;e[9]=R>>>8&255;e[10]=R>>>16&255;e[11]=R>>>24&255;e[12]=T>>>0&255;e[13]=T>>>8&255;e[14]=T>>>16&255;e[15]=T>>>24&255;e[16]=O>>>0&255;e[17]=O>>>8&255;e[18]=O>>>16&255;e[19]=O>>>24&255;e[20]=N>>>0&255;e[21]=N>>>8&255;e[22]=N>>>16&255;e[23]=N>>>24&255;e[24]=C>>>0&255;e[25]=C>>>8&255;e[26]=C>>>16&255;e[27]=C>>>24&255;e[28]=k>>>0&255;e[29]=k>>>8&255;e[30]=k>>>16&255;e[31]=k>>>24&255;e[32]=I>>>0&255;e[33]=I>>>8&255;e[34]=I>>>16&255;e[35]=I>>>24&255;e[36]=x>>>0&255;e[37]=x>>>8&255;e[38]=x>>>16&255;e[39]=x>>>24&255;e[40]=B>>>0&255;e[41]=B>>>8&255;e[42]=B>>>16&255;e[43]=B>>>24&255;e[44]=P>>>0&255;e[45]=P>>>8&255;e[46]=P>>>16&255;e[47]=P>>>24&255;e[48]=D>>>0&255;e[49]=D>>>8&255;e[50]=D>>>16&255;e[51]=D>>>24&255;e[52]=L>>>0&255;e[53]=L>>>8&255;e[54]=L>>>16&255;e[55]=L>>>24&255;e[56]=U>>>0&255;e[57]=U>>>8&255;e[58]=U>>>16&255;e[59]=U>>>24&255;e[60]=F>>>0&255;e[61]=F>>>8&255;e[62]=F>>>16&255;e[63]=F>>>24&255}function core_hsalsa20(e,t,r,a){var n=a[0]&255|(a[1]&255)<<8|(a[2]&255)<<16|(a[3]&255)<<24,i=r[0]&255|(r[1]&255)<<8|(r[2]&255)<<16|(r[3]&255)<<24,s=r[4]&255|(r[5]&255)<<8|(r[6]&255)<<16|(r[7]&255)<<24,o=r[8]&255|(r[9]&255)<<8|(r[10]&255)<<16|(r[11]&255)<<24,d=r[12]&255|(r[13]&255)<<8|(r[14]&255)<<16|(r[15]&255)<<24,p=a[4]&255|(a[5]&255)<<8|(a[6]&255)<<16|(a[7]&255)<<24,c=t[0]&255|(t[1]&255)<<8|(t[2]&255)<<16|(t[3]&255)<<24,l=t[4]&255|(t[5]&255)<<8|(t[6]&255)<<16|(t[7]&255)<<24,u=t[8]&255|(t[9]&255)<<8|(t[10]&255)<<16|(t[11]&255)<<24,m=t[12]&255|(t[13]&255)<<8|(t[14]&255)<<16|(t[15]&255)<<24,f=a[8]&255|(a[9]&255)<<8|(a[10]&255)<<16|(a[11]&255)<<24,g=r[16]&255|(r[17]&255)<<8|(r[18]&255)<<16|(r[19]&255)<<24,y=r[20]&255|(r[21]&255)<<8|(r[22]&255)<<16|(r[23]&255)<<24,_=r[24]&255|(r[25]&255)<<8|(r[26]&255)<<16|(r[27]&255)<<24,v=r[28]&255|(r[29]&255)<<8|(r[30]&255)<<16|(r[31]&255)<<24,b=a[12]&255|(a[13]&255)<<8|(a[14]&255)<<16|(a[15]&255)<<24;var w=n,E=i,R=s,T=o,O=d,N=p,C=c,k=l,I=u,x=m,B=f,P=g,D=y,L=_,U=v,F=b,V;for(var z=0;z<20;z+=2){V=w+D|0;O^=V<<7|V>>>32-7;V=O+w|0;I^=V<<9|V>>>32-9;V=I+O|0;D^=V<<13|V>>>32-13;V=D+I|0;w^=V<<18|V>>>32-18;V=N+E|0;x^=V<<7|V>>>32-7;V=x+N|0;L^=V<<9|V>>>32-9;V=L+x|0;E^=V<<13|V>>>32-13;V=E+L|0;N^=V<<18|V>>>32-18;V=B+C|0;U^=V<<7|V>>>32-7;V=U+B|0;R^=V<<9|V>>>32-9;V=R+U|0;C^=V<<13|V>>>32-13;V=C+R|0;B^=V<<18|V>>>32-18;V=F+P|0;T^=V<<7|V>>>32-7;V=T+F|0;k^=V<<9|V>>>32-9;V=k+T|0;P^=V<<13|V>>>32-13;V=P+k|0;F^=V<<18|V>>>32-18;V=w+T|0;E^=V<<7|V>>>32-7;V=E+w|0;R^=V<<9|V>>>32-9;V=R+E|0;T^=V<<13|V>>>32-13;V=T+R|0;w^=V<<18|V>>>32-18;V=N+O|0;C^=V<<7|V>>>32-7;V=C+N|0;k^=V<<9|V>>>32-9;V=k+C|0;O^=V<<13|V>>>32-13;V=O+k|0;N^=V<<18|V>>>32-18;V=B+x|0;P^=V<<7|V>>>32-7;V=P+B|0;I^=V<<9|V>>>32-9;V=I+P|0;x^=V<<13|V>>>32-13;V=x+I|0;B^=V<<18|V>>>32-18;V=F+U|0;D^=V<<7|V>>>32-7;V=D+F|0;L^=V<<9|V>>>32-9;V=L+D|0;U^=V<<13|V>>>32-13;V=U+L|0;F^=V<<18|V>>>32-18}e[0]=w>>>0&255;e[1]=w>>>8&255;e[2]=w>>>16&255;e[3]=w>>>24&255;e[4]=N>>>0&255;e[5]=N>>>8&255;e[6]=N>>>16&255;e[7]=N>>>24&255;e[8]=B>>>0&255;e[9]=B>>>8&255;e[10]=B>>>16&255;e[11]=B>>>24&255;e[12]=F>>>0&255;e[13]=F>>>8&255;e[14]=F>>>16&255;e[15]=F>>>24&255;e[16]=C>>>0&255;e[17]=C>>>8&255;e[18]=C>>>16&255;e[19]=C>>>24&255;e[20]=k>>>0&255;e[21]=k>>>8&255;e[22]=k>>>16&255;e[23]=k>>>24&255;e[24]=I>>>0&255;e[25]=I>>>8&255;e[26]=I>>>16&255;e[27]=I>>>24&255;e[28]=x>>>0&255;e[29]=x>>>8&255;e[30]=x>>>16&255;e[31]=x>>>24&255}function crypto_core_salsa20(e,t,r,a){core_salsa20(e,t,r,a)}function crypto_core_hsalsa20(e,t,r,a){core_hsalsa20(e,t,r,a)}var u=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function crypto_stream_salsa20_xor(e,t,r,a,n,i,s){var o=new Uint8Array(16),d=new Uint8Array(64);var p,c;for(c=0;c<16;c++)o[c]=0;for(c=0;c<8;c++)o[c]=i[c];while(n>=64){crypto_core_salsa20(d,o,s,u);for(c=0;c<64;c++)e[t+c]=r[a+c]^d[c];p=1;for(c=8;c<16;c++){p=p+(o[c]&255)|0;o[c]=p&255;p>>>=8}n-=64;t+=64;a+=64}if(n>0){crypto_core_salsa20(d,o,s,u);for(c=0;c<n;c++)e[t+c]=r[a+c]^d[c]}return 0}function crypto_stream_salsa20(e,t,r,a,n){var i=new Uint8Array(16),s=new Uint8Array(64);var o,d;for(d=0;d<16;d++)i[d]=0;for(d=0;d<8;d++)i[d]=a[d];while(r>=64){crypto_core_salsa20(s,i,n,u);for(d=0;d<64;d++)e[t+d]=s[d];o=1;for(d=8;d<16;d++){o=o+(i[d]&255)|0;i[d]=o&255;o>>>=8}r-=64;t+=64}if(r>0){crypto_core_salsa20(s,i,n,u);for(d=0;d<r;d++)e[t+d]=s[d]}return 0}function crypto_stream(e,t,r,a,n){var i=new Uint8Array(32);crypto_core_hsalsa20(i,a,n,u);var s=new Uint8Array(8);for(var o=0;o<8;o++)s[o]=a[o+16];return crypto_stream_salsa20(e,t,r,s,i)}function crypto_stream_xor(e,t,r,a,n,i,s){var o=new Uint8Array(32);crypto_core_hsalsa20(o,i,s,u);var d=new Uint8Array(8);for(var p=0;p<8;p++)d[p]=i[p+16];return crypto_stream_salsa20_xor(e,t,r,a,n,d,o)}var poly1305=function(e){this.buffer=new Uint8Array(16);this.r=new Uint16Array(10);this.h=new Uint16Array(10);this.pad=new Uint16Array(8);this.leftover=0;this.fin=0;var t,r,a,n,i,s,o,d;t=e[0]&255|(e[1]&255)<<8;this.r[0]=t&8191;r=e[2]&255|(e[3]&255)<<8;this.r[1]=(t>>>13|r<<3)&8191;a=e[4]&255|(e[5]&255)<<8;this.r[2]=(r>>>10|a<<6)&7939;n=e[6]&255|(e[7]&255)<<8;this.r[3]=(a>>>7|n<<9)&8191;i=e[8]&255|(e[9]&255)<<8;this.r[4]=(n>>>4|i<<12)&255;this.r[5]=i>>>1&8190;s=e[10]&255|(e[11]&255)<<8;this.r[6]=(i>>>14|s<<2)&8191;o=e[12]&255|(e[13]&255)<<8;this.r[7]=(s>>>11|o<<5)&8065;d=e[14]&255|(e[15]&255)<<8;this.r[8]=(o>>>8|d<<8)&8191;this.r[9]=d>>>5&127;this.pad[0]=e[16]&255|(e[17]&255)<<8;this.pad[1]=e[18]&255|(e[19]&255)<<8;this.pad[2]=e[20]&255|(e[21]&255)<<8;this.pad[3]=e[22]&255|(e[23]&255)<<8;this.pad[4]=e[24]&255|(e[25]&255)<<8;this.pad[5]=e[26]&255|(e[27]&255)<<8;this.pad[6]=e[28]&255|(e[29]&255)<<8;this.pad[7]=e[30]&255|(e[31]&255)<<8};poly1305.prototype.blocks=function(e,t,r){var a=this.fin?0:1<<11;var n,i,s,o,d,p,c,l,u;var m,f,g,y,_,v,b,w,E,R;var T=this.h[0],O=this.h[1],N=this.h[2],C=this.h[3],k=this.h[4],I=this.h[5],x=this.h[6],B=this.h[7],P=this.h[8],D=this.h[9];var L=this.r[0],U=this.r[1],F=this.r[2],V=this.r[3],z=this.r[4],j=this.r[5],H=this.r[6],q=this.r[7],$=this.r[8],K=this.r[9];while(r>=16){n=e[t+0]&255|(e[t+1]&255)<<8;T+=n&8191;i=e[t+2]&255|(e[t+3]&255)<<8;O+=(n>>>13|i<<3)&8191;s=e[t+4]&255|(e[t+5]&255)<<8;N+=(i>>>10|s<<6)&8191;o=e[t+6]&255|(e[t+7]&255)<<8;C+=(s>>>7|o<<9)&8191;d=e[t+8]&255|(e[t+9]&255)<<8;k+=(o>>>4|d<<12)&8191;I+=d>>>1&8191;p=e[t+10]&255|(e[t+11]&255)<<8;x+=(d>>>14|p<<2)&8191;c=e[t+12]&255|(e[t+13]&255)<<8;B+=(p>>>11|c<<5)&8191;l=e[t+14]&255|(e[t+15]&255)<<8;P+=(c>>>8|l<<8)&8191;D+=l>>>5|a;u=0;m=u;m+=T*L;m+=O*(5*K);m+=N*(5*$);m+=C*(5*q);m+=k*(5*H);u=m>>>13;m&=8191;m+=I*(5*j);m+=x*(5*z);m+=B*(5*V);m+=P*(5*F);m+=D*(5*U);u+=m>>>13;m&=8191;f=u;f+=T*U;f+=O*L;f+=N*(5*K);f+=C*(5*$);f+=k*(5*q);u=f>>>13;f&=8191;f+=I*(5*H);f+=x*(5*j);f+=B*(5*z);f+=P*(5*V);f+=D*(5*F);u+=f>>>13;f&=8191;g=u;g+=T*F;g+=O*U;g+=N*L;g+=C*(5*K);g+=k*(5*$);u=g>>>13;g&=8191;g+=I*(5*q);g+=x*(5*H);g+=B*(5*j);g+=P*(5*z);g+=D*(5*V);u+=g>>>13;g&=8191;y=u;y+=T*V;y+=O*F;y+=N*U;y+=C*L;y+=k*(5*K);u=y>>>13;y&=8191;y+=I*(5*$);y+=x*(5*q);y+=B*(5*H);y+=P*(5*j);y+=D*(5*z);u+=y>>>13;y&=8191;_=u;_+=T*z;_+=O*V;_+=N*F;_+=C*U;_+=k*L;u=_>>>13;_&=8191;_+=I*(5*K);_+=x*(5*$);_+=B*(5*q);_+=P*(5*H);_+=D*(5*j);u+=_>>>13;_&=8191;v=u;v+=T*j;v+=O*z;v+=N*V;v+=C*F;v+=k*U;u=v>>>13;v&=8191;v+=I*L;v+=x*(5*K);v+=B*(5*$);v+=P*(5*q);v+=D*(5*H);u+=v>>>13;v&=8191;b=u;b+=T*H;b+=O*j;b+=N*z;b+=C*V;b+=k*F;u=b>>>13;b&=8191;b+=I*U;b+=x*L;b+=B*(5*K);b+=P*(5*$);b+=D*(5*q);u+=b>>>13;b&=8191;w=u;w+=T*q;w+=O*H;w+=N*j;w+=C*z;w+=k*V;u=w>>>13;w&=8191;w+=I*F;w+=x*U;w+=B*L;w+=P*(5*K);w+=D*(5*$);u+=w>>>13;w&=8191;E=u;E+=T*$;E+=O*q;E+=N*H;E+=C*j;E+=k*z;u=E>>>13;E&=8191;E+=I*V;E+=x*F;E+=B*U;E+=P*L;E+=D*(5*K);u+=E>>>13;E&=8191;R=u;R+=T*K;R+=O*$;R+=N*q;R+=C*H;R+=k*j;u=R>>>13;R&=8191;R+=I*z;R+=x*V;R+=B*F;R+=P*U;R+=D*L;u+=R>>>13;R&=8191;u=(u<<2)+u|0;u=u+m|0;m=u&8191;u=u>>>13;f+=u;T=m;O=f;N=g;C=y;k=_;I=v;x=b;B=w;P=E;D=R;t+=16;r-=16}this.h[0]=T;this.h[1]=O;this.h[2]=N;this.h[3]=C;this.h[4]=k;this.h[5]=I;this.h[6]=x;this.h[7]=B;this.h[8]=P;this.h[9]=D};poly1305.prototype.finish=function(e,t){var r=new Uint16Array(10);var a,n,i,s;if(this.leftover){s=this.leftover;this.buffer[s++]=1;for(;s<16;s++)this.buffer[s]=0;this.fin=1;this.blocks(this.buffer,0,16)}a=this.h[1]>>>13;this.h[1]&=8191;for(s=2;s<10;s++){this.h[s]+=a;a=this.h[s]>>>13;this.h[s]&=8191}this.h[0]+=a*5;a=this.h[0]>>>13;this.h[0]&=8191;this.h[1]+=a;a=this.h[1]>>>13;this.h[1]&=8191;this.h[2]+=a;r[0]=this.h[0]+5;a=r[0]>>>13;r[0]&=8191;for(s=1;s<10;s++){r[s]=this.h[s]+a;a=r[s]>>>13;r[s]&=8191}r[9]-=1<<13;n=(a^1)-1;for(s=0;s<10;s++)r[s]&=n;n=~n;for(s=0;s<10;s++)this.h[s]=this.h[s]&n|r[s];this.h[0]=(this.h[0]|this.h[1]<<13)&65535;this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535;this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535;this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535;this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535;this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535;this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535;this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535;i=this.h[0]+this.pad[0];this.h[0]=i&65535;for(s=1;s<8;s++){i=(this.h[s]+this.pad[s]|0)+(i>>>16)|0;this.h[s]=i&65535}e[t+0]=this.h[0]>>>0&255;e[t+1]=this.h[0]>>>8&255;e[t+2]=this.h[1]>>>0&255;e[t+3]=this.h[1]>>>8&255;e[t+4]=this.h[2]>>>0&255;e[t+5]=this.h[2]>>>8&255;e[t+6]=this.h[3]>>>0&255;e[t+7]=this.h[3]>>>8&255;e[t+8]=this.h[4]>>>0&255;e[t+9]=this.h[4]>>>8&255;e[t+10]=this.h[5]>>>0&255;e[t+11]=this.h[5]>>>8&255;e[t+12]=this.h[6]>>>0&255;e[t+13]=this.h[6]>>>8&255;e[t+14]=this.h[7]>>>0&255;e[t+15]=this.h[7]>>>8&255};poly1305.prototype.update=function(e,t,r){var a,n;if(this.leftover){n=16-this.leftover;if(n>r)n=r;for(a=0;a<n;a++)this.buffer[this.leftover+a]=e[t+a];r-=n;t+=n;this.leftover+=n;if(this.leftover<16)return;this.blocks(this.buffer,0,16);this.leftover=0}if(r>=16){n=r-r%16;this.blocks(e,t,n);t+=n;r-=n}if(r){for(a=0;a<r;a++)this.buffer[this.leftover+a]=e[t+a];this.leftover+=r}};function crypto_onetimeauth(e,t,r,a,n,i){var s=new poly1305(i);s.update(r,a,n);s.finish(e,t);return 0}function crypto_onetimeauth_verify(e,t,r,a,n,i){var s=new Uint8Array(16);crypto_onetimeauth(s,0,r,a,n,i);return crypto_verify_16(e,t,s,0)}function crypto_secretbox(e,t,r,a,n){var i;if(r<32)return-1;crypto_stream_xor(e,0,t,0,r,a,n);crypto_onetimeauth(e,16,e,32,r-32,e);for(i=0;i<16;i++)e[i]=0;return 0}function crypto_secretbox_open(e,t,r,a,n){var i;var s=new Uint8Array(32);if(r<32)return-1;crypto_stream(s,0,32,a,n);if(crypto_onetimeauth_verify(t,16,t,32,r-32,s)!==0)return-1;crypto_stream_xor(e,0,t,0,r,a,n);for(i=0;i<32;i++)e[i]=0;return 0}function set25519(e,t){var r;for(r=0;r<16;r++)e[r]=t[r]|0}function car25519(e){var t,r,a=1;for(t=0;t<16;t++){r=e[t]+a+65535;a=Math.floor(r/65536);e[t]=r-a*65536}e[0]+=a-1+37*(a-1)}function sel25519(e,t,r){var a,n=~(r-1);for(var i=0;i<16;i++){a=n&(e[i]^t[i]);e[i]^=a;t[i]^=a}}function pack25519(e,t){var r,a,n;var i=gf(),s=gf();for(r=0;r<16;r++)s[r]=t[r];car25519(s);car25519(s);car25519(s);for(a=0;a<2;a++){i[0]=s[0]-65517;for(r=1;r<15;r++){i[r]=s[r]-65535-(i[r-1]>>16&1);i[r-1]&=65535}i[15]=s[15]-32767-(i[14]>>16&1);n=i[15]>>16&1;i[14]&=65535;sel25519(s,i,1-n)}for(r=0;r<16;r++){e[2*r]=s[r]&255;e[2*r+1]=s[r]>>8}}function neq25519(e,t){var r=new Uint8Array(32),a=new Uint8Array(32);pack25519(r,e);pack25519(a,t);return crypto_verify_32(r,0,a,0)}function par25519(e){var t=new Uint8Array(32);pack25519(t,e);return t[0]&1}function unpack25519(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function A(e,t,r){for(var a=0;a<16;a++)e[a]=t[a]+r[a]}function Z(e,t,r){for(var a=0;a<16;a++)e[a]=t[a]-r[a]}function M(e,t,r){var a,n,i=0,s=0,o=0,d=0,p=0,c=0,l=0,u=0,m=0,f=0,g=0,y=0,_=0,v=0,b=0,w=0,E=0,R=0,T=0,O=0,N=0,C=0,k=0,I=0,x=0,B=0,P=0,D=0,L=0,U=0,F=0,V=r[0],z=r[1],j=r[2],H=r[3],q=r[4],$=r[5],K=r[6],W=r[7],G=r[8],Y=r[9],J=r[10],X=r[11],Q=r[12],ee=r[13],te=r[14],re=r[15];a=t[0];i+=a*V;s+=a*z;o+=a*j;d+=a*H;p+=a*q;c+=a*$;l+=a*K;u+=a*W;m+=a*G;f+=a*Y;g+=a*J;y+=a*X;_+=a*Q;v+=a*ee;b+=a*te;w+=a*re;a=t[1];s+=a*V;o+=a*z;d+=a*j;p+=a*H;c+=a*q;l+=a*$;u+=a*K;m+=a*W;f+=a*G;g+=a*Y;y+=a*J;_+=a*X;v+=a*Q;b+=a*ee;w+=a*te;E+=a*re;a=t[2];o+=a*V;d+=a*z;p+=a*j;c+=a*H;l+=a*q;u+=a*$;m+=a*K;f+=a*W;g+=a*G;y+=a*Y;_+=a*J;v+=a*X;b+=a*Q;w+=a*ee;E+=a*te;R+=a*re;a=t[3];d+=a*V;p+=a*z;c+=a*j;l+=a*H;u+=a*q;m+=a*$;f+=a*K;g+=a*W;y+=a*G;_+=a*Y;v+=a*J;b+=a*X;w+=a*Q;E+=a*ee;R+=a*te;T+=a*re;a=t[4];p+=a*V;c+=a*z;l+=a*j;u+=a*H;m+=a*q;f+=a*$;g+=a*K;y+=a*W;_+=a*G;v+=a*Y;b+=a*J;w+=a*X;E+=a*Q;R+=a*ee;T+=a*te;O+=a*re;a=t[5];c+=a*V;l+=a*z;u+=a*j;m+=a*H;f+=a*q;g+=a*$;y+=a*K;_+=a*W;v+=a*G;b+=a*Y;w+=a*J;E+=a*X;R+=a*Q;T+=a*ee;O+=a*te;N+=a*re;a=t[6];l+=a*V;u+=a*z;m+=a*j;f+=a*H;g+=a*q;y+=a*$;_+=a*K;v+=a*W;b+=a*G;w+=a*Y;E+=a*J;R+=a*X;T+=a*Q;O+=a*ee;N+=a*te;C+=a*re;a=t[7];u+=a*V;m+=a*z;f+=a*j;g+=a*H;y+=a*q;_+=a*$;v+=a*K;b+=a*W;w+=a*G;E+=a*Y;R+=a*J;T+=a*X;O+=a*Q;N+=a*ee;C+=a*te;k+=a*re;a=t[8];m+=a*V;f+=a*z;g+=a*j;y+=a*H;_+=a*q;v+=a*$;b+=a*K;w+=a*W;E+=a*G;R+=a*Y;T+=a*J;O+=a*X;N+=a*Q;C+=a*ee;k+=a*te;I+=a*re;a=t[9];f+=a*V;g+=a*z;y+=a*j;_+=a*H;v+=a*q;b+=a*$;w+=a*K;E+=a*W;R+=a*G;T+=a*Y;O+=a*J;N+=a*X;C+=a*Q;k+=a*ee;I+=a*te;x+=a*re;a=t[10];g+=a*V;y+=a*z;_+=a*j;v+=a*H;b+=a*q;w+=a*$;E+=a*K;R+=a*W;T+=a*G;O+=a*Y;N+=a*J;C+=a*X;k+=a*Q;I+=a*ee;x+=a*te;B+=a*re;a=t[11];y+=a*V;_+=a*z;v+=a*j;b+=a*H;w+=a*q;E+=a*$;R+=a*K;T+=a*W;O+=a*G;N+=a*Y;C+=a*J;k+=a*X;I+=a*Q;x+=a*ee;B+=a*te;P+=a*re;a=t[12];_+=a*V;v+=a*z;b+=a*j;w+=a*H;E+=a*q;R+=a*$;T+=a*K;O+=a*W;N+=a*G;C+=a*Y;k+=a*J;I+=a*X;x+=a*Q;B+=a*ee;P+=a*te;D+=a*re;a=t[13];v+=a*V;b+=a*z;w+=a*j;E+=a*H;R+=a*q;T+=a*$;O+=a*K;N+=a*W;C+=a*G;k+=a*Y;I+=a*J;x+=a*X;B+=a*Q;P+=a*ee;D+=a*te;L+=a*re;a=t[14];b+=a*V;w+=a*z;E+=a*j;R+=a*H;T+=a*q;O+=a*$;N+=a*K;C+=a*W;k+=a*G;I+=a*Y;x+=a*J;B+=a*X;P+=a*Q;D+=a*ee;L+=a*te;U+=a*re;a=t[15];w+=a*V;E+=a*z;R+=a*j;T+=a*H;O+=a*q;N+=a*$;C+=a*K;k+=a*W;I+=a*G;x+=a*Y;B+=a*J;P+=a*X;D+=a*Q;L+=a*ee;U+=a*te;F+=a*re;i+=38*E;s+=38*R;o+=38*T;d+=38*O;p+=38*N;c+=38*C;l+=38*k;u+=38*I;m+=38*x;f+=38*B;g+=38*P;y+=38*D;_+=38*L;v+=38*U;b+=38*F;n=1;a=i+n+65535;n=Math.floor(a/65536);i=a-n*65536;a=s+n+65535;n=Math.floor(a/65536);s=a-n*65536;a=o+n+65535;n=Math.floor(a/65536);o=a-n*65536;a=d+n+65535;n=Math.floor(a/65536);d=a-n*65536;a=p+n+65535;n=Math.floor(a/65536);p=a-n*65536;a=c+n+65535;n=Math.floor(a/65536);c=a-n*65536;a=l+n+65535;n=Math.floor(a/65536);l=a-n*65536;a=u+n+65535;n=Math.floor(a/65536);u=a-n*65536;a=m+n+65535;n=Math.floor(a/65536);m=a-n*65536;a=f+n+65535;n=Math.floor(a/65536);f=a-n*65536;a=g+n+65535;n=Math.floor(a/65536);g=a-n*65536;a=y+n+65535;n=Math.floor(a/65536);y=a-n*65536;a=_+n+65535;n=Math.floor(a/65536);_=a-n*65536;a=v+n+65535;n=Math.floor(a/65536);v=a-n*65536;a=b+n+65535;n=Math.floor(a/65536);b=a-n*65536;a=w+n+65535;n=Math.floor(a/65536);w=a-n*65536;i+=n-1+37*(n-1);n=1;a=i+n+65535;n=Math.floor(a/65536);i=a-n*65536;a=s+n+65535;n=Math.floor(a/65536);s=a-n*65536;a=o+n+65535;n=Math.floor(a/65536);o=a-n*65536;a=d+n+65535;n=Math.floor(a/65536);d=a-n*65536;a=p+n+65535;n=Math.floor(a/65536);p=a-n*65536;a=c+n+65535;n=Math.floor(a/65536);c=a-n*65536;a=l+n+65535;n=Math.floor(a/65536);l=a-n*65536;a=u+n+65535;n=Math.floor(a/65536);u=a-n*65536;a=m+n+65535;n=Math.floor(a/65536);m=a-n*65536;a=f+n+65535;n=Math.floor(a/65536);f=a-n*65536;a=g+n+65535;n=Math.floor(a/65536);g=a-n*65536;a=y+n+65535;n=Math.floor(a/65536);y=a-n*65536;a=_+n+65535;n=Math.floor(a/65536);_=a-n*65536;a=v+n+65535;n=Math.floor(a/65536);v=a-n*65536;a=b+n+65535;n=Math.floor(a/65536);b=a-n*65536;a=w+n+65535;n=Math.floor(a/65536);w=a-n*65536;i+=n-1+37*(n-1);e[0]=i;e[1]=s;e[2]=o;e[3]=d;e[4]=p;e[5]=c;e[6]=l;e[7]=u;e[8]=m;e[9]=f;e[10]=g;e[11]=y;e[12]=_;e[13]=v;e[14]=b;e[15]=w}function S(e,t){M(e,t,t)}function inv25519(e,t){var r=gf();var a;for(a=0;a<16;a++)r[a]=t[a];for(a=253;a>=0;a--){S(r,r);if(a!==2&&a!==4)M(r,r,t)}for(a=0;a<16;a++)e[a]=r[a]}function pow2523(e,t){var r=gf();var a;for(a=0;a<16;a++)r[a]=t[a];for(a=250;a>=0;a--){S(r,r);if(a!==1)M(r,r,t)}for(a=0;a<16;a++)e[a]=r[a]}function crypto_scalarmult(e,t,r){var a=new Uint8Array(32);var n=new Float64Array(80),i,o;var d=gf(),p=gf(),c=gf(),l=gf(),u=gf(),m=gf();for(o=0;o<31;o++)a[o]=t[o];a[31]=t[31]&127|64;a[0]&=248;unpack25519(n,r);for(o=0;o<16;o++){p[o]=n[o];l[o]=d[o]=c[o]=0}d[0]=l[0]=1;for(o=254;o>=0;--o){i=a[o>>>3]>>>(o&7)&1;sel25519(d,p,i);sel25519(c,l,i);A(u,d,c);Z(d,d,c);A(c,p,l);Z(p,p,l);S(l,u);S(m,d);M(d,c,d);M(c,p,u);A(u,d,c);Z(d,d,c);S(p,d);Z(c,l,m);M(d,c,s);A(d,d,l);M(c,c,d);M(d,l,m);M(l,p,n);S(p,u);sel25519(d,p,i);sel25519(c,l,i)}for(o=0;o<16;o++){n[o+16]=d[o];n[o+32]=c[o];n[o+48]=p[o];n[o+64]=l[o]}var f=n.subarray(32);var g=n.subarray(16);inv25519(f,f);M(g,g,f);pack25519(e,g);return 0}function crypto_scalarmult_base(e,t){return crypto_scalarmult(e,t,a)}function crypto_box_keypair(e,t){randombytes(t,32);return crypto_scalarmult_base(e,t)}function crypto_box_beforenm(e,r,a){var n=new Uint8Array(32);crypto_scalarmult(n,a,r);return crypto_core_hsalsa20(e,t,n,u)}var m=crypto_secretbox;var f=crypto_secretbox_open;function crypto_box(e,t,r,a,n,i){var s=new Uint8Array(32);crypto_box_beforenm(s,n,i);return m(e,t,r,a,s)}function crypto_box_open(e,t,r,a,n,i){var s=new Uint8Array(32);crypto_box_beforenm(s,n,i);return f(e,t,r,a,s)}var g=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function crypto_hashblocks_hl(e,t,r,a){var n=new Int32Array(16),i=new Int32Array(16),s,o,d,p,c,l,u,m,f,y,_,v,b,w,E,R,T,O,N,C,k,I,x,B,P,D;var L=e[0],U=e[1],F=e[2],V=e[3],z=e[4],j=e[5],H=e[6],q=e[7],$=t[0],K=t[1],W=t[2],G=t[3],Y=t[4],J=t[5],X=t[6],Q=t[7];var ee=0;while(a>=128){for(N=0;N<16;N++){C=8*N+ee;n[N]=r[C+0]<<24|r[C+1]<<16|r[C+2]<<8|r[C+3];i[N]=r[C+4]<<24|r[C+5]<<16|r[C+6]<<8|r[C+7]}for(N=0;N<80;N++){s=L;o=U;d=F;p=V;c=z;l=j;u=H;m=q;f=$;y=K;_=W;v=G;b=Y;w=J;E=X;R=Q;k=q;I=Q;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=(z>>>14|Y<<32-14)^(z>>>18|Y<<32-18)^(Y>>>41-32|z<<32-(41-32));I=(Y>>>14|z<<32-14)^(Y>>>18|z<<32-18)^(z>>>41-32|Y<<32-(41-32));x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;k=z&j^~z&H;I=Y&J^~Y&X;x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;k=g[N*2];I=g[N*2+1];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;k=n[N%16];I=i[N%16];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;T=P&65535|D<<16;O=x&65535|B<<16;k=T;I=O;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=(L>>>28|$<<32-28)^($>>>34-32|L<<32-(34-32))^($>>>39-32|L<<32-(39-32));I=($>>>28|L<<32-28)^(L>>>34-32|$<<32-(34-32))^(L>>>39-32|$<<32-(39-32));x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;k=L&U^L&F^U&F;I=$&K^$&W^K&W;x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;m=P&65535|D<<16;R=x&65535|B<<16;k=p;I=v;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=T;I=O;x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;p=P&65535|D<<16;v=x&65535|B<<16;U=s;F=o;V=d;z=p;j=c;H=l;q=u;L=m;K=f;W=y;G=_;Y=v;J=b;X=w;Q=E;$=R;if(N%16===15){for(C=0;C<16;C++){k=n[C];I=i[C];x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=n[(C+9)%16];I=i[(C+9)%16];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;T=n[(C+1)%16];O=i[(C+1)%16];k=(T>>>1|O<<32-1)^(T>>>8|O<<32-8)^T>>>7;I=(O>>>1|T<<32-1)^(O>>>8|T<<32-8)^(O>>>7|T<<32-7);x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;T=n[(C+14)%16];O=i[(C+14)%16];k=(T>>>19|O<<32-19)^(O>>>61-32|T<<32-(61-32))^T>>>6;I=(O>>>19|T<<32-19)^(T>>>61-32|O<<32-(61-32))^(O>>>6|T<<32-6);x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;n[C]=P&65535|D<<16;i[C]=x&65535|B<<16}}}k=L;I=$;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=e[0];I=t[0];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;e[0]=L=P&65535|D<<16;t[0]=$=x&65535|B<<16;k=U;I=K;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=e[1];I=t[1];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;e[1]=U=P&65535|D<<16;t[1]=K=x&65535|B<<16;k=F;I=W;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=e[2];I=t[2];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;e[2]=F=P&65535|D<<16;t[2]=W=x&65535|B<<16;k=V;I=G;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=e[3];I=t[3];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;e[3]=V=P&65535|D<<16;t[3]=G=x&65535|B<<16;k=z;I=Y;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=e[4];I=t[4];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;e[4]=z=P&65535|D<<16;t[4]=Y=x&65535|B<<16;k=j;I=J;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=e[5];I=t[5];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;e[5]=j=P&65535|D<<16;t[5]=J=x&65535|B<<16;k=H;I=X;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=e[6];I=t[6];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;e[6]=H=P&65535|D<<16;t[6]=X=x&65535|B<<16;k=q;I=Q;x=I&65535;B=I>>>16;P=k&65535;D=k>>>16;k=e[7];I=t[7];x+=I&65535;B+=I>>>16;P+=k&65535;D+=k>>>16;B+=x>>>16;P+=B>>>16;D+=P>>>16;e[7]=q=P&65535|D<<16;t[7]=Q=x&65535|B<<16;ee+=128;a-=128}return a}function crypto_hash(e,t,r){var a=new Int32Array(8),n=new Int32Array(8),i=new Uint8Array(256),s,o=r;a[0]=1779033703;a[1]=3144134277;a[2]=1013904242;a[3]=2773480762;a[4]=1359893119;a[5]=2600822924;a[6]=528734635;a[7]=1541459225;n[0]=4089235720;n[1]=2227873595;n[2]=4271175723;n[3]=1595750129;n[4]=2917565137;n[5]=725511199;n[6]=4215389547;n[7]=327033209;crypto_hashblocks_hl(a,n,t,r);r%=128;for(s=0;s<r;s++)i[s]=t[o-r+s];i[r]=128;r=256-128*(r<112?1:0);i[r-9]=0;ts64(i,r-8,o/536870912|0,o<<3);crypto_hashblocks_hl(a,n,i,r);for(s=0;s<8;s++)ts64(e,8*s,a[s],n[s]);return 0}function add(e,t){var r=gf(),a=gf(),n=gf(),i=gf(),s=gf(),o=gf(),p=gf(),c=gf(),l=gf();Z(r,e[1],e[0]);Z(l,t[1],t[0]);M(r,r,l);A(a,e[0],e[1]);A(l,t[0],t[1]);M(a,a,l);M(n,e[3],t[3]);M(n,n,d);M(i,e[2],t[2]);A(i,i,i);Z(s,a,r);Z(o,i,n);A(p,i,n);A(c,a,r);M(e[0],s,o);M(e[1],c,p);M(e[2],p,o);M(e[3],s,c)}function cswap(e,t,r){var a;for(a=0;a<4;a++){sel25519(e[a],t[a],r)}}function pack(e,t){var r=gf(),a=gf(),n=gf();inv25519(n,t[2]);M(r,t[0],n);M(a,t[1],n);pack25519(e,a);e[31]^=par25519(r)<<7}function scalarmult(e,t,r){var a,s;set25519(e[0],n);set25519(e[1],i);set25519(e[2],i);set25519(e[3],n);for(s=255;s>=0;--s){a=r[s/8|0]>>(s&7)&1;cswap(e,t,a);add(t,e);add(e,e);cswap(e,t,a)}}function scalarbase(e,t){var r=[gf(),gf(),gf(),gf()];set25519(r[0],p);set25519(r[1],c);set25519(r[2],i);M(r[3],p,c);scalarmult(e,r,t)}function crypto_sign_keypair(e,t,r){var a=new Uint8Array(64);var n=[gf(),gf(),gf(),gf()];var i;if(!r)randombytes(t,32);crypto_hash(a,t,32);a[0]&=248;a[31]&=127;a[31]|=64;scalarbase(n,a);pack(e,n);for(i=0;i<32;i++)t[i+32]=e[i];return 0}var y=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function modL(e,t){var r,a,n,i;for(a=63;a>=32;--a){r=0;for(n=a-32,i=a-12;n<i;++n){t[n]+=r-16*t[a]*y[n-(a-32)];r=Math.floor((t[n]+128)/256);t[n]-=r*256}t[n]+=r;t[a]=0}r=0;for(n=0;n<32;n++){t[n]+=r-(t[31]>>4)*y[n];r=t[n]>>8;t[n]&=255}for(n=0;n<32;n++)t[n]-=r*y[n];for(a=0;a<32;a++){t[a+1]+=t[a]>>8;e[a]=t[a]&255}}function reduce(e){var t=new Float64Array(64),r;for(r=0;r<64;r++)t[r]=e[r];for(r=0;r<64;r++)e[r]=0;modL(e,t)}function crypto_sign(e,t,r,a){var n=new Uint8Array(64),i=new Uint8Array(64),s=new Uint8Array(64);var o,d,p=new Float64Array(64);var c=[gf(),gf(),gf(),gf()];crypto_hash(n,a,32);n[0]&=248;n[31]&=127;n[31]|=64;var l=r+64;for(o=0;o<r;o++)e[64+o]=t[o];for(o=0;o<32;o++)e[32+o]=n[32+o];crypto_hash(s,e.subarray(32),r+32);reduce(s);scalarbase(c,s);pack(e,c);for(o=32;o<64;o++)e[o]=a[o];crypto_hash(i,e,r+64);reduce(i);for(o=0;o<64;o++)p[o]=0;for(o=0;o<32;o++)p[o]=s[o];for(o=0;o<32;o++){for(d=0;d<32;d++){p[o+d]+=i[o]*n[d]}}modL(e.subarray(32),p);return l}function unpackneg(e,t){var r=gf(),a=gf(),s=gf(),d=gf(),p=gf(),c=gf(),u=gf();set25519(e[2],i);unpack25519(e[1],t);S(s,e[1]);M(d,s,o);Z(s,s,e[2]);A(d,e[2],d);S(p,d);S(c,p);M(u,c,p);M(r,u,s);M(r,r,d);pow2523(r,r);M(r,r,s);M(r,r,d);M(r,r,d);M(e[0],r,d);S(a,e[0]);M(a,a,d);if(neq25519(a,s))M(e[0],e[0],l);S(a,e[0]);M(a,a,d);if(neq25519(a,s))return-1;if(par25519(e[0])===t[31]>>7)Z(e[0],n,e[0]);M(e[3],e[0],e[1]);return 0}function crypto_sign_open(e,t,r,a){var n;var i=new Uint8Array(32),s=new Uint8Array(64);var o=[gf(),gf(),gf(),gf()],d=[gf(),gf(),gf(),gf()];if(r<64)return-1;if(unpackneg(d,a))return-1;for(n=0;n<r;n++)e[n]=t[n];for(n=0;n<32;n++)e[n+32]=a[n];crypto_hash(s,e,r);reduce(s);scalarmult(o,d,s);scalarbase(d,t.subarray(32));add(o,d);pack(i,o);r-=64;if(crypto_verify_32(t,0,i,0)){for(n=0;n<r;n++)e[n]=0;return-1}for(n=0;n<r;n++)e[n]=t[n+64];return r}var _=32,v=24,b=32,w=16,E=32,R=32,T=32,O=32,N=32,C=v,k=b,I=w,x=64,B=32,P=64,D=32,L=64;e.lowlevel={crypto_core_hsalsa20:crypto_core_hsalsa20,crypto_stream_xor:crypto_stream_xor,crypto_stream:crypto_stream,crypto_stream_salsa20_xor:crypto_stream_salsa20_xor,crypto_stream_salsa20:crypto_stream_salsa20,crypto_onetimeauth:crypto_onetimeauth,crypto_onetimeauth_verify:crypto_onetimeauth_verify,crypto_verify_16:crypto_verify_16,crypto_verify_32:crypto_verify_32,crypto_secretbox:crypto_secretbox,crypto_secretbox_open:crypto_secretbox_open,crypto_scalarmult:crypto_scalarmult,crypto_scalarmult_base:crypto_scalarmult_base,crypto_box_beforenm:crypto_box_beforenm,crypto_box_afternm:m,crypto_box:crypto_box,crypto_box_open:crypto_box_open,crypto_box_keypair:crypto_box_keypair,crypto_hash:crypto_hash,crypto_sign:crypto_sign,crypto_sign_keypair:crypto_sign_keypair,crypto_sign_open:crypto_sign_open,crypto_secretbox_KEYBYTES:_,crypto_secretbox_NONCEBYTES:v,crypto_secretbox_ZEROBYTES:b,crypto_secretbox_BOXZEROBYTES:w,crypto_scalarmult_BYTES:E,crypto_scalarmult_SCALARBYTES:R,crypto_box_PUBLICKEYBYTES:T,crypto_box_SECRETKEYBYTES:O,crypto_box_BEFORENMBYTES:N,crypto_box_NONCEBYTES:C,crypto_box_ZEROBYTES:k,crypto_box_BOXZEROBYTES:I,crypto_sign_BYTES:x,crypto_sign_PUBLICKEYBYTES:B,crypto_sign_SECRETKEYBYTES:P,crypto_sign_SEEDBYTES:D,crypto_hash_BYTES:L,gf:gf,D:o,L:y,pack25519:pack25519,unpack25519:unpack25519,M:M,A:A,S:S,Z:Z,pow2523:pow2523,add:add,set25519:set25519,modL:modL,scalarmult:scalarmult,scalarbase:scalarbase};function checkLengths(e,t){if(e.length!==_)throw new Error("bad key size");if(t.length!==v)throw new Error("bad nonce size")}function checkBoxLengths(e,t){if(e.length!==T)throw new Error("bad public key size");if(t.length!==O)throw new Error("bad secret key size")}function checkArrayTypes(){for(var e=0;e<arguments.length;e++){if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}}function cleanup(e){for(var t=0;t<e.length;t++)e[t]=0}e.randomBytes=function(e){var t=new Uint8Array(e);randombytes(t,e);return t};e.secretbox=function(e,t,r){checkArrayTypes(e,t,r);checkLengths(r,t);var a=new Uint8Array(b+e.length);var n=new Uint8Array(a.length);for(var i=0;i<e.length;i++)a[i+b]=e[i];crypto_secretbox(n,a,a.length,t,r);return n.subarray(w)};e.secretbox.open=function(e,t,r){checkArrayTypes(e,t,r);checkLengths(r,t);var a=new Uint8Array(w+e.length);var n=new Uint8Array(a.length);for(var i=0;i<e.length;i++)a[i+w]=e[i];if(a.length<32)return null;if(crypto_secretbox_open(n,a,a.length,t,r)!==0)return null;return n.subarray(b)};e.secretbox.keyLength=_;e.secretbox.nonceLength=v;e.secretbox.overheadLength=w;e.scalarMult=function(e,t){checkArrayTypes(e,t);if(e.length!==R)throw new Error("bad n size");if(t.length!==E)throw new Error("bad p size");var r=new Uint8Array(E);crypto_scalarmult(r,e,t);return r};e.scalarMult.base=function(e){checkArrayTypes(e);if(e.length!==R)throw new Error("bad n size");var t=new Uint8Array(E);crypto_scalarmult_base(t,e);return t};e.scalarMult.scalarLength=R;e.scalarMult.groupElementLength=E;e.box=function(t,r,a,n){var i=e.box.before(a,n);return e.secretbox(t,r,i)};e.box.before=function(e,t){checkArrayTypes(e,t);checkBoxLengths(e,t);var r=new Uint8Array(N);crypto_box_beforenm(r,e,t);return r};e.box.after=e.secretbox;e.box.open=function(t,r,a,n){var i=e.box.before(a,n);return e.secretbox.open(t,r,i)};e.box.open.after=e.secretbox.open;e.box.keyPair=function(){var e=new Uint8Array(T);var t=new Uint8Array(O);crypto_box_keypair(e,t);return{publicKey:e,secretKey:t}};e.box.keyPair.fromSecretKey=function(e){checkArrayTypes(e);if(e.length!==O)throw new Error("bad secret key size");var t=new Uint8Array(T);crypto_scalarmult_base(t,e);return{publicKey:t,secretKey:new Uint8Array(e)}};e.box.publicKeyLength=T;e.box.secretKeyLength=O;e.box.sharedKeyLength=N;e.box.nonceLength=C;e.box.overheadLength=e.secretbox.overheadLength;e.sign=function(e,t){checkArrayTypes(e,t);if(t.length!==P)throw new Error("bad secret key size");var r=new Uint8Array(x+e.length);crypto_sign(r,e,e.length,t);return r};e.sign.open=function(e,t){checkArrayTypes(e,t);if(t.length!==B)throw new Error("bad public key size");var r=new Uint8Array(e.length);var a=crypto_sign_open(r,e,e.length,t);if(a<0)return null;var n=new Uint8Array(a);for(var i=0;i<n.length;i++)n[i]=r[i];return n};e.sign.detached=function(t,r){var a=e.sign(t,r);var n=new Uint8Array(x);for(var i=0;i<n.length;i++)n[i]=a[i];return n};e.sign.detached.verify=function(e,t,r){checkArrayTypes(e,t,r);if(t.length!==x)throw new Error("bad signature size");if(r.length!==B)throw new Error("bad public key size");var a=new Uint8Array(x+e.length);var n=new Uint8Array(x+e.length);var i;for(i=0;i<x;i++)a[i]=t[i];for(i=0;i<e.length;i++)a[i+x]=e[i];return crypto_sign_open(n,a,a.length,r)>=0};e.sign.keyPair=function(){var e=new Uint8Array(B);var t=new Uint8Array(P);crypto_sign_keypair(e,t);return{publicKey:e,secretKey:t}};e.sign.keyPair.fromSecretKey=function(e){checkArrayTypes(e);if(e.length!==P)throw new Error("bad secret key size");var t=new Uint8Array(B);for(var r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}};e.sign.keyPair.fromSeed=function(e){checkArrayTypes(e);if(e.length!==D)throw new Error("bad seed size");var t=new Uint8Array(B);var r=new Uint8Array(P);for(var a=0;a<32;a++)r[a]=e[a];crypto_sign_keypair(t,r,true);return{publicKey:t,secretKey:r}};e.sign.publicKeyLength=B;e.sign.secretKeyLength=P;e.sign.seedLength=D;e.sign.signatureLength=x;e.hash=function(e){checkArrayTypes(e);var t=new Uint8Array(L);crypto_hash(t,e,e.length);return t};e.hash.hashLength=L;e.verify=function(e,t){checkArrayTypes(e,t);if(e.length===0||t.length===0)return false;if(e.length!==t.length)return false;return vn(e,0,t,0,e.length)===0?true:false};e.setPRNG=function(e){randombytes=e};(function(){var t=typeof self!=="undefined"?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){var a=65536;e.setPRNG((function(e,r){var n,i=new Uint8Array(r);for(n=0;n<r;n+=a){t.getRandomValues(i.subarray(n,n+Math.min(r-n,a)))}for(n=0;n<r;n++)e[n]=i[n];cleanup(i)}))}else if(true){t=r(6982);if(t&&t.randomBytes){e.setPRNG((function(e,r){var a,n=t.randomBytes(r);for(a=0;a<r;a++)e[a]=n[a];cleanup(n)}))}}})()})(true&&e.exports?e.exports:self.nacl=self.nacl||{})},656:e=>{"use strict";function isValidUTF8(e){const t=e.length;let r=0;while(r<t){if((e[r]&128)===0){r++}else if((e[r]&224)===192){if(r+1===t||(e[r+1]&192)!==128||(e[r]&254)===192){return false}r+=2}else if((e[r]&240)===224){if(r+2>=t||(e[r+1]&192)!==128||(e[r+2]&192)!==128||e[r]===224&&(e[r+1]&224)===128||e[r]===237&&(e[r+1]&224)===160){return false}r+=3}else if((e[r]&248)===240){if(r+3>=t||(e[r+1]&192)!==128||(e[r+2]&192)!==128||(e[r+3]&192)!==128||e[r]===240&&(e[r+1]&240)===128||e[r]===244&&e[r+1]>143||e[r]>244){return false}r+=4}else{return false}}return true}e.exports=isValidUTF8},8952:(e,t,r)=>{"use strict";try{e.exports=r(1234)(__dirname)}catch(t){e.exports=r(656)}},3342:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"v1",{enumerable:true,get:function(){return a.default}});Object.defineProperty(t,"v3",{enumerable:true,get:function(){return n.default}});Object.defineProperty(t,"v4",{enumerable:true,get:function(){return i.default}});Object.defineProperty(t,"v5",{enumerable:true,get:function(){return s.default}});Object.defineProperty(t,"NIL",{enumerable:true,get:function(){return o.default}});Object.defineProperty(t,"version",{enumerable:true,get:function(){return d.default}});Object.defineProperty(t,"validate",{enumerable:true,get:function(){return p.default}});Object.defineProperty(t,"stringify",{enumerable:true,get:function(){return c.default}});Object.defineProperty(t,"parse",{enumerable:true,get:function(){return l.default}});var a=_interopRequireDefault(r(9769));var n=_interopRequireDefault(r(2087));var i=_interopRequireDefault(r(3558));var s=_interopRequireDefault(r(2517));var o=_interopRequireDefault(r(6785));var d=_interopRequireDefault(r(122));var p=_interopRequireDefault(r(1802));var c=_interopRequireDefault(r(7715));var l=_interopRequireDefault(r(3917));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}},2090:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(6982));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function md5(e){if(Array.isArray(e)){e=Buffer.from(e)}else if(typeof e==="string"){e=Buffer.from(e,"utf8")}return a.default.createHash("md5").update(e).digest()}var n=md5;t["default"]=n},6785:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var r="00000000-0000-0000-0000-000000000000";t["default"]=r},3917:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(1802));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function parse(e){if(!(0,a.default)(e)){throw TypeError("Invalid UUID")}let t;const r=new Uint8Array(16);r[0]=(t=parseInt(e.slice(0,8),16))>>>24;r[1]=t>>>16&255;r[2]=t>>>8&255;r[3]=t&255;r[4]=(t=parseInt(e.slice(9,13),16))>>>8;r[5]=t&255;r[6]=(t=parseInt(e.slice(14,18),16))>>>8;r[7]=t&255;r[8]=(t=parseInt(e.slice(19,23),16))>>>8;r[9]=t&255;r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255;r[11]=t/4294967296&255;r[12]=t>>>24&255;r[13]=t>>>16&255;r[14]=t>>>8&255;r[15]=t&255;return r}var n=parse;t["default"]=n},33:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;t["default"]=r},9467:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=rng;var a=_interopRequireDefault(r(6982));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const n=new Uint8Array(256);let i=n.length;function rng(){if(i>n.length-16){a.default.randomFillSync(n);i=0}return n.slice(i,i+=16)}},597:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(6982));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function sha1(e){if(Array.isArray(e)){e=Buffer.from(e)}else if(typeof e==="string"){e=Buffer.from(e,"utf8")}return a.default.createHash("sha1").update(e).digest()}var n=sha1;t["default"]=n},7715:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(1802));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const n=[];for(let e=0;e<256;++e){n.push((e+256).toString(16).substr(1))}function stringify(e,t=0){const r=(n[e[t+0]]+n[e[t+1]]+n[e[t+2]]+n[e[t+3]]+"-"+n[e[t+4]]+n[e[t+5]]+"-"+n[e[t+6]]+n[e[t+7]]+"-"+n[e[t+8]]+n[e[t+9]]+"-"+n[e[t+10]]+n[e[t+11]]+n[e[t+12]]+n[e[t+13]]+n[e[t+14]]+n[e[t+15]]).toLowerCase();if(!(0,a.default)(r)){throw TypeError("Stringified UUID is invalid")}return r}var i=stringify;t["default"]=i},9769:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(9467));var n=_interopRequireDefault(r(7715));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}let i;let s;let o=0;let d=0;function v1(e,t,r){let p=t&&r||0;const c=t||new Array(16);e=e||{};let l=e.node||i;let u=e.clockseq!==undefined?e.clockseq:s;if(l==null||u==null){const t=e.random||(e.rng||a.default)();if(l==null){l=i=[t[0]|1,t[1],t[2],t[3],t[4],t[5]]}if(u==null){u=s=(t[6]<<8|t[7])&16383}}let m=e.msecs!==undefined?e.msecs:Date.now();let f=e.nsecs!==undefined?e.nsecs:d+1;const g=m-o+(f-d)/1e4;if(g<0&&e.clockseq===undefined){u=u+1&16383}if((g<0||m>o)&&e.nsecs===undefined){f=0}if(f>=1e4){throw new Error("uuid.v1(): Can't create more than 10M uuids/sec")}o=m;d=f;s=u;m+=122192928e5;const y=((m&268435455)*1e4+f)%4294967296;c[p++]=y>>>24&255;c[p++]=y>>>16&255;c[p++]=y>>>8&255;c[p++]=y&255;const _=m/4294967296*1e4&268435455;c[p++]=_>>>8&255;c[p++]=_&255;c[p++]=_>>>24&15|16;c[p++]=_>>>16&255;c[p++]=u>>>8|128;c[p++]=u&255;for(let e=0;e<6;++e){c[p+e]=l[e]}return t||(0,n.default)(c)}var p=v1;t["default"]=p},2087:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(9780));var n=_interopRequireDefault(r(2090));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const i=(0,a.default)("v3",48,n.default);var s=i;t["default"]=s},9780:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=_default;t.URL=t.DNS=void 0;var a=_interopRequireDefault(r(7715));var n=_interopRequireDefault(r(3917));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function stringToBytes(e){e=unescape(encodeURIComponent(e));const t=[];for(let r=0;r<e.length;++r){t.push(e.charCodeAt(r))}return t}const i="6ba7b810-9dad-11d1-80b4-00c04fd430c8";t.DNS=i;const s="6ba7b811-9dad-11d1-80b4-00c04fd430c8";t.URL=s;function _default(e,t,r){function generateUUID(e,i,s,o){if(typeof e==="string"){e=stringToBytes(e)}if(typeof i==="string"){i=(0,n.default)(i)}if(i.length!==16){throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)")}let d=new Uint8Array(16+e.length);d.set(i);d.set(e,i.length);d=r(d);d[6]=d[6]&15|t;d[8]=d[8]&63|128;if(s){o=o||0;for(let e=0;e<16;++e){s[o+e]=d[e]}return s}return(0,a.default)(d)}try{generateUUID.name=e}catch(e){}generateUUID.DNS=i;generateUUID.URL=s;return generateUUID}},3558:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(9467));var n=_interopRequireDefault(r(7715));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function v4(e,t,r){e=e||{};const i=e.random||(e.rng||a.default)();i[6]=i[6]&15|64;i[8]=i[8]&63|128;if(t){r=r||0;for(let e=0;e<16;++e){t[r+e]=i[e]}return t}return(0,n.default)(i)}var i=v4;t["default"]=i},2517:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(9780));var n=_interopRequireDefault(r(597));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const i=(0,a.default)("v5",80,n.default);var s=i;t["default"]=s},1802:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(33));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function validate(e){return typeof e==="string"&&a.default.test(e)}var n=validate;t["default"]=n},122:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var a=_interopRequireDefault(r(1802));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function version(e){if(!(0,a.default)(e)){throw TypeError("Invalid UUID")}return parseInt(e.substr(14,1),16)}var n=version;t["default"]=n},2324:e=>{"use strict";var t={};e.exports=t;function sign(e){return e<0?-1:1}function evenRound(e){if(e%1===.5&&(e&1)===0){return Math.floor(e)}else{return Math.round(e)}}function createNumberConversion(e,t){if(!t.unsigned){--e}const r=t.unsigned?0:-Math.pow(2,e);const a=Math.pow(2,e)-1;const n=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e);const i=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,s){if(!s)s={};let o=+e;if(s.enforceRange){if(!Number.isFinite(o)){throw new TypeError("Argument is not a finite number")}o=sign(o)*Math.floor(Math.abs(o));if(o<r||o>a){throw new TypeError("Argument is not in byte range")}return o}if(!isNaN(o)&&s.clamp){o=evenRound(o);if(o<r)o=r;if(o>a)o=a;return o}if(!Number.isFinite(o)||o===0){return 0}o=sign(o)*Math.floor(Math.abs(o));o=o%n;if(!t.unsigned&&o>=i){return o-n}else if(t.unsigned){if(o<0){o+=n}else if(o===-0){return 0}}return o}}t["void"]=function(){return undefined};t["boolean"]=function(e){return!!e};t["byte"]=createNumberConversion(8,{unsigned:false});t["octet"]=createNumberConversion(8,{unsigned:true});t["short"]=createNumberConversion(16,{unsigned:false});t["unsigned short"]=createNumberConversion(16,{unsigned:true});t["long"]=createNumberConversion(32,{unsigned:false});t["unsigned long"]=createNumberConversion(32,{unsigned:true});t["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});t["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});t["double"]=function(e){const t=+e;if(!Number.isFinite(t)){throw new TypeError("Argument is not a finite floating-point value")}return t};t["unrestricted double"]=function(e){const t=+e;if(isNaN(t)){throw new TypeError("Argument is NaN")}return t};t["float"]=t["double"];t["unrestricted float"]=t["unrestricted double"];t["DOMString"]=function(e,t){if(!t)t={};if(t.treatNullAsEmptyString&&e===null){return""}return String(e)};t["ByteString"]=function(e,t){const r=String(e);let a=undefined;for(let e=0;(a=r.codePointAt(e))!==undefined;++e){if(a>255){throw new TypeError("Argument is not a valid bytestring")}}return r};t["USVString"]=function(e){const t=String(e);const r=t.length;const a=[];for(let e=0;e<r;++e){const n=t.charCodeAt(e);if(n<55296||n>57343){a.push(String.fromCodePoint(n))}else if(56320<=n&&n<=57343){a.push(String.fromCodePoint(65533))}else{if(e===r-1){a.push(String.fromCodePoint(65533))}else{const r=t.charCodeAt(e+1);if(56320<=r&&r<=57343){const t=n&1023;const i=r&1023;a.push(String.fromCodePoint((2<<15)+(2<<9)*t+i));++e}else{a.push(String.fromCodePoint(65533))}}}}return a.join("")};t["Date"]=function(e,t){if(!(e instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(e)){return undefined}return e};t["RegExp"]=function(e,t){if(!(e instanceof RegExp)){e=new RegExp(e)}return e}},6071:(e,t,r)=>{"use strict";const a=r(4223);t.implementation=class URLImpl{constructor(e){const t=e[0];const r=e[1];let n=null;if(r!==undefined){n=a.basicURLParse(r);if(n==="failure"){throw new TypeError("Invalid base URL")}}const i=a.basicURLParse(t,{baseURL:n});if(i==="failure"){throw new TypeError("Invalid URL")}this._url=i}get href(){return a.serializeURL(this._url)}set href(e){const t=a.basicURLParse(e);if(t==="failure"){throw new TypeError("Invalid URL")}this._url=t}get origin(){return a.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){a.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){if(a.cannotHaveAUsernamePasswordPort(this._url)){return}a.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){if(a.cannotHaveAUsernamePasswordPort(this._url)){return}a.setThePassword(this._url,e)}get host(){const e=this._url;if(e.host===null){return""}if(e.port===null){return a.serializeHost(e.host)}return a.serializeHost(e.host)+":"+a.serializeInteger(e.port)}set host(e){if(this._url.cannotBeABaseURL){return}a.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return a.serializeHost(this._url.host)}set hostname(e){if(this._url.cannotBeABaseURL){return}a.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return a.serializeInteger(this._url.port)}set port(e){if(a.cannotHaveAUsernamePasswordPort(this._url)){return}if(e===""){this._url.port=null}else{a.basicURLParse(e,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(e){if(this._url.cannotBeABaseURL){return}this._url.path=[];a.basicURLParse(e,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(e){const t=this._url;if(e===""){t.query=null;return}const r=e[0]==="?"?e.substring(1):e;t.query="";a.basicURLParse(r,{url:t,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}const t=e[0]==="#"?e.substring(1):e;this._url.fragment="";a.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},7640:(e,t,r)=>{"use strict";const a=r(2324);const n=r(4700);const i=r(6071);const s=n.implSymbol;function URL(t){if(!this||this[s]||!(this instanceof URL)){throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.")}const r=[];for(let e=0;e<arguments.length&&e<2;++e){r[e]=arguments[e]}r[0]=a["USVString"](r[0]);if(r[1]!==undefined){r[1]=a["USVString"](r[1])}e.exports.setup(this,r)}URL.prototype.toJSON=function toJSON(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}const t=[];for(let e=0;e<arguments.length&&e<0;++e){t[e]=arguments[e]}return this[s].toJSON.apply(this[s],t)};Object.defineProperty(URL.prototype,"href",{get(){return this[s].href},set(e){e=a["USVString"](e);this[s].href=e},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[s].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[s].protocol},set(e){e=a["USVString"](e);this[s].protocol=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[s].username},set(e){e=a["USVString"](e);this[s].username=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[s].password},set(e){e=a["USVString"](e);this[s].password=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[s].host},set(e){e=a["USVString"](e);this[s].host=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[s].hostname},set(e){e=a["USVString"](e);this[s].hostname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[s].port},set(e){e=a["USVString"](e);this[s].port=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[s].pathname},set(e){e=a["USVString"](e);this[s].pathname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[s].search},set(e){e=a["USVString"](e);this[s].search=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[s].hash},set(e){e=a["USVString"](e);this[s].hash=e},enumerable:true,configurable:true});e.exports={is(e){return!!e&&e[s]instanceof i.implementation},create(e,t){let r=Object.create(URL.prototype);this.setup(r,e,t);return r},setup(e,t,r){if(!r)r={};r.wrapper=e;e[s]=new i.implementation(t,r);e[s][n.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},969:(e,t,r)=>{"use strict";t.URL=r(7640)["interface"];t.serializeURL=r(4223).serializeURL;t.serializeURLOrigin=r(4223).serializeURLOrigin;t.basicURLParse=r(4223).basicURLParse;t.setTheUsername=r(4223).setTheUsername;t.setThePassword=r(4223).setThePassword;t.serializeHost=r(4223).serializeHost;t.serializeInteger=r(4223).serializeInteger;t.parseURL=r(4223).parseURL},4223:(e,t,r)=>{"use strict";const a=r(4876);const n=r(3979);const i={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const s=Symbol("failure");function countSymbols(e){return a.ucs2.decode(e).length}function at(e,t){const r=e[t];return isNaN(r)?undefined:String.fromCodePoint(r)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIAlphanumeric(e){return isASCIIAlpha(e)||isASCIIDigit(e)}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return e==="."||e.toLowerCase()==="%2e"}function isDoubleDot(e){e=e.toLowerCase();return e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function isWindowsDriveLetterCodePoints(e,t){return isASCIIAlpha(e)&&(t===58||t===124)}function isWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function isNormalizedWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&e[1]===":"}function containsForbiddenHostCodePoint(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function isSpecialScheme(e){return i[e]!==undefined}function isSpecial(e){return isSpecialScheme(e.scheme)}function defaultPort(e){return i[e]}function percentEncode(e){let t=e.toString(16).toUpperCase();if(t.length===1){t="0"+t}return"%"+t}function utf8PercentEncode(e){const t=new Buffer(e);let r="";for(let e=0;e<t.length;++e){r+=percentEncode(t[e])}return r}function utf8PercentDecode(e){const t=new Buffer(e);const r=[];for(let e=0;e<t.length;++e){if(t[e]!==37){r.push(t[e])}else if(t[e]===37&&isASCIIHex(t[e+1])&&isASCIIHex(t[e+2])){r.push(parseInt(t.slice(e+1,e+3).toString(),16));e+=2}else{r.push(t[e])}}return new Buffer(r).toString()}function isC0ControlPercentEncode(e){return e<=31||e>126}const o=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||o.has(e)}const d=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||d.has(e)}function percentEncodeChar(e,t){const r=String.fromCodePoint(e);if(t(e)){return utf8PercentEncode(r)}return r}function parseIPv4Number(e){let t=10;if(e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"){e=e.substring(2);t=16}else if(e.length>=2&&e.charAt(0)==="0"){e=e.substring(1);t=8}if(e===""){return 0}const r=t===10?/[^0-9]/:t===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(r.test(e)){return s}return parseInt(e,t)}function parseIPv4(e){const t=e.split(".");if(t[t.length-1]===""){if(t.length>1){t.pop()}}if(t.length>4){return e}const r=[];for(const a of t){if(a===""){return e}const t=parseIPv4Number(a);if(t===s){return e}r.push(t)}for(let e=0;e<r.length-1;++e){if(r[e]>255){return s}}if(r[r.length-1]>=Math.pow(256,5-r.length)){return s}let a=r.pop();let n=0;for(const e of r){a+=e*Math.pow(256,3-n);++n}return a}function serializeIPv4(e){let t="";let r=e;for(let e=1;e<=4;++e){t=String(r%256)+t;if(e!==4){t="."+t}r=Math.floor(r/256)}return t}function parseIPv6(e){const t=[0,0,0,0,0,0,0,0];let r=0;let n=null;let i=0;e=a.ucs2.decode(e);if(e[i]===58){if(e[i+1]!==58){return s}i+=2;++r;n=r}while(i<e.length){if(r===8){return s}if(e[i]===58){if(n!==null){return s}++i;++r;n=r;continue}let a=0;let o=0;while(o<4&&isASCIIHex(e[i])){a=a*16+parseInt(at(e,i),16);++i;++o}if(e[i]===46){if(o===0){return s}i-=o;if(r>6){return s}let a=0;while(e[i]!==undefined){let n=null;if(a>0){if(e[i]===46&&a<4){++i}else{return s}}if(!isASCIIDigit(e[i])){return s}while(isASCIIDigit(e[i])){const t=parseInt(at(e,i));if(n===null){n=t}else if(n===0){return s}else{n=n*10+t}if(n>255){return s}++i}t[r]=t[r]*256+n;++a;if(a===2||a===4){++r}}if(a!==4){return s}break}else if(e[i]===58){++i;if(e[i]===undefined){return s}}else if(e[i]!==undefined){return s}t[r]=a;++r}if(n!==null){let e=r-n;r=7;while(r!==0&&e>0){const a=t[n+e-1];t[n+e-1]=t[r];t[r]=a;--r;--e}}else if(n===null&&r!==8){return s}return t}function serializeIPv6(e){let t="";const r=findLongestZeroSequence(e);const a=r.idx;let n=false;for(let r=0;r<=7;++r){if(n&&e[r]===0){continue}else if(n){n=false}if(a===r){const e=r===0?"::":":";t+=e;n=true;continue}t+=e[r].toString(16);if(r!==7){t+=":"}}return t}function parseHost(e,t){if(e[0]==="["){if(e[e.length-1]!=="]"){return s}return parseIPv6(e.substring(1,e.length-1))}if(!t){return parseOpaqueHost(e)}const r=utf8PercentDecode(e);const a=n.toASCII(r,false,n.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(a===null){return s}if(containsForbiddenHostCodePoint(a)){return s}const i=parseIPv4(a);if(typeof i==="number"||i===s){return i}return a}function parseOpaqueHost(e){if(containsForbiddenHostCodePointExcludingPercent(e)){return s}let t="";const r=a.ucs2.decode(e);for(let e=0;e<r.length;++e){t+=percentEncodeChar(r[e],isC0ControlPercentEncode)}return t}function findLongestZeroSequence(e){let t=null;let r=1;let a=null;let n=0;for(let i=0;i<e.length;++i){if(e[i]!==0){if(n>r){t=a;r=n}a=null;n=0}else{if(a===null){a=i}++n}}if(n>r){t=a;r=n}return{idx:t,len:r}}function serializeHost(e){if(typeof e==="number"){return serializeIPv4(e)}if(e instanceof Array){return"["+serializeIPv6(e)+"]"}return e}function trimControlChars(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function trimTabAndNewline(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function shortenPath(e){const t=e.path;if(t.length===0){return}if(e.scheme==="file"&&t.length===1&&isNormalizedWindowsDriveLetter(t[0])){return}t.pop()}function includesCredentials(e){return e.username!==""||e.password!==""}function cannotHaveAUsernamePasswordPort(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function isNormalizedWindowsDriveLetter(e){return/^[A-Za-z]:$/.test(e)}function URLStateMachine(e,t,r,n,i){this.pointer=0;this.input=e;this.base=t||null;this.encodingOverride=r||"utf-8";this.stateOverride=i;this.url=n;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const e=trimControlChars(this.input);if(e!==this.input){this.parseError=true}this.input=e}const o=trimTabAndNewline(this.input);if(o!==this.input){this.parseError=true}this.input=o;this.state=i||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=a.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer];const t=isNaN(e)?undefined:String.fromCodePoint(e);const r=this["parse "+this.state](e,t);if(!r){break}else if(r===s){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(e,t){if(isASCIIAlpha(e)){this.buffer+=t.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return s}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(e,t){if(isASCIIAlphanumeric(e)||e===43||e===45||e===46){this.buffer+=t.toLowerCase()}else if(e===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return s}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(e){if(this.base===null||this.base.cannotBeABaseURL&&e!==35){return s}else if(this.base.cannotBeABaseURL&&e===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(e){if(e===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(e){this.url.scheme=this.base.scheme;if(isNaN(e)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===47){this.state="relative slash"}else if(e===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&e===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(e){if(isSpecial(this.url)&&(e===47||e===92)){if(e===92){this.parseError=true}this.state="special authority ignore slashes"}else if(e===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(e){if(e!==47&&e!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(e,t){if(e===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const e=countSymbols(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(e===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const r=percentEncodeChar(e,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=r}else{this.url.username+=r}}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return s}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=t}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(e,t){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(e===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return s}const e=parseHost(this.buffer,isSpecial(this.url));if(e===s){return s}this.url.host=e;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return s}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const e=parseHost(this.buffer,isSpecial(this.url));if(e===s){return s}this.url.host=e;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(e===91){this.arrFlag=true}else if(e===93){this.arrFlag=false}this.buffer+=t}return true};URLStateMachine.prototype["parse port"]=function parsePort(e,t){if(isASCIIDigit(e)){this.buffer+=t}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1){this.parseError=true;return s}this.url.port=e===defaultPort(this.url.scheme)?null:e;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return s}return true};const p=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(e){this.url.scheme="file";if(e===47||e===92){if(e===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(e)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!p.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(e){if(e===47||e===92){if(e===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(e,t){if(isNaN(e)||e===47||e===92||e===63||e===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===s){return s}if(e==="localhost"){e=""}this.url.host=e;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=t}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(e){if(isSpecial(this.url)){if(e===92){this.parseError=true}this.state="path";if(e!==47&&e!==92){--this.pointer}}else if(!this.stateOverride&&e===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&e===35){this.url.fragment="";this.state="fragment"}else if(e!==undefined){this.state="path";if(e!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(e){if(isNaN(e)||e===47||isSpecial(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(isSpecial(this.url)&&e===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(e===undefined||e===63||e===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(e===63){this.url.query="";this.state="query"}if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(e,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(e){if(e===63){this.url.query="";this.state="query"}else if(e===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(e)&&e!==37){this.parseError=true}if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(e)){this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(e,t){if(isNaN(e)||!this.stateOverride&&e===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e){if(t[e]<33||t[e]>126||t[e]===34||t[e]===35||t[e]===60||t[e]===62){this.url.query+=percentEncode(t[e])}else{this.url.query+=String.fromCodePoint(t[e])}}this.buffer="";if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=t}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(e){if(isNaN(e)){}else if(e===0){this.parseError=true}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode)}return true};function serializeURL(e,t){let r=e.scheme+":";if(e.host!==null){r+="//";if(e.username!==""||e.password!==""){r+=e.username;if(e.password!==""){r+=":"+e.password}r+="@"}r+=serializeHost(e.host);if(e.port!==null){r+=":"+e.port}}else if(e.host===null&&e.scheme==="file"){r+="//"}if(e.cannotBeABaseURL){r+=e.path[0]}else{for(const t of e.path){r+="/"+t}}if(e.query!==null){r+="?"+e.query}if(!t&&e.fragment!==null){r+="#"+e.fragment}return r}function serializeOrigin(e){let t=e.scheme+"://";t+=serializeHost(e.host);if(e.port!==null){t+=":"+e.port}return t}e.exports.serializeURL=serializeURL;e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}};e.exports.basicURLParse=function(e,t){if(t===undefined){t={}}const r=new URLStateMachine(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);if(r.failure){return"failure"}return r.url};e.exports.setTheUsername=function(e,t){e.username="";const r=a.ucs2.decode(t);for(let t=0;t<r.length;++t){e.username+=percentEncodeChar(r[t],isUserinfoPercentEncode)}};e.exports.setThePassword=function(e,t){e.password="";const r=a.ucs2.decode(t);for(let t=0;t<r.length;++t){e.password+=percentEncodeChar(r[t],isUserinfoPercentEncode)}};e.exports.serializeHost=serializeHost;e.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;e.exports.serializeInteger=function(e){return String(e)};e.exports.parseURL=function(t,r){if(r===undefined){r={}}return e.exports.basicURLParse(t,{baseURL:r.baseURL,encodingOverride:r.encodingOverride})}},4700:e=>{"use strict";e.exports.mixin=function mixin(e,t){const r=Object.getOwnPropertyNames(t);for(let a=0;a<r.length;++a){Object.defineProperty(e,r[a],Object.getOwnPropertyDescriptor(t,r[a]))}};e.exports.wrapperSymbol=Symbol("wrapper");e.exports.implSymbol=Symbol("impl");e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]};e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},8310:(e,t,r)=>{"use strict";const a=r(9013);a.createWebSocketStream=r(6448);a.Server=r(7733);a.Receiver=r(3433);a.Sender=r(7657);a.WebSocket=a;a.WebSocketServer=a.Server;e.exports=a},4719:(e,t,r)=>{"use strict";const{EMPTY_BUFFER:a}=r(731);const n=Buffer[Symbol.species];function concat(e,t){if(e.length===0)return a;if(e.length===1)return e[0];const r=Buffer.allocUnsafe(t);let i=0;for(let t=0;t<e.length;t++){const a=e[t];r.set(a,i);i+=a.length}if(i<t){return new n(r.buffer,r.byteOffset,i)}return r}function _mask(e,t,r,a,n){for(let i=0;i<n;i++){r[a+i]=e[i]^t[i&3]}}function _unmask(e,t){for(let r=0;r<e.length;r++){e[r]^=t[r&3]}}function toArrayBuffer(e){if(e.length===e.buffer.byteLength){return e.buffer}return e.buffer.slice(e.byteOffset,e.byteOffset+e.length)}function toBuffer(e){toBuffer.readOnly=true;if(Buffer.isBuffer(e))return e;let t;if(e instanceof ArrayBuffer){t=new n(e)}else if(ArrayBuffer.isView(e)){t=new n(e.buffer,e.byteOffset,e.byteLength)}else{t=Buffer.from(e);toBuffer.readOnly=false}return t}e.exports={concat:concat,mask:_mask,toArrayBuffer:toArrayBuffer,toBuffer:toBuffer,unmask:_unmask};if(!process.env.WS_NO_BUFFER_UTIL){try{const t=r(4017);e.exports.mask=function(e,r,a,n,i){if(i<48)_mask(e,r,a,n,i);else t.mask(e,r,a,n,i)};e.exports.unmask=function(e,r){if(e.length<32)_unmask(e,r);else t.unmask(e,r)}}catch(e){}}},731:e=>{"use strict";const t=["nodebuffer","arraybuffer","fragments"];const r=typeof Blob!=="undefined";if(r)t.push("blob");e.exports={BINARY_TYPES:t,EMPTY_BUFFER:Buffer.alloc(0),GUID:"258EAFA5-E914-47DA-95CA-C5AB0DC85B11",hasBlob:r,kForOnEventAttribute:Symbol("kIsForOnEventAttribute"),kListener:Symbol("kListener"),kStatusCode:Symbol("status-code"),kWebSocket:Symbol("websocket"),NOOP:()=>{}}},7254:(e,t,r)=>{"use strict";const{kForOnEventAttribute:a,kListener:n}=r(731);const i=Symbol("kCode");const s=Symbol("kData");const o=Symbol("kError");const d=Symbol("kMessage");const p=Symbol("kReason");const c=Symbol("kTarget");const l=Symbol("kType");const u=Symbol("kWasClean");class Event{constructor(e){this[c]=null;this[l]=e}get target(){return this[c]}get type(){return this[l]}}Object.defineProperty(Event.prototype,"target",{enumerable:true});Object.defineProperty(Event.prototype,"type",{enumerable:true});class CloseEvent extends Event{constructor(e,t={}){super(e);this[i]=t.code===undefined?0:t.code;this[p]=t.reason===undefined?"":t.reason;this[u]=t.wasClean===undefined?false:t.wasClean}get code(){return this[i]}get reason(){return this[p]}get wasClean(){return this[u]}}Object.defineProperty(CloseEvent.prototype,"code",{enumerable:true});Object.defineProperty(CloseEvent.prototype,"reason",{enumerable:true});Object.defineProperty(CloseEvent.prototype,"wasClean",{enumerable:true});class ErrorEvent extends Event{constructor(e,t={}){super(e);this[o]=t.error===undefined?null:t.error;this[d]=t.message===undefined?"":t.message}get error(){return this[o]}get message(){return this[d]}}Object.defineProperty(ErrorEvent.prototype,"error",{enumerable:true});Object.defineProperty(ErrorEvent.prototype,"message",{enumerable:true});class MessageEvent extends Event{constructor(e,t={}){super(e);this[s]=t.data===undefined?null:t.data}get data(){return this[s]}}Object.defineProperty(MessageEvent.prototype,"data",{enumerable:true});const m={addEventListener(e,t,r={}){for(const i of this.listeners(e)){if(!r[a]&&i[n]===t&&!i[a]){return}}let i;if(e==="message"){i=function onMessage(e,r){const a=new MessageEvent("message",{data:r?e:e.toString()});a[c]=this;callListener(t,this,a)}}else if(e==="close"){i=function onClose(e,r){const a=new CloseEvent("close",{code:e,reason:r.toString(),wasClean:this._closeFrameReceived&&this._closeFrameSent});a[c]=this;callListener(t,this,a)}}else if(e==="error"){i=function onError(e){const r=new ErrorEvent("error",{error:e,message:e.message});r[c]=this;callListener(t,this,r)}}else if(e==="open"){i=function onOpen(){const e=new Event("open");e[c]=this;callListener(t,this,e)}}else{return}i[a]=!!r[a];i[n]=t;if(r.once){this.once(e,i)}else{this.on(e,i)}},removeEventListener(e,t){for(const r of this.listeners(e)){if(r[n]===t&&!r[a]){this.removeListener(e,r);break}}}};e.exports={CloseEvent:CloseEvent,ErrorEvent:ErrorEvent,Event:Event,EventTarget:m,MessageEvent:MessageEvent};function callListener(e,t,r){if(typeof e==="object"&&e.handleEvent){e.handleEvent.call(e,r)}else{e.call(t,r)}}},9627:(e,t,r)=>{"use strict";const{tokenChars:a}=r(147);function push(e,t,r){if(e[t]===undefined)e[t]=[r];else e[t].push(r)}function parse(e){const t=Object.create(null);let r=Object.create(null);let n=false;let i=false;let s=false;let o;let d;let p=-1;let c=-1;let l=-1;let u=0;for(;u<e.length;u++){c=e.charCodeAt(u);if(o===undefined){if(l===-1&&a[c]===1){if(p===-1)p=u}else if(u!==0&&(c===32||c===9)){if(l===-1&&p!==-1)l=u}else if(c===59||c===44){if(p===-1){throw new SyntaxError(`Unexpected character at index ${u}`)}if(l===-1)l=u;const a=e.slice(p,l);if(c===44){push(t,a,r);r=Object.create(null)}else{o=a}p=l=-1}else{throw new SyntaxError(`Unexpected character at index ${u}`)}}else if(d===undefined){if(l===-1&&a[c]===1){if(p===-1)p=u}else if(c===32||c===9){if(l===-1&&p!==-1)l=u}else if(c===59||c===44){if(p===-1){throw new SyntaxError(`Unexpected character at index ${u}`)}if(l===-1)l=u;push(r,e.slice(p,l),true);if(c===44){push(t,o,r);r=Object.create(null);o=undefined}p=l=-1}else if(c===61&&p!==-1&&l===-1){d=e.slice(p,u);p=l=-1}else{throw new SyntaxError(`Unexpected character at index ${u}`)}}else{if(i){if(a[c]!==1){throw new SyntaxError(`Unexpected character at index ${u}`)}if(p===-1)p=u;else if(!n)n=true;i=false}else if(s){if(a[c]===1){if(p===-1)p=u}else if(c===34&&p!==-1){s=false;l=u}else if(c===92){i=true}else{throw new SyntaxError(`Unexpected character at index ${u}`)}}else if(c===34&&e.charCodeAt(u-1)===61){s=true}else if(l===-1&&a[c]===1){if(p===-1)p=u}else if(p!==-1&&(c===32||c===9)){if(l===-1)l=u}else if(c===59||c===44){if(p===-1){throw new SyntaxError(`Unexpected character at index ${u}`)}if(l===-1)l=u;let a=e.slice(p,l);if(n){a=a.replace(/\\/g,"");n=false}push(r,d,a);if(c===44){push(t,o,r);r=Object.create(null);o=undefined}d=undefined;p=l=-1}else{throw new SyntaxError(`Unexpected character at index ${u}`)}}}if(p===-1||s||c===32||c===9){throw new SyntaxError("Unexpected end of input")}if(l===-1)l=u;const m=e.slice(p,l);if(o===undefined){push(t,m,r)}else{if(d===undefined){push(r,m,true)}else if(n){push(r,d,m.replace(/\\/g,""))}else{push(r,d,m)}push(t,o,r)}return t}function format(e){return Object.keys(e).map((t=>{let r=e[t];if(!Array.isArray(r))r=[r];return r.map((e=>[t].concat(Object.keys(e).map((t=>{let r=e[t];if(!Array.isArray(r))r=[r];return r.map((e=>e===true?t:`${t}=${e}`)).join("; ")}))).join("; "))).join(", ")})).join(", ")}e.exports={format:format,parse:parse}},1986:e=>{"use strict";const t=Symbol("kDone");const r=Symbol("kRun");class Limiter{constructor(e){this[t]=()=>{this.pending--;this[r]()};this.concurrency=e||Infinity;this.jobs=[];this.pending=0}add(e){this.jobs.push(e);this[r]()}[r](){if(this.pending===this.concurrency)return;if(this.jobs.length){const e=this.jobs.shift();this.pending++;e(this[t])}}}e.exports=Limiter},116:(e,t,r)=>{"use strict";const a=r(3106);const n=r(4719);const i=r(1986);const{kStatusCode:s}=r(731);const o=Buffer[Symbol.species];const d=Buffer.from([0,0,255,255]);const p=Symbol("permessage-deflate");const c=Symbol("total-length");const l=Symbol("callback");const u=Symbol("buffers");const m=Symbol("error");let f;class PerMessageDeflate{constructor(e,t,r){this._maxPayload=r|0;this._options=e||{};this._threshold=this._options.threshold!==undefined?this._options.threshold:1024;this._isServer=!!t;this._deflate=null;this._inflate=null;this.params=null;if(!f){const e=this._options.concurrencyLimit!==undefined?this._options.concurrencyLimit:10;f=new i(e)}}static get extensionName(){return"permessage-deflate"}offer(){const e={};if(this._options.serverNoContextTakeover){e.server_no_context_takeover=true}if(this._options.clientNoContextTakeover){e.client_no_context_takeover=true}if(this._options.serverMaxWindowBits){e.server_max_window_bits=this._options.serverMaxWindowBits}if(this._options.clientMaxWindowBits){e.client_max_window_bits=this._options.clientMaxWindowBits}else if(this._options.clientMaxWindowBits==null){e.client_max_window_bits=true}return e}accept(e){e=this.normalizeParams(e);this.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e);return this.params}cleanup(){if(this._inflate){this._inflate.close();this._inflate=null}if(this._deflate){const e=this._deflate[l];this._deflate.close();this._deflate=null;if(e){e(new Error("The deflate stream was closed while data was being processed"))}}}acceptAsServer(e){const t=this._options;const r=e.find((e=>{if(t.serverNoContextTakeover===false&&e.server_no_context_takeover||e.server_max_window_bits&&(t.serverMaxWindowBits===false||typeof t.serverMaxWindowBits==="number"&&t.serverMaxWindowBits>e.server_max_window_bits)||typeof t.clientMaxWindowBits==="number"&&!e.client_max_window_bits){return false}return true}));if(!r){throw new Error("None of the extension offers can be accepted")}if(t.serverNoContextTakeover){r.server_no_context_takeover=true}if(t.clientNoContextTakeover){r.client_no_context_takeover=true}if(typeof t.serverMaxWindowBits==="number"){r.server_max_window_bits=t.serverMaxWindowBits}if(typeof t.clientMaxWindowBits==="number"){r.client_max_window_bits=t.clientMaxWindowBits}else if(r.client_max_window_bits===true||t.clientMaxWindowBits===false){delete r.client_max_window_bits}return r}acceptAsClient(e){const t=e[0];if(this._options.clientNoContextTakeover===false&&t.client_no_context_takeover){throw new Error('Unexpected parameter "client_no_context_takeover"')}if(!t.client_max_window_bits){if(typeof this._options.clientMaxWindowBits==="number"){t.client_max_window_bits=this._options.clientMaxWindowBits}}else if(this._options.clientMaxWindowBits===false||typeof this._options.clientMaxWindowBits==="number"&&t.client_max_window_bits>this._options.clientMaxWindowBits){throw new Error('Unexpected or invalid parameter "client_max_window_bits"')}return t}normalizeParams(e){e.forEach((e=>{Object.keys(e).forEach((t=>{let r=e[t];if(r.length>1){throw new Error(`Parameter "${t}" must have only a single value`)}r=r[0];if(t==="client_max_window_bits"){if(r!==true){const e=+r;if(!Number.isInteger(e)||e<8||e>15){throw new TypeError(`Invalid value for parameter "${t}": ${r}`)}r=e}else if(!this._isServer){throw new TypeError(`Invalid value for parameter "${t}": ${r}`)}}else if(t==="server_max_window_bits"){const e=+r;if(!Number.isInteger(e)||e<8||e>15){throw new TypeError(`Invalid value for parameter "${t}": ${r}`)}r=e}else if(t==="client_no_context_takeover"||t==="server_no_context_takeover"){if(r!==true){throw new TypeError(`Invalid value for parameter "${t}": ${r}`)}}else{throw new Error(`Unknown parameter "${t}"`)}e[t]=r}))}));return e}decompress(e,t,r){f.add((a=>{this._decompress(e,t,((e,t)=>{a();r(e,t)}))}))}compress(e,t,r){f.add((a=>{this._compress(e,t,((e,t)=>{a();r(e,t)}))}))}_decompress(e,t,r){const i=this._isServer?"client":"server";if(!this._inflate){const e=`${i}_max_window_bits`;const t=typeof this.params[e]!=="number"?a.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=a.createInflateRaw({...this._options.zlibInflateOptions,windowBits:t});this._inflate[p]=this;this._inflate[c]=0;this._inflate[u]=[];this._inflate.on("error",inflateOnError);this._inflate.on("data",inflateOnData)}this._inflate[l]=r;this._inflate.write(e);if(t)this._inflate.write(d);this._inflate.flush((()=>{const e=this._inflate[m];if(e){this._inflate.close();this._inflate=null;r(e);return}const a=n.concat(this._inflate[u],this._inflate[c]);if(this._inflate._readableState.endEmitted){this._inflate.close();this._inflate=null}else{this._inflate[c]=0;this._inflate[u]=[];if(t&&this.params[`${i}_no_context_takeover`]){this._inflate.reset()}}r(null,a)}))}_compress(e,t,r){const i=this._isServer?"server":"client";if(!this._deflate){const e=`${i}_max_window_bits`;const t=typeof this.params[e]!=="number"?a.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=a.createDeflateRaw({...this._options.zlibDeflateOptions,windowBits:t});this._deflate[c]=0;this._deflate[u]=[];this._deflate.on("data",deflateOnData)}this._deflate[l]=r;this._deflate.write(e);this._deflate.flush(a.Z_SYNC_FLUSH,(()=>{if(!this._deflate){return}let e=n.concat(this._deflate[u],this._deflate[c]);if(t){e=new o(e.buffer,e.byteOffset,e.length-4)}this._deflate[l]=null;this._deflate[c]=0;this._deflate[u]=[];if(t&&this.params[`${i}_no_context_takeover`]){this._deflate.reset()}r(null,e)}))}}e.exports=PerMessageDeflate;function deflateOnData(e){this[u].push(e);this[c]+=e.length}function inflateOnData(e){this[c]+=e.length;if(this[p]._maxPayload<1||this[c]<=this[p]._maxPayload){this[u].push(e);return}this[m]=new RangeError("Max payload size exceeded");this[m].code="WS_ERR_UNSUPPORTED_MESSAGE_LENGTH";this[m][s]=1009;this.removeListener("data",inflateOnData);this.reset()}function inflateOnError(e){this[p]._inflate=null;if(this[m]){this[l](this[m]);return}e[s]=1007;this[l](e)}},3433:(e,t,r)=>{"use strict";const{Writable:a}=r(2203);const n=r(116);const{BINARY_TYPES:i,EMPTY_BUFFER:s,kStatusCode:o,kWebSocket:d}=r(731);const{concat:p,toArrayBuffer:c,unmask:l}=r(4719);const{isValidStatusCode:u,isValidUTF8:m}=r(147);const f=Buffer[Symbol.species];const g=0;const y=1;const _=2;const v=3;const b=4;const w=5;const E=6;class Receiver extends a{constructor(e={}){super();this._allowSynchronousEvents=e.allowSynchronousEvents!==undefined?e.allowSynchronousEvents:true;this._binaryType=e.binaryType||i[0];this._extensions=e.extensions||{};this._isServer=!!e.isServer;this._maxPayload=e.maxPayload|0;this._skipUTF8Validation=!!e.skipUTF8Validation;this[d]=undefined;this._bufferedBytes=0;this._buffers=[];this._compressed=false;this._payloadLength=0;this._mask=undefined;this._fragmented=0;this._masked=false;this._fin=false;this._opcode=0;this._totalPayloadLength=0;this._messageLength=0;this._fragments=[];this._errored=false;this._loop=false;this._state=g}_write(e,t,r){if(this._opcode===8&&this._state==g)return r();this._bufferedBytes+=e.length;this._buffers.push(e);this.startLoop(r)}consume(e){this._bufferedBytes-=e;if(e===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length){const t=this._buffers[0];this._buffers[0]=new f(t.buffer,t.byteOffset+e,t.length-e);return new f(t.buffer,t.byteOffset,e)}const t=Buffer.allocUnsafe(e);do{const r=this._buffers[0];const a=t.length-e;if(e>=r.length){t.set(this._buffers.shift(),a)}else{t.set(new Uint8Array(r.buffer,r.byteOffset,e),a);this._buffers[0]=new f(r.buffer,r.byteOffset+e,r.length-e)}e-=r.length}while(e>0);return t}startLoop(e){this._loop=true;do{switch(this._state){case g:this.getInfo(e);break;case y:this.getPayloadLength16(e);break;case _:this.getPayloadLength64(e);break;case v:this.getMask();break;case b:this.getData(e);break;case w:case E:this._loop=false;return}}while(this._loop);if(!this._errored)e()}getInfo(e){if(this._bufferedBytes<2){this._loop=false;return}const t=this.consume(2);if((t[0]&48)!==0){const t=this.createError(RangeError,"RSV2 and RSV3 must be clear",true,1002,"WS_ERR_UNEXPECTED_RSV_2_3");e(t);return}const r=(t[0]&64)===64;if(r&&!this._extensions[n.extensionName]){const t=this.createError(RangeError,"RSV1 must be clear",true,1002,"WS_ERR_UNEXPECTED_RSV_1");e(t);return}this._fin=(t[0]&128)===128;this._opcode=t[0]&15;this._payloadLength=t[1]&127;if(this._opcode===0){if(r){const t=this.createError(RangeError,"RSV1 must be clear",true,1002,"WS_ERR_UNEXPECTED_RSV_1");e(t);return}if(!this._fragmented){const t=this.createError(RangeError,"invalid opcode 0",true,1002,"WS_ERR_INVALID_OPCODE");e(t);return}this._opcode=this._fragmented}else if(this._opcode===1||this._opcode===2){if(this._fragmented){const t=this.createError(RangeError,`invalid opcode ${this._opcode}`,true,1002,"WS_ERR_INVALID_OPCODE");e(t);return}this._compressed=r}else if(this._opcode>7&&this._opcode<11){if(!this._fin){const t=this.createError(RangeError,"FIN must be set",true,1002,"WS_ERR_EXPECTED_FIN");e(t);return}if(r){const t=this.createError(RangeError,"RSV1 must be clear",true,1002,"WS_ERR_UNEXPECTED_RSV_1");e(t);return}if(this._payloadLength>125||this._opcode===8&&this._payloadLength===1){const t=this.createError(RangeError,`invalid payload length ${this._payloadLength}`,true,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");e(t);return}}else{const t=this.createError(RangeError,`invalid opcode ${this._opcode}`,true,1002,"WS_ERR_INVALID_OPCODE");e(t);return}if(!this._fin&&!this._fragmented)this._fragmented=this._opcode;this._masked=(t[1]&128)===128;if(this._isServer){if(!this._masked){const t=this.createError(RangeError,"MASK must be set",true,1002,"WS_ERR_EXPECTED_MASK");e(t);return}}else if(this._masked){const t=this.createError(RangeError,"MASK must be clear",true,1002,"WS_ERR_UNEXPECTED_MASK");e(t);return}if(this._payloadLength===126)this._state=y;else if(this._payloadLength===127)this._state=_;else this.haveLength(e)}getPayloadLength16(e){if(this._bufferedBytes<2){this._loop=false;return}this._payloadLength=this.consume(2).readUInt16BE(0);this.haveLength(e)}getPayloadLength64(e){if(this._bufferedBytes<8){this._loop=false;return}const t=this.consume(8);const r=t.readUInt32BE(0);if(r>Math.pow(2,53-32)-1){const t=this.createError(RangeError,"Unsupported WebSocket frame: payload length > 2^53 - 1",false,1009,"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH");e(t);return}this._payloadLength=r*Math.pow(2,32)+t.readUInt32BE(4);this.haveLength(e)}haveLength(e){if(this._payloadLength&&this._opcode<8){this._totalPayloadLength+=this._payloadLength;if(this._totalPayloadLength>this._maxPayload&&this._maxPayload>0){const t=this.createError(RangeError,"Max payload size exceeded",false,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");e(t);return}}if(this._masked)this._state=v;else this._state=b}getMask(){if(this._bufferedBytes<4){this._loop=false;return}this._mask=this.consume(4);this._state=b}getData(e){let t=s;if(this._payloadLength){if(this._bufferedBytes<this._payloadLength){this._loop=false;return}t=this.consume(this._payloadLength);if(this._masked&&(this._mask[0]|this._mask[1]|this._mask[2]|this._mask[3])!==0){l(t,this._mask)}}if(this._opcode>7){this.controlMessage(t,e);return}if(this._compressed){this._state=w;this.decompress(t,e);return}if(t.length){this._messageLength=this._totalPayloadLength;this._fragments.push(t)}this.dataMessage(e)}decompress(e,t){const r=this._extensions[n.extensionName];r.decompress(e,this._fin,((e,r)=>{if(e)return t(e);if(r.length){this._messageLength+=r.length;if(this._messageLength>this._maxPayload&&this._maxPayload>0){const e=this.createError(RangeError,"Max payload size exceeded",false,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");t(e);return}this._fragments.push(r)}this.dataMessage(t);if(this._state===g)this.startLoop(t)}))}dataMessage(e){if(!this._fin){this._state=g;return}const t=this._messageLength;const r=this._fragments;this._totalPayloadLength=0;this._messageLength=0;this._fragmented=0;this._fragments=[];if(this._opcode===2){let a;if(this._binaryType==="nodebuffer"){a=p(r,t)}else if(this._binaryType==="arraybuffer"){a=c(p(r,t))}else if(this._binaryType==="blob"){a=new Blob(r)}else{a=r}if(this._allowSynchronousEvents){this.emit("message",a,true);this._state=g}else{this._state=E;setImmediate((()=>{this.emit("message",a,true);this._state=g;this.startLoop(e)}))}}else{const a=p(r,t);if(!this._skipUTF8Validation&&!m(a)){const t=this.createError(Error,"invalid UTF-8 sequence",true,1007,"WS_ERR_INVALID_UTF8");e(t);return}if(this._state===w||this._allowSynchronousEvents){this.emit("message",a,false);this._state=g}else{this._state=E;setImmediate((()=>{this.emit("message",a,false);this._state=g;this.startLoop(e)}))}}}controlMessage(e,t){if(this._opcode===8){if(e.length===0){this._loop=false;this.emit("conclude",1005,s);this.end()}else{const r=e.readUInt16BE(0);if(!u(r)){const e=this.createError(RangeError,`invalid status code ${r}`,true,1002,"WS_ERR_INVALID_CLOSE_CODE");t(e);return}const a=new f(e.buffer,e.byteOffset+2,e.length-2);if(!this._skipUTF8Validation&&!m(a)){const e=this.createError(Error,"invalid UTF-8 sequence",true,1007,"WS_ERR_INVALID_UTF8");t(e);return}this._loop=false;this.emit("conclude",r,a);this.end()}this._state=g;return}if(this._allowSynchronousEvents){this.emit(this._opcode===9?"ping":"pong",e);this._state=g}else{this._state=E;setImmediate((()=>{this.emit(this._opcode===9?"ping":"pong",e);this._state=g;this.startLoop(t)}))}}createError(e,t,r,a,n){this._loop=false;this._errored=true;const i=new e(r?`Invalid WebSocket frame: ${t}`:t);Error.captureStackTrace(i,this.createError);i.code=n;i[o]=a;return i}}e.exports=Receiver},7657:(e,t,r)=>{"use strict";const{Duplex:a}=r(2203);const{randomFillSync:n}=r(6982);const i=r(116);const{EMPTY_BUFFER:s,kWebSocket:o,NOOP:d}=r(731);const{isBlob:p,isValidStatusCode:c}=r(147);const{mask:l,toBuffer:u}=r(4719);const m=Symbol("kByteLength");const f=Buffer.alloc(4);const g=8*1024;let y;let _=g;const v=0;const b=1;const w=2;class Sender{constructor(e,t,r){this._extensions=t||{};if(r){this._generateMask=r;this._maskBuffer=Buffer.alloc(4)}this._socket=e;this._firstFragment=true;this._compress=false;this._bufferedBytes=0;this._queue=[];this._state=v;this.onerror=d;this[o]=undefined}static frame(e,t){let r;let a=false;let i=2;let s=false;if(t.mask){r=t.maskBuffer||f;if(t.generateMask){t.generateMask(r)}else{if(_===g){if(y===undefined){y=Buffer.alloc(g)}n(y,0,g);_=0}r[0]=y[_++];r[1]=y[_++];r[2]=y[_++];r[3]=y[_++]}s=(r[0]|r[1]|r[2]|r[3])===0;i=6}let o;if(typeof e==="string"){if((!t.mask||s)&&t[m]!==undefined){o=t[m]}else{e=Buffer.from(e);o=e.length}}else{o=e.length;a=t.mask&&t.readOnly&&!s}let d=o;if(o>=65536){i+=8;d=127}else if(o>125){i+=2;d=126}const p=Buffer.allocUnsafe(a?o+i:i);p[0]=t.fin?t.opcode|128:t.opcode;if(t.rsv1)p[0]|=64;p[1]=d;if(d===126){p.writeUInt16BE(o,2)}else if(d===127){p[2]=p[3]=0;p.writeUIntBE(o,4,6)}if(!t.mask)return[p,e];p[1]|=128;p[i-4]=r[0];p[i-3]=r[1];p[i-2]=r[2];p[i-1]=r[3];if(s)return[p,e];if(a){l(e,r,p,i,o);return[p]}l(e,r,e,0,o);return[p,e]}close(e,t,r,a){let n;if(e===undefined){n=s}else if(typeof e!=="number"||!c(e)){throw new TypeError("First argument must be a valid error code number")}else if(t===undefined||!t.length){n=Buffer.allocUnsafe(2);n.writeUInt16BE(e,0)}else{const r=Buffer.byteLength(t);if(r>123){throw new RangeError("The message must not be greater than 123 bytes")}n=Buffer.allocUnsafe(2+r);n.writeUInt16BE(e,0);if(typeof t==="string"){n.write(t,2)}else{n.set(t,2)}}const i={[m]:n.length,fin:true,generateMask:this._generateMask,mask:r,maskBuffer:this._maskBuffer,opcode:8,readOnly:false,rsv1:false};if(this._state!==v){this.enqueue([this.dispatch,n,false,i,a])}else{this.sendFrame(Sender.frame(n,i),a)}}ping(e,t,r){let a;let n;if(typeof e==="string"){a=Buffer.byteLength(e);n=false}else if(p(e)){a=e.size;n=false}else{e=u(e);a=e.length;n=u.readOnly}if(a>125){throw new RangeError("The data size must not be greater than 125 bytes")}const i={[m]:a,fin:true,generateMask:this._generateMask,mask:t,maskBuffer:this._maskBuffer,opcode:9,readOnly:n,rsv1:false};if(p(e)){if(this._state!==v){this.enqueue([this.getBlobData,e,false,i,r])}else{this.getBlobData(e,false,i,r)}}else if(this._state!==v){this.enqueue([this.dispatch,e,false,i,r])}else{this.sendFrame(Sender.frame(e,i),r)}}pong(e,t,r){let a;let n;if(typeof e==="string"){a=Buffer.byteLength(e);n=false}else if(p(e)){a=e.size;n=false}else{e=u(e);a=e.length;n=u.readOnly}if(a>125){throw new RangeError("The data size must not be greater than 125 bytes")}const i={[m]:a,fin:true,generateMask:this._generateMask,mask:t,maskBuffer:this._maskBuffer,opcode:10,readOnly:n,rsv1:false};if(p(e)){if(this._state!==v){this.enqueue([this.getBlobData,e,false,i,r])}else{this.getBlobData(e,false,i,r)}}else if(this._state!==v){this.enqueue([this.dispatch,e,false,i,r])}else{this.sendFrame(Sender.frame(e,i),r)}}send(e,t,r){const a=this._extensions[i.extensionName];let n=t.binary?2:1;let s=t.compress;let o;let d;if(typeof e==="string"){o=Buffer.byteLength(e);d=false}else if(p(e)){o=e.size;d=false}else{e=u(e);o=e.length;d=u.readOnly}if(this._firstFragment){this._firstFragment=false;if(s&&a&&a.params[a._isServer?"server_no_context_takeover":"client_no_context_takeover"]){s=o>=a._threshold}this._compress=s}else{s=false;n=0}if(t.fin)this._firstFragment=true;const c={[m]:o,fin:t.fin,generateMask:this._generateMask,mask:t.mask,maskBuffer:this._maskBuffer,opcode:n,readOnly:d,rsv1:s};if(p(e)){if(this._state!==v){this.enqueue([this.getBlobData,e,this._compress,c,r])}else{this.getBlobData(e,this._compress,c,r)}}else if(this._state!==v){this.enqueue([this.dispatch,e,this._compress,c,r])}else{this.dispatch(e,this._compress,c,r)}}getBlobData(e,t,r,a){this._bufferedBytes+=r[m];this._state=w;e.arrayBuffer().then((e=>{if(this._socket.destroyed){const e=new Error("The socket was closed while the blob was being read");process.nextTick(callCallbacks,this,e,a);return}this._bufferedBytes-=r[m];const n=u(e);if(!t){this._state=v;this.sendFrame(Sender.frame(n,r),a);this.dequeue()}else{this.dispatch(n,t,r,a)}})).catch((e=>{process.nextTick(onError,this,e,a)}))}dispatch(e,t,r,a){if(!t){this.sendFrame(Sender.frame(e,r),a);return}const n=this._extensions[i.extensionName];this._bufferedBytes+=r[m];this._state=b;n.compress(e,r.fin,((e,t)=>{if(this._socket.destroyed){const e=new Error("The socket was closed while data was being compressed");callCallbacks(this,e,a);return}this._bufferedBytes-=r[m];this._state=v;r.readOnly=false;this.sendFrame(Sender.frame(t,r),a);this.dequeue()}))}dequeue(){while(this._state===v&&this._queue.length){const e=this._queue.shift();this._bufferedBytes-=e[3][m];Reflect.apply(e[0],this,e.slice(1))}}enqueue(e){this._bufferedBytes+=e[3][m];this._queue.push(e)}sendFrame(e,t){if(e.length===2){this._socket.cork();this._socket.write(e[0]);this._socket.write(e[1],t);this._socket.uncork()}else{this._socket.write(e[0],t)}}}e.exports=Sender;function callCallbacks(e,t,r){if(typeof r==="function")r(t);for(let r=0;r<e._queue.length;r++){const a=e._queue[r];const n=a[a.length-1];if(typeof n==="function")n(t)}}function onError(e,t,r){callCallbacks(e,t,r);e.onerror(t)}},6448:(e,t,r)=>{"use strict";const a=r(9013);const{Duplex:n}=r(2203);function emitClose(e){e.emit("close")}function duplexOnEnd(){if(!this.destroyed&&this._writableState.finished){this.destroy()}}function duplexOnError(e){this.removeListener("error",duplexOnError);this.destroy();if(this.listenerCount("error")===0){this.emit("error",e)}}function createWebSocketStream(e,t){let r=true;const a=new n({...t,autoDestroy:false,emitClose:false,objectMode:false,writableObjectMode:false});e.on("message",(function message(t,r){const n=!r&&a._readableState.objectMode?t.toString():t;if(!a.push(n))e.pause()}));e.once("error",(function error(e){if(a.destroyed)return;r=false;a.destroy(e)}));e.once("close",(function close(){if(a.destroyed)return;a.push(null)}));a._destroy=function(t,n){if(e.readyState===e.CLOSED){n(t);process.nextTick(emitClose,a);return}let i=false;e.once("error",(function error(e){i=true;n(e)}));e.once("close",(function close(){if(!i)n(t);process.nextTick(emitClose,a)}));if(r)e.terminate()};a._final=function(t){if(e.readyState===e.CONNECTING){e.once("open",(function open(){a._final(t)}));return}if(e._socket===null)return;if(e._socket._writableState.finished){t();if(a._readableState.endEmitted)a.destroy()}else{e._socket.once("finish",(function finish(){t()}));e.close()}};a._read=function(){if(e.isPaused)e.resume()};a._write=function(t,r,n){if(e.readyState===e.CONNECTING){e.once("open",(function open(){a._write(t,r,n)}));return}e.send(t,n)};a.on("end",duplexOnEnd);a.on("error",duplexOnError);return a}e.exports=createWebSocketStream},4936:(e,t,r)=>{"use strict";const{tokenChars:a}=r(147);function parse(e){const t=new Set;let r=-1;let n=-1;let i=0;for(i;i<e.length;i++){const s=e.charCodeAt(i);if(n===-1&&a[s]===1){if(r===-1)r=i}else if(i!==0&&(s===32||s===9)){if(n===-1&&r!==-1)n=i}else if(s===44){if(r===-1){throw new SyntaxError(`Unexpected character at index ${i}`)}if(n===-1)n=i;const a=e.slice(r,n);if(t.has(a)){throw new SyntaxError(`The "${a}" subprotocol is duplicated`)}t.add(a);r=n=-1}else{throw new SyntaxError(`Unexpected character at index ${i}`)}}if(r===-1||n!==-1){throw new SyntaxError("Unexpected end of input")}const s=e.slice(r,i);if(t.has(s)){throw new SyntaxError(`The "${s}" subprotocol is duplicated`)}t.add(s);return t}e.exports={parse:parse}},147:(e,t,r)=>{"use strict";const{isUtf8:a}=r(181);const{hasBlob:n}=r(731);const i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0];function isValidStatusCode(e){return e>=1e3&&e<=1014&&e!==1004&&e!==1005&&e!==1006||e>=3e3&&e<=4999}function _isValidUTF8(e){const t=e.length;let r=0;while(r<t){if((e[r]&128)===0){r++}else if((e[r]&224)===192){if(r+1===t||(e[r+1]&192)!==128||(e[r]&254)===192){return false}r+=2}else if((e[r]&240)===224){if(r+2>=t||(e[r+1]&192)!==128||(e[r+2]&192)!==128||e[r]===224&&(e[r+1]&224)===128||e[r]===237&&(e[r+1]&224)===160){return false}r+=3}else if((e[r]&248)===240){if(r+3>=t||(e[r+1]&192)!==128||(e[r+2]&192)!==128||(e[r+3]&192)!==128||e[r]===240&&(e[r+1]&240)===128||e[r]===244&&e[r+1]>143||e[r]>244){return false}r+=4}else{return false}}return true}function isBlob(e){return n&&typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&(e[Symbol.toStringTag]==="Blob"||e[Symbol.toStringTag]==="File")}e.exports={isBlob:isBlob,isValidStatusCode:isValidStatusCode,isValidUTF8:_isValidUTF8,tokenChars:i};if(a){e.exports.isValidUTF8=function(e){return e.length<24?_isValidUTF8(e):a(e)}}else if(!process.env.WS_NO_UTF_8_VALIDATE){try{const t=r(8952);e.exports.isValidUTF8=function(e){return e.length<32?_isValidUTF8(e):t(e)}}catch(e){}}},7733:(e,t,r)=>{"use strict";const a=r(4434);const n=r(8611);const{Duplex:i}=r(2203);const{createHash:s}=r(6982);const o=r(9627);const d=r(116);const p=r(4936);const c=r(9013);const{GUID:l,kWebSocket:u}=r(731);const m=/^[+/0-9A-Za-z]{22}==$/;const f=0;const g=1;const y=2;class WebSocketServer extends a{constructor(e,t){super();e={allowSynchronousEvents:true,autoPong:true,maxPayload:100*1024*1024,skipUTF8Validation:false,perMessageDeflate:false,handleProtocols:null,clientTracking:true,verifyClient:null,noServer:false,backlog:null,server:null,host:null,path:null,port:null,WebSocket:c,...e};if(e.port==null&&!e.server&&!e.noServer||e.port!=null&&(e.server||e.noServer)||e.server&&e.noServer){throw new TypeError('One and only one of the "port", "server", or "noServer" options '+"must be specified")}if(e.port!=null){this._server=n.createServer(((e,t)=>{const r=n.STATUS_CODES[426];t.writeHead(426,{"Content-Length":r.length,"Content-Type":"text/plain"});t.end(r)}));this._server.listen(e.port,e.host,e.backlog,t)}else if(e.server){this._server=e.server}if(this._server){const e=this.emit.bind(this,"connection");this._removeListeners=addListeners(this._server,{listening:this.emit.bind(this,"listening"),error:this.emit.bind(this,"error"),upgrade:(t,r,a)=>{this.handleUpgrade(t,r,a,e)}})}if(e.perMessageDeflate===true)e.perMessageDeflate={};if(e.clientTracking){this.clients=new Set;this._shouldEmitClose=false}this.options=e;this._state=f}address(){if(this.options.noServer){throw new Error('The server is operating in "noServer" mode')}if(!this._server)return null;return this._server.address()}close(e){if(this._state===y){if(e){this.once("close",(()=>{e(new Error("The server is not running"))}))}process.nextTick(emitClose,this);return}if(e)this.once("close",e);if(this._state===g)return;this._state=g;if(this.options.noServer||this.options.server){if(this._server){this._removeListeners();this._removeListeners=this._server=null}if(this.clients){if(!this.clients.size){process.nextTick(emitClose,this)}else{this._shouldEmitClose=true}}else{process.nextTick(emitClose,this)}}else{const e=this._server;this._removeListeners();this._removeListeners=this._server=null;e.close((()=>{emitClose(this)}))}}shouldHandle(e){if(this.options.path){const t=e.url.indexOf("?");const r=t!==-1?e.url.slice(0,t):e.url;if(r!==this.options.path)return false}return true}handleUpgrade(e,t,r,a){t.on("error",socketOnError);const n=e.headers["sec-websocket-key"];const i=e.headers.upgrade;const s=+e.headers["sec-websocket-version"];if(e.method!=="GET"){const r="Invalid HTTP method";abortHandshakeOrEmitwsClientError(this,e,t,405,r);return}if(i===undefined||i.toLowerCase()!=="websocket"){const r="Invalid Upgrade header";abortHandshakeOrEmitwsClientError(this,e,t,400,r);return}if(n===undefined||!m.test(n)){const r="Missing or invalid Sec-WebSocket-Key header";abortHandshakeOrEmitwsClientError(this,e,t,400,r);return}if(s!==13&&s!==8){const r="Missing or invalid Sec-WebSocket-Version header";abortHandshakeOrEmitwsClientError(this,e,t,400,r,{"Sec-WebSocket-Version":"13, 8"});return}if(!this.shouldHandle(e)){abortHandshake(t,400);return}const c=e.headers["sec-websocket-protocol"];let l=new Set;if(c!==undefined){try{l=p.parse(c)}catch(r){const a="Invalid Sec-WebSocket-Protocol header";abortHandshakeOrEmitwsClientError(this,e,t,400,a);return}}const u=e.headers["sec-websocket-extensions"];const f={};if(this.options.perMessageDeflate&&u!==undefined){const r=new d(this.options.perMessageDeflate,true,this.options.maxPayload);try{const e=o.parse(u);if(e[d.extensionName]){r.accept(e[d.extensionName]);f[d.extensionName]=r}}catch(r){const a="Invalid or unacceptable Sec-WebSocket-Extensions header";abortHandshakeOrEmitwsClientError(this,e,t,400,a);return}}if(this.options.verifyClient){const i={origin:e.headers[`${s===8?"sec-websocket-origin":"origin"}`],secure:!!(e.socket.authorized||e.socket.encrypted),req:e};if(this.options.verifyClient.length===2){this.options.verifyClient(i,((i,s,o,d)=>{if(!i){return abortHandshake(t,s||401,o,d)}this.completeUpgrade(f,n,l,e,t,r,a)}));return}if(!this.options.verifyClient(i))return abortHandshake(t,401)}this.completeUpgrade(f,n,l,e,t,r,a)}completeUpgrade(e,t,r,a,n,i,p){if(!n.readable||!n.writable)return n.destroy();if(n[u]){throw new Error("server.handleUpgrade() was called more than once with the same "+"socket, possibly due to a misconfiguration")}if(this._state>f)return abortHandshake(n,503);const c=s("sha1").update(t+l).digest("base64");const m=["HTTP/1.1 101 Switching Protocols","Upgrade: websocket","Connection: Upgrade",`Sec-WebSocket-Accept: ${c}`];const g=new this.options.WebSocket(null,undefined,this.options);if(r.size){const e=this.options.handleProtocols?this.options.handleProtocols(r,a):r.values().next().value;if(e){m.push(`Sec-WebSocket-Protocol: ${e}`);g._protocol=e}}if(e[d.extensionName]){const t=e[d.extensionName].params;const r=o.format({[d.extensionName]:[t]});m.push(`Sec-WebSocket-Extensions: ${r}`);g._extensions=e}this.emit("headers",m,a);n.write(m.concat("\r\n").join("\r\n"));n.removeListener("error",socketOnError);g.setSocket(n,i,{allowSynchronousEvents:this.options.allowSynchronousEvents,maxPayload:this.options.maxPayload,skipUTF8Validation:this.options.skipUTF8Validation});if(this.clients){this.clients.add(g);g.on("close",(()=>{this.clients.delete(g);if(this._shouldEmitClose&&!this.clients.size){process.nextTick(emitClose,this)}}))}p(g,a)}}e.exports=WebSocketServer;function addListeners(e,t){for(const r of Object.keys(t))e.on(r,t[r]);return function removeListeners(){for(const r of Object.keys(t)){e.removeListener(r,t[r])}}}function emitClose(e){e._state=y;e.emit("close")}function socketOnError(){this.destroy()}function abortHandshake(e,t,r,a){r=r||n.STATUS_CODES[t];a={Connection:"close","Content-Type":"text/html","Content-Length":Buffer.byteLength(r),...a};e.once("finish",e.destroy);e.end(`HTTP/1.1 ${t} ${n.STATUS_CODES[t]}\r\n`+Object.keys(a).map((e=>`${e}: ${a[e]}`)).join("\r\n")+"\r\n\r\n"+r)}function abortHandshakeOrEmitwsClientError(e,t,r,a,n,i){if(e.listenerCount("wsClientError")){const a=new Error(n);Error.captureStackTrace(a,abortHandshakeOrEmitwsClientError);e.emit("wsClientError",a,r,t)}else{abortHandshake(r,a,n,i)}}},9013:(e,t,r)=>{"use strict";const a=r(4434);const n=r(5692);const i=r(8611);const s=r(9278);const o=r(4756);const{randomBytes:d,createHash:p}=r(6982);const{Duplex:c,Readable:l}=r(2203);const{URL:u}=r(7016);const m=r(116);const f=r(3433);const g=r(7657);const{isBlob:y}=r(147);const{BINARY_TYPES:_,EMPTY_BUFFER:v,GUID:b,kForOnEventAttribute:w,kListener:E,kStatusCode:R,kWebSocket:T,NOOP:O}=r(731);const{EventTarget:{addEventListener:N,removeEventListener:C}}=r(7254);const{format:k,parse:I}=r(9627);const{toBuffer:x}=r(4719);const B=30*1e3;const P=Symbol("kAborted");const D=[8,13];const L=["CONNECTING","OPEN","CLOSING","CLOSED"];const U=/^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;class WebSocket extends a{constructor(e,t,r){super();this._binaryType=_[0];this._closeCode=1006;this._closeFrameReceived=false;this._closeFrameSent=false;this._closeMessage=v;this._closeTimer=null;this._errorEmitted=false;this._extensions={};this._paused=false;this._protocol="";this._readyState=WebSocket.CONNECTING;this._receiver=null;this._sender=null;this._socket=null;if(e!==null){this._bufferedAmount=0;this._isServer=false;this._redirects=0;if(t===undefined){t=[]}else if(!Array.isArray(t)){if(typeof t==="object"&&t!==null){r=t;t=[]}else{t=[t]}}initAsClient(this,e,t,r)}else{this._autoPong=r.autoPong;this._isServer=true}}get binaryType(){return this._binaryType}set binaryType(e){if(!_.includes(e))return;this._binaryType=e;if(this._receiver)this._receiver._binaryType=e}get bufferedAmount(){if(!this._socket)return this._bufferedAmount;return this._socket._writableState.length+this._sender._bufferedBytes}get extensions(){return Object.keys(this._extensions).join()}get isPaused(){return this._paused}get onclose(){return null}get onerror(){return null}get onopen(){return null}get onmessage(){return null}get protocol(){return this._protocol}get readyState(){return this._readyState}get url(){return this._url}setSocket(e,t,r){const a=new f({allowSynchronousEvents:r.allowSynchronousEvents,binaryType:this.binaryType,extensions:this._extensions,isServer:this._isServer,maxPayload:r.maxPayload,skipUTF8Validation:r.skipUTF8Validation});const n=new g(e,this._extensions,r.generateMask);this._receiver=a;this._sender=n;this._socket=e;a[T]=this;n[T]=this;e[T]=this;a.on("conclude",receiverOnConclude);a.on("drain",receiverOnDrain);a.on("error",receiverOnError);a.on("message",receiverOnMessage);a.on("ping",receiverOnPing);a.on("pong",receiverOnPong);n.onerror=senderOnError;if(e.setTimeout)e.setTimeout(0);if(e.setNoDelay)e.setNoDelay();if(t.length>0)e.unshift(t);e.on("close",socketOnClose);e.on("data",socketOnData);e.on("end",socketOnEnd);e.on("error",socketOnError);this._readyState=WebSocket.OPEN;this.emit("open")}emitClose(){if(!this._socket){this._readyState=WebSocket.CLOSED;this.emit("close",this._closeCode,this._closeMessage);return}if(this._extensions[m.extensionName]){this._extensions[m.extensionName].cleanup()}this._receiver.removeAllListeners();this._readyState=WebSocket.CLOSED;this.emit("close",this._closeCode,this._closeMessage)}close(e,t){if(this.readyState===WebSocket.CLOSED)return;if(this.readyState===WebSocket.CONNECTING){const e="WebSocket was closed before the connection was established";abortHandshake(this,this._req,e);return}if(this.readyState===WebSocket.CLOSING){if(this._closeFrameSent&&(this._closeFrameReceived||this._receiver._writableState.errorEmitted)){this._socket.end()}return}this._readyState=WebSocket.CLOSING;this._sender.close(e,t,!this._isServer,(e=>{if(e)return;this._closeFrameSent=true;if(this._closeFrameReceived||this._receiver._writableState.errorEmitted){this._socket.end()}}));setCloseTimer(this)}pause(){if(this.readyState===WebSocket.CONNECTING||this.readyState===WebSocket.CLOSED){return}this._paused=true;this._socket.pause()}ping(e,t,r){if(this.readyState===WebSocket.CONNECTING){throw new Error("WebSocket is not open: readyState 0 (CONNECTING)")}if(typeof e==="function"){r=e;e=t=undefined}else if(typeof t==="function"){r=t;t=undefined}if(typeof e==="number")e=e.toString();if(this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,r);return}if(t===undefined)t=!this._isServer;this._sender.ping(e||v,t,r)}pong(e,t,r){if(this.readyState===WebSocket.CONNECTING){throw new Error("WebSocket is not open: readyState 0 (CONNECTING)")}if(typeof e==="function"){r=e;e=t=undefined}else if(typeof t==="function"){r=t;t=undefined}if(typeof e==="number")e=e.toString();if(this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,r);return}if(t===undefined)t=!this._isServer;this._sender.pong(e||v,t,r)}resume(){if(this.readyState===WebSocket.CONNECTING||this.readyState===WebSocket.CLOSED){return}this._paused=false;if(!this._receiver._writableState.needDrain)this._socket.resume()}send(e,t,r){if(this.readyState===WebSocket.CONNECTING){throw new Error("WebSocket is not open: readyState 0 (CONNECTING)")}if(typeof t==="function"){r=t;t={}}if(typeof e==="number")e=e.toString();if(this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,r);return}const a={binary:typeof e!=="string",mask:!this._isServer,compress:true,fin:true,...t};if(!this._extensions[m.extensionName]){a.compress=false}this._sender.send(e||v,a,r)}terminate(){if(this.readyState===WebSocket.CLOSED)return;if(this.readyState===WebSocket.CONNECTING){const e="WebSocket was closed before the connection was established";abortHandshake(this,this._req,e);return}if(this._socket){this._readyState=WebSocket.CLOSING;this._socket.destroy()}}}Object.defineProperty(WebSocket,"CONNECTING",{enumerable:true,value:L.indexOf("CONNECTING")});Object.defineProperty(WebSocket.prototype,"CONNECTING",{enumerable:true,value:L.indexOf("CONNECTING")});Object.defineProperty(WebSocket,"OPEN",{enumerable:true,value:L.indexOf("OPEN")});Object.defineProperty(WebSocket.prototype,"OPEN",{enumerable:true,value:L.indexOf("OPEN")});Object.defineProperty(WebSocket,"CLOSING",{enumerable:true,value:L.indexOf("CLOSING")});Object.defineProperty(WebSocket.prototype,"CLOSING",{enumerable:true,value:L.indexOf("CLOSING")});Object.defineProperty(WebSocket,"CLOSED",{enumerable:true,value:L.indexOf("CLOSED")});Object.defineProperty(WebSocket.prototype,"CLOSED",{enumerable:true,value:L.indexOf("CLOSED")});["binaryType","bufferedAmount","extensions","isPaused","protocol","readyState","url"].forEach((e=>{Object.defineProperty(WebSocket.prototype,e,{enumerable:true})}));["open","error","close","message"].forEach((e=>{Object.defineProperty(WebSocket.prototype,`on${e}`,{enumerable:true,get(){for(const t of this.listeners(e)){if(t[w])return t[E]}return null},set(t){for(const t of this.listeners(e)){if(t[w]){this.removeListener(e,t);break}}if(typeof t!=="function")return;this.addEventListener(e,t,{[w]:true})}})}));WebSocket.prototype.addEventListener=N;WebSocket.prototype.removeEventListener=C;e.exports=WebSocket;function initAsClient(e,t,r,a){const s={allowSynchronousEvents:true,autoPong:true,protocolVersion:D[1],maxPayload:100*1024*1024,skipUTF8Validation:false,perMessageDeflate:true,followRedirects:false,maxRedirects:10,...a,socketPath:undefined,hostname:undefined,protocol:undefined,timeout:undefined,method:"GET",host:undefined,path:undefined,port:undefined};e._autoPong=s.autoPong;if(!D.includes(s.protocolVersion)){throw new RangeError(`Unsupported protocol version: ${s.protocolVersion} `+`(supported versions: ${D.join(", ")})`)}let o;if(t instanceof u){o=t}else{try{o=new u(t)}catch(e){throw new SyntaxError(`Invalid URL: ${t}`)}}if(o.protocol==="http:"){o.protocol="ws:"}else if(o.protocol==="https:"){o.protocol="wss:"}e._url=o.href;const c=o.protocol==="wss:";const l=o.protocol==="ws+unix:";let f;if(o.protocol!=="ws:"&&!c&&!l){f='The URL\'s protocol must be one of "ws:", "wss:", '+'"http:", "https:", or "ws+unix:"'}else if(l&&!o.pathname){f="The URL's pathname is empty"}else if(o.hash){f="The URL contains a fragment identifier"}if(f){const t=new SyntaxError(f);if(e._redirects===0){throw t}else{emitErrorAndClose(e,t);return}}const g=c?443:80;const y=d(16).toString("base64");const _=c?n.request:i.request;const v=new Set;let w;s.createConnection=s.createConnection||(c?tlsConnect:netConnect);s.defaultPort=s.defaultPort||g;s.port=o.port||g;s.host=o.hostname.startsWith("[")?o.hostname.slice(1,-1):o.hostname;s.headers={...s.headers,"Sec-WebSocket-Version":s.protocolVersion,"Sec-WebSocket-Key":y,Connection:"Upgrade",Upgrade:"websocket"};s.path=o.pathname+o.search;s.timeout=s.handshakeTimeout;if(s.perMessageDeflate){w=new m(s.perMessageDeflate!==true?s.perMessageDeflate:{},false,s.maxPayload);s.headers["Sec-WebSocket-Extensions"]=k({[m.extensionName]:w.offer()})}if(r.length){for(const e of r){if(typeof e!=="string"||!U.test(e)||v.has(e)){throw new SyntaxError("An invalid or duplicated subprotocol was specified")}v.add(e)}s.headers["Sec-WebSocket-Protocol"]=r.join(",")}if(s.origin){if(s.protocolVersion<13){s.headers["Sec-WebSocket-Origin"]=s.origin}else{s.headers.Origin=s.origin}}if(o.username||o.password){s.auth=`${o.username}:${o.password}`}if(l){const e=s.path.split(":");s.socketPath=e[0];s.path=e[1]}let E;if(s.followRedirects){if(e._redirects===0){e._originalIpc=l;e._originalSecure=c;e._originalHostOrSocketPath=l?s.socketPath:o.host;const t=a&&a.headers;a={...a,headers:{}};if(t){for(const[e,r]of Object.entries(t)){a.headers[e.toLowerCase()]=r}}}else if(e.listenerCount("redirect")===0){const t=l?e._originalIpc?s.socketPath===e._originalHostOrSocketPath:false:e._originalIpc?false:o.host===e._originalHostOrSocketPath;if(!t||e._originalSecure&&!c){delete s.headers.authorization;delete s.headers.cookie;if(!t)delete s.headers.host;s.auth=undefined}}if(s.auth&&!a.headers.authorization){a.headers.authorization="Basic "+Buffer.from(s.auth).toString("base64")}E=e._req=_(s);if(e._redirects){e.emit("redirect",e.url,E)}}else{E=e._req=_(s)}if(s.timeout){E.on("timeout",(()=>{abortHandshake(e,E,"Opening handshake has timed out")}))}E.on("error",(t=>{if(E===null||E[P])return;E=e._req=null;emitErrorAndClose(e,t)}));E.on("response",(n=>{const i=n.headers.location;const o=n.statusCode;if(i&&s.followRedirects&&o>=300&&o<400){if(++e._redirects>s.maxRedirects){abortHandshake(e,E,"Maximum redirects exceeded");return}E.abort();let n;try{n=new u(i,t)}catch(t){const r=new SyntaxError(`Invalid URL: ${i}`);emitErrorAndClose(e,r);return}initAsClient(e,n,r,a)}else if(!e.emit("unexpected-response",E,n)){abortHandshake(e,E,`Unexpected server response: ${n.statusCode}`)}}));E.on("upgrade",((t,r,a)=>{e.emit("upgrade",t);if(e.readyState!==WebSocket.CONNECTING)return;E=e._req=null;const n=t.headers.upgrade;if(n===undefined||n.toLowerCase()!=="websocket"){abortHandshake(e,r,"Invalid Upgrade header");return}const i=p("sha1").update(y+b).digest("base64");if(t.headers["sec-websocket-accept"]!==i){abortHandshake(e,r,"Invalid Sec-WebSocket-Accept header");return}const o=t.headers["sec-websocket-protocol"];let d;if(o!==undefined){if(!v.size){d="Server sent a subprotocol but none was requested"}else if(!v.has(o)){d="Server sent an invalid subprotocol"}}else if(v.size){d="Server sent no subprotocol"}if(d){abortHandshake(e,r,d);return}if(o)e._protocol=o;const c=t.headers["sec-websocket-extensions"];if(c!==undefined){if(!w){const t="Server sent a Sec-WebSocket-Extensions header but no extension "+"was requested";abortHandshake(e,r,t);return}let t;try{t=I(c)}catch(t){const a="Invalid Sec-WebSocket-Extensions header";abortHandshake(e,r,a);return}const a=Object.keys(t);if(a.length!==1||a[0]!==m.extensionName){const t="Server indicated an extension that was not requested";abortHandshake(e,r,t);return}try{w.accept(t[m.extensionName])}catch(t){const a="Invalid Sec-WebSocket-Extensions header";abortHandshake(e,r,a);return}e._extensions[m.extensionName]=w}e.setSocket(r,a,{allowSynchronousEvents:s.allowSynchronousEvents,generateMask:s.generateMask,maxPayload:s.maxPayload,skipUTF8Validation:s.skipUTF8Validation})}));if(s.finishRequest){s.finishRequest(E,e)}else{E.end()}}function emitErrorAndClose(e,t){e._readyState=WebSocket.CLOSING;e._errorEmitted=true;e.emit("error",t);e.emitClose()}function netConnect(e){e.path=e.socketPath;return s.connect(e)}function tlsConnect(e){e.path=undefined;if(!e.servername&&e.servername!==""){e.servername=s.isIP(e.host)?"":e.host}return o.connect(e)}function abortHandshake(e,t,r){e._readyState=WebSocket.CLOSING;const a=new Error(r);Error.captureStackTrace(a,abortHandshake);if(t.setHeader){t[P]=true;t.abort();if(t.socket&&!t.socket.destroyed){t.socket.destroy()}process.nextTick(emitErrorAndClose,e,a)}else{t.destroy(a);t.once("error",e.emit.bind(e,"error"));t.once("close",e.emitClose.bind(e))}}function sendAfterClose(e,t,r){if(t){const r=y(t)?t.size:x(t).length;if(e._socket)e._sender._bufferedBytes+=r;else e._bufferedAmount+=r}if(r){const t=new Error(`WebSocket is not open: readyState ${e.readyState} `+`(${L[e.readyState]})`);process.nextTick(r,t)}}function receiverOnConclude(e,t){const r=this[T];r._closeFrameReceived=true;r._closeMessage=t;r._closeCode=e;if(r._socket[T]===undefined)return;r._socket.removeListener("data",socketOnData);process.nextTick(resume,r._socket);if(e===1005)r.close();else r.close(e,t)}function receiverOnDrain(){const e=this[T];if(!e.isPaused)e._socket.resume()}function receiverOnError(e){const t=this[T];if(t._socket[T]!==undefined){t._socket.removeListener("data",socketOnData);process.nextTick(resume,t._socket);t.close(e[R])}if(!t._errorEmitted){t._errorEmitted=true;t.emit("error",e)}}function receiverOnFinish(){this[T].emitClose()}function receiverOnMessage(e,t){this[T].emit("message",e,t)}function receiverOnPing(e){const t=this[T];if(t._autoPong)t.pong(e,!this._isServer,O);t.emit("ping",e)}function receiverOnPong(e){this[T].emit("pong",e)}function resume(e){e.resume()}function senderOnError(e){const t=this[T];if(t.readyState===WebSocket.CLOSED)return;if(t.readyState===WebSocket.OPEN){t._readyState=WebSocket.CLOSING;setCloseTimer(t)}this._socket.end();if(!t._errorEmitted){t._errorEmitted=true;t.emit("error",e)}}function setCloseTimer(e){e._closeTimer=setTimeout(e._socket.destroy.bind(e._socket),B)}function socketOnClose(){const e=this[T];this.removeListener("close",socketOnClose);this.removeListener("data",socketOnData);this.removeListener("end",socketOnEnd);e._readyState=WebSocket.CLOSING;let t;if(!this._readableState.endEmitted&&!e._closeFrameReceived&&!e._receiver._writableState.errorEmitted&&(t=e._socket.read())!==null){e._receiver.write(t)}e._receiver.end();this[T]=undefined;clearTimeout(e._closeTimer);if(e._receiver._writableState.finished||e._receiver._writableState.errorEmitted){e.emitClose()}else{e._receiver.on("error",receiverOnFinish);e._receiver.on("finish",receiverOnFinish)}}function socketOnData(e){if(!this[T]._receiver.write(e)){this.pause()}}function socketOnEnd(){const e=this[T];e._readyState=WebSocket.CLOSING;e._receiver.end();this.end()}function socketOnError(){const e=this[T];this.removeListener("error",socketOnError);this.on("error",O);if(e){e._readyState=WebSocket.CLOSING;this.destroy()}}},6604:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.bot=void 0;const a=r(2706);(0,a.config)();const n=r(6710);const i=r(9875);const s=new n.ActionCodesClient;t.bot=new i.Telegraf(process.env.BOT_TOKEN);const o=new Map;t.bot.start((e=>{e.reply("Welcome! This bot is an example of how to use Action Codes with Telegram")}));t.bot.command("message",(async e=>{const t=e.from?.id;if(!t)return;o.set(t,{step:"waiting_for_message"});e.reply("Please enter a message to sign with Action Codes:")}));t.bot.command("transfer",(async e=>{const t=e.from?.id;if(!t)return;o.set(t,{step:"waiting_for_transfer_params"});e.reply("Please enter transfer parameters in this format:\n\n<token> <to_address> <amount>\n\nExample: USDC 6tBUD4bQzNehG3hQVtVFaGxre2P8rQoH99pubRtgSbSb 100")}));t.bot.on("text",(async e=>{const t=e.from?.id;if(!t)return;const r=o.get(t);if(!r)return;const a=e.message.text;if(r.step==="waiting_for_message"){r.message=a;r.step="waiting_for_code";e.reply("Please enter the 8-digit one-time action code:\n\nVisit actioncode.app to get a one-time code and submit it here.")}else if(r.step==="waiting_for_transfer_params"){const t=a.trim().split(" ");if(t.length!==3){return e.reply("❌ Invalid format. Please use: <token> <to_address> <amount>\n\nExample: USDC 6tBUD4bQzNehG3hQVtVFaGxre2P8rQoH99pubRtgSbSb 100")}const[n,i,s]=t;const o=parseFloat(s);console.log("Parsed amount:",o);if(isNaN(o)||o<=0){return e.reply("❌ Invalid amount. Please enter a valid positive number.")}console.log("Parsed transfer parameters:",{token:n,toAddress:i,amount:o});r.transferParams={token:n,to:i,amount:o};r.step="waiting_for_code";e.reply(`Transfer Parameters:\nToken: ${n}\nTo: ${i}\nAmount: ${o}\n\nPlease enter the 8-digit one-time action code:\n\nVisit actioncode.app to get a one-time code and submit it here.`)}else if(r.step==="waiting_for_code"){const n=a.trim();if(!/^\d{8}$/.test(n)){return e.reply("Please enter a valid 8-digit action code.")}r.code=n;r.step="processing";const i=await e.reply("⏳ Processing... Please confirm the action on actioncode.app");try{if(r.transferParams){await handleTransferFlow(e,r,i)}else{await handleMessageFlow(e,r,i)}}catch(t){console.error("Error processing action code:",t);await e.reply("❌ Error processing the action code. Please make sure the code is valid and try again.")}o.delete(t)}}));async function handleTransferFlow(e,t,r){try{const a=await s.resolve(t.code);const n=a.pubkey;console.log("Resolved action code:",{code:t.code,userAccount:n});const{token:i,to:o,amount:d}=t.transferParams;console.log("Transfer parameters for API call:",{token:i,to:o,amount:d});const p={type:"transaction",account:n};const c=`https://solana-sbl.dial.to/api/v0/transfer/${i}?to=${o}&amount=${d}`;console.log("Dialect API request:",{url:c,method:"POST",body:p});const l=await fetch(c,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(p)});console.log("Dialect API response status:",l.status);console.log("Dialect API response status text:",l.statusText);if(!l.ok){const a=await l.text();console.log("Dialect API error response:",a);if(l.status===500){console.log("Trying with different token...");const a=i==="USDC"?"SOL":"USDC";const n=`https://solana-sbl.dial.to/api/v0/transfer/${a}?to=${o}&amount=${d}`;console.log("Trying alternative token:",a);const c=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(p)});if(c.ok){const n=await c.json();console.log("Dialect API alternative token success response:",n);const i=n.transaction;if(!i){throw new Error("No transaction received from Dialect API alternative token")}await s.attachTransaction(t.code,i);await e.telegram.editMessageText(e.chat.id,r.message_id,undefined,`⏳ Pending/Waiting for transaction signature...\n\nToken changed to ${a} due to API limitations.\n\nPlease complete the action on actioncode.app`);let o=null;for await(const r of s.observeStatus(t.code,{interval:2e3,timeout:12e4})){console.log("Status update:",r);if(r.status==="finalized"&&r.finalizedSignature){o=r;break}else if(r.status==="expired"){await e.reply("❌ Action code has expired. Please try again with a new code.");return}else if(r.status==="error"){await e.reply("❌ Error processing the action code. Please make sure the code is valid and try again.");return}}if(o&&o.finalizedSignature){await e.reply(`✅ Transfer transaction signed successfully!\n\nTransaction Signature: ${o.finalizedSignature}\n\nNote: Token was changed to ${a} due to API limitations.`)}else{await e.reply("❌ Failed to get transaction signature. Please try again.")}return}else{const a=await c.text();console.log("Dialect API alternative token error response:",a);if(d>.1){console.log("Trying with smaller amount...");const a=Math.max(.1,d/10);const n=`https://solana-sbl.dial.to/api/v0/transfer/${i}?to=${o}&amount=${a}`;const c=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(p)});if(c.ok){const n=await c.json();console.log("Dialect API retry success response:",n);const o=n.transaction;if(!o){throw new Error("No transaction received from Dialect API retry")}await s.attachTransaction(t.code,o);await e.telegram.editMessageText(e.chat.id,r.message_id,undefined,`⏳ Pending/Waiting for transaction signature...\n\nAmount adjusted to ${a} ${i} due to API limitations.\n\nPlease complete the action on actioncode.app`);let d=null;for await(const r of s.observeStatus(t.code,{interval:2e3,timeout:12e4})){console.log("Status update:",r);if(r.status==="finalized"&&r.finalizedSignature){d=r;break}else if(r.status==="expired"){await e.reply("❌ Action code has expired. Please try again with a new code.");return}else if(r.status==="error"){await e.reply("❌ Error processing the action code. Please make sure the code is valid and try again.");return}}if(d&&d.finalizedSignature){await e.reply(`✅ Transfer transaction signed successfully!\n\nTransaction Signature: ${d.finalizedSignature}\n\nNote: Amount was adjusted to ${a} ${i} due to API limitations.`)}else{await e.reply("❌ Failed to get transaction signature. Please try again.")}return}else{const e=await c.text();console.log("Dialect API retry error response:",e)}}}}throw new Error(`Dialect API error: ${l.statusText} - ${a}`)}const u=await l.json();console.log("Dialect API success response:",u);const m=u.transaction;if(!m){throw new Error("No transaction received from Dialect API")}await s.attachTransaction(t.code,m);await e.telegram.editMessageText(e.chat.id,r.message_id,undefined,"⏳ Pending/Waiting for transaction signature...\n\nPlease complete the action on actioncode.app");let f=null;for await(const r of s.observeStatus(t.code,{interval:2e3,timeout:12e4})){console.log("Status update:",r);if(r.status==="finalized"&&r.finalizedSignature){f=r;break}else if(r.status==="expired"){await e.reply("❌ Action code has expired. Please try again with a new code.");return}else if(r.status==="error"){await e.reply("❌ Error processing the action code. Please make sure the code is valid and try again.");return}}if(f&&f.finalizedSignature){await e.reply(`✅ Transfer transaction signed successfully!\n\nTransaction Signature: ${f.finalizedSignature}`)}else{await e.reply("❌ Failed to get transaction signature. Please try again.")}}catch(t){console.error("Error in transfer flow:",t);const r=t instanceof Error?t.message:"Unknown error occurred";await e.reply(`❌ Error processing transfer: ${r}`)}}async function handleMessageFlow(e,t,r){await s.attachMessage(t.code,t.message);await e.telegram.editMessageText(e.chat.id,r.message_id,undefined,"⏳ Pending/Waiting for action completion...\n\nPlease complete the action on actioncode.app");let a=null;for await(const r of s.observeStatus(t.code,{interval:2e3,timeout:12e4})){console.log("Status update:",r);if(r.status==="finalized"&&r.signedMessage){a=r;break}else if(r.status==="expired"){await e.reply("❌ Action code has expired. Please try again with a new code.");return}else if(r.status==="error"){await e.reply("❌ Error processing the action code. Please make sure the code is valid and try again.");return}}if(a&&a.signedMessage){await e.reply(`✅ Message signed successfully!\n\nSigned Message: ${a.signedMessage}`)}else{await e.reply("❌ Failed to get signed message. Please try again.")}}t.bot.launch()},164:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.run=void 0;const r=process.env.PORT&&parseInt(process.env.PORT,10)||3e3;const a=`${process.env.VERCEL_URL}`;const run=async(e,t,n)=>{console.log("Bot runs in production mode");console.log(`setting webhook: ${a}`);if(!a){throw new Error("VERCEL_URL is not set.")}const i=await n.telegram.getWebhookInfo();if(i.url!==a+"/api"){console.log(`deleting webhook ${a}`);await n.telegram.deleteWebhook();console.log(`setting webhook: ${a}/api`);await n.telegram.setWebhook(`${a}/api`)}if(e.method==="POST"){await n.handleUpdate(e.body,t)}else{t.status(200).json("Listening to bot events...")}console.log(`starting webhook on port: ${r}`)};t.run=run},5960:module=>{module.exports=eval("require")("encoding")},5545:module=>{module.exports=eval("require")("supports-color")},181:e=>{"use strict";e.exports=require("buffer")},6982:e=>{"use strict";e.exports=require("crypto")},4434:e=>{"use strict";e.exports=require("events")},9896:e=>{"use strict";e.exports=require("fs")},1943:e=>{"use strict";e.exports=require("fs/promises")},8611:e=>{"use strict";e.exports=require("http")},5692:e=>{"use strict";e.exports=require("https")},9278:e=>{"use strict";e.exports=require("net")},7598:e=>{"use strict";e.exports=require("node:crypto")},857:e=>{"use strict";e.exports=require("os")},6928:e=>{"use strict";e.exports=require("path")},4876:e=>{"use strict";e.exports=require("punycode")},2203:e=>{"use strict";e.exports=require("stream")},4756:e=>{"use strict";e.exports=require("tls")},2018:e=>{"use strict";e.exports=require("tty")},7016:e=>{"use strict";e.exports=require("url")},9023:e=>{"use strict";e.exports=require("util")},3106:e=>{"use strict";e.exports=require("zlib")},5460:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.createMemoInstruction=t.MEMO_PROGRAM_ID=void 0;const a=r(181);const n=r(8108);t.MEMO_PROGRAM_ID=new n.PublicKey("MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr");function createMemoInstruction(e,r){const i=r==null?[]:r.map((function(e){return{pubkey:e,isSigner:true,isWritable:false}}));return new n.TransactionInstruction({keys:i,programId:t.MEMO_PROGRAM_ID,data:a.Buffer.from(e,"utf8")})}t.createMemoInstruction=createMemoInstruction},9491:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.webApp=t.login=t.pay=t.game=t.switchToCurrentChat=t.switchToChat=t.callback=t.url=t.channelRequest=t.groupRequest=t.botRequest=t.userRequest=t.pollRequest=t.locationRequest=t.contactRequest=t.text=void 0;function text(e,t=false){return{text:e,hide:t}}t.text=text;function contactRequest(e,t=false){return{text:e,request_contact:true,hide:t}}t.contactRequest=contactRequest;function locationRequest(e,t=false){return{text:e,request_location:true,hide:t}}t.locationRequest=locationRequest;function pollRequest(e,t,r=false){return{text:e,request_poll:{type:t},hide:r}}t.pollRequest=pollRequest;function userRequest(e,t,r,a=false){return{text:e,request_users:{request_id:t,...r},hide:a}}t.userRequest=userRequest;function botRequest(e,t,r,a=false){return{text:e,request_users:{request_id:t,user_is_bot:true,...r},hide:a}}t.botRequest=botRequest;function groupRequest(e,t,r,a=false){return{text:e,request_chat:{request_id:t,chat_is_channel:false,...r},hide:a}}t.groupRequest=groupRequest;function channelRequest(e,t,r,a=false){return{text:e,request_chat:{request_id:t,chat_is_channel:true,...r},hide:a}}t.channelRequest=channelRequest;function url(e,t,r=false){return{text:e,url:t,hide:r}}t.url=url;function callback(e,t,r=false){return{text:e,callback_data:t,hide:r}}t.callback=callback;function switchToChat(e,t,r=false){return{text:e,switch_inline_query:t,hide:r}}t.switchToChat=switchToChat;function switchToCurrentChat(e,t,r=false){return{text:e,switch_inline_query_current_chat:t,hide:r}}t.switchToCurrentChat=switchToCurrentChat;function game(e,t=false){return{text:e,callback_game:{},hide:t}}t.game=game;function pay(e,t=false){return{text:e,pay:true,hide:t}}t.pay=pay;function login(e,t,r={},a=false){return{text:e,login_url:{...r,url:t},hide:a}}t.login=login;function webApp(e,t,r=false){return{text:e,web_app:{url:t},hide:r}}t.webApp=webApp},1389:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.Composer=void 0;const n=a(r(6232));const i=r(5136);const s=r(3808);function always(e){return()=>e}const o=always(Promise.resolve());class Composer{constructor(...e){this.handler=Composer.compose(e)}use(...e){this.handler=Composer.compose([this.handler,...e]);return this}guard(e,...t){return this.use(Composer.guard(e,...t))}on(e,...t){return this.use(Composer.on(e,...t))}hears(e,...t){return this.use(Composer.hears(e,...t))}command(e,...t){return this.use(Composer.command(e,...t))}action(e,...t){return this.use(Composer.action(e,...t))}inlineQuery(e,...t){return this.use(Composer.inlineQuery(e,...t))}gameQuery(...e){return this.use(Composer.gameQuery(...e))}reaction(e,...t){return this.use(Composer.reaction(e,...t))}drop(e){return this.use(Composer.drop(e))}filter(e){return this.use(Composer.filter(e))}entity(e,...t){return this.use(Composer.entity(e,...t))}email(e,...t){return this.use(Composer.email(e,...t))}url(e,...t){return this.use(Composer.url(e,...t))}textLink(e,...t){return this.use(Composer.textLink(e,...t))}textMention(e,...t){return this.use(Composer.textMention(e,...t))}mention(e,...t){return this.use(Composer.mention(e,...t))}phone(e,...t){return this.use(Composer.phone(e,...t))}hashtag(e,...t){return this.use(Composer.hashtag(e,...t))}cashtag(e,...t){return this.use(Composer.cashtag(e,...t))}spoiler(e,...t){return this.use(Composer.spoiler(e,...t))}start(...e){const t=Composer.compose(e);return this.command("start",((e,r)=>t(Object.assign(e,{startPayload:e.payload}),r)))}help(...e){return this.command("help",...e)}settings(...e){return this.command("settings",...e)}middleware(){return this.handler}static reply(...e){return t=>t.reply(...e)}static catch(e,...t){const r=Composer.compose(t);return(t,a)=>Promise.resolve(r(t,a)).catch((r=>e(r,t)))}static fork(e){const t=Composer.unwrap(e);return async(e,r)=>{await Promise.all([t(e,o),r()])}}static tap(e){const t=Composer.unwrap(e);return(e,r)=>Promise.resolve(t(e,o)).then((()=>r()))}static passThru(){return(e,t)=>t()}static lazy(e){if(typeof e!=="function"){throw new Error("Argument must be a function")}return(t,r)=>Promise.resolve(e(t)).then((e=>Composer.unwrap(e)(t,r)))}static log(e=console.log){return(t,r)=>{e(JSON.stringify(t.update,null,2));return r()}}static branch(e,t,r){if(typeof e!=="function"){return Composer.unwrap(e?t:r)}return Composer.lazy((a=>Promise.resolve(e(a)).then((e=>e?t:r))))}static optional(e,...t){return Composer.branch(e,Composer.compose(t),Composer.passThru())}static filter(e){return Composer.branch(e,Composer.passThru(),o)}static drop(e){return Composer.branch(e,o,Composer.passThru())}static dispatch(e,t){return Composer.lazy((r=>Promise.resolve(e(r)).then((e=>t[e]))))}static guard(e,...t){return Composer.optional((t=>e(t.update)),...t)}static on(e,...t){const r=Array.isArray(e)?e:[e];const predicate=e=>{for(const t of r){if(typeof t!=="string"?t(e):t in e||"message"in e&&t in e.message){return true}}return false};return Composer.optional((e=>predicate(e.update)),...t)}static entity(e,...t){if(typeof e!=="function"){const r=normaliseTextArguments(e);return Composer.entity((({type:e})=>r.includes(e)),...t)}return Composer.optional((t=>{var r;const a=(r=t.message)!==null&&r!==void 0?r:t.channelPost;if(a===undefined){return false}const n=getText(a);const i=getEntities(a);if(n===undefined)return false;return i.some((r=>e(r,n.substring(r.offset,r.offset+r.length),t)))}),...t)}static entityText(e,t,...r){if(r.length===0){return Array.isArray(t)?Composer.entity(e,...t):Composer.entity(e,t)}const a=normaliseTriggers(t);return Composer.entity((({type:t},r,n)=>{if(t!==e){return false}for(const e of a){if(n.match=e(r,n)){return true}}return false}),...r)}static email(e,...t){return Composer.entityText("email",e,...t)}static phone(e,...t){return Composer.entityText("phone_number",e,...t)}static url(e,...t){return Composer.entityText("url",e,...t)}static textLink(e,...t){return Composer.entityText("text_link",e,...t)}static textMention(e,...t){return Composer.entityText("text_mention",e,...t)}static mention(e,...t){return Composer.entityText("mention",normaliseTextArguments(e,"@"),...t)}static hashtag(e,...t){return Composer.entityText("hashtag",normaliseTextArguments(e,"#"),...t)}static cashtag(e,...t){return Composer.entityText("cashtag",normaliseTextArguments(e,"$"),...t)}static spoiler(e,...t){return Composer.entityText("spoiler",e,...t)}static match(e,...t){const r=Composer.compose(t);return(t,a)=>{var n,i,s,o;const d=(s=(i=(n=getText(t.message))!==null&&n!==void 0?n:getText(t.channelPost))!==null&&i!==void 0?i:getText(t.callbackQuery))!==null&&s!==void 0?s:(o=t.inlineQuery)===null||o===void 0?void 0:o.query;if(d===undefined)return a();for(const n of e){const e=n(d,t);if(e)return r(Object.assign(t,{match:e}),a)}return a()}}static hears(e,...t){return Composer.on("text",Composer.match(normaliseTriggers(e),...t))}static command(e,...t){if(t.length===0)return Composer.entity("bot_command",e);const r=normaliseTriggers(e);const a=(0,i.message)("text");const n=Composer.compose(t);return Composer.on(a,((e,t)=>{const{entities:a}=e.message;const i=a===null||a===void 0?void 0:a[0];if((i===null||i===void 0?void 0:i.type)!=="bot_command")return t();if(i.offset>0)return t();const o=i.length;const d=e.message.text;const[p,c]=d.slice(0,o).split("@");if(!p)return t();if(c&&c.toLowerCase()!==e.me.toLowerCase())return t();const l=p.slice(1);for(const i of r){const r=i(l,e);if(r){const i=o+1;const p=d.slice(i);const c=Object.assign(e,{match:r,command:l,payload:p,args:[]});let u=undefined;Object.defineProperty(c,"args",{enumerable:true,configurable:true,get(){if(u!=null)return u;return u=(0,s.argsParser)(p,a,i)},set(e){u=e}});return n(c,t)}}return t()}))}static action(e,...t){return Composer.on("callback_query",Composer.match(normaliseTriggers(e),...t))}static inlineQuery(e,...t){return Composer.on("inline_query",Composer.match(normaliseTriggers(e),...t))}static reaction(e,...t){const r=Array.isArray(e)?e:[e];const a=Composer.compose(t);return Composer.on("message_reaction",((e,t)=>{const n=r.find((t=>typeof t==="string"&&t.startsWith("-")?e.reactions.removed.has(t.slice(1)):e.reactions.added.has(t)));if(n)return a(Object.assign(e,{match:n}),t);return t()}))}static acl(e,...t){if(typeof e==="function"){return Composer.optional(e,...t)}const r=Array.isArray(e)?e:[e];return Composer.optional((e=>!e.from||r.includes(e.from.id)),...t)}static memberStatus(e,...t){const r=Array.isArray(e)?e:[e];return Composer.optional((async e=>{if(e.message===undefined)return false;const t=await e.getChatMember(e.message.from.id);return r.includes(t.status)}),...t)}static admin(...e){return Composer.memberStatus(["administrator","creator"],...e)}static creator(...e){return Composer.memberStatus("creator",...e)}static chatType(e,...t){const r=Array.isArray(e)?e:[e];return Composer.optional((e=>{const t=e.chat;return t!==undefined&&r.includes(t.type)}),...t)}static privateChat(...e){return Composer.chatType("private",...e)}static groupChat(...e){return Composer.chatType(["group","supergroup"],...e)}static gameQuery(...e){return Composer.guard((0,i.callbackQuery)("game_short_name"),...e)}static unwrap(e){if(!e){throw new Error("Handler is undefined")}return"middleware"in e?e.middleware():e}static compose(e){if(!Array.isArray(e)){throw new Error("Middlewares must be an array")}if(e.length===0){return Composer.passThru()}if(e.length===1){return Composer.unwrap(e[0])}return(t,r)=>{let a=-1;return execute(0,t);async function execute(t,i){var s;if(!(i instanceof n.default)){throw new Error("next(ctx) called with invalid context")}if(t<=a){throw new Error("next() called multiple times")}a=t;const o=Composer.unwrap((s=e[t])!==null&&s!==void 0?s:r);await o(i,(async(e=i)=>{await execute(t+1,e)}))}}}}t.Composer=Composer;Composer.mount=Composer.on;function escapeRegExp(e){return e.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&")}function normaliseTriggers(e){if(!Array.isArray(e))e=[e];return e.map((e=>{if(!e)throw new Error("Invalid trigger");if(typeof e==="function")return e;if(e instanceof RegExp)return(t="")=>{e.lastIndex=0;return e.exec(t)};const t=new RegExp(`^${escapeRegExp(e)}$`);return e=>t.exec(e)}))}function getEntities(e){var t,r;if(e==null)return[];if("caption_entities"in e)return(t=e.caption_entities)!==null&&t!==void 0?t:[];if("entities"in e)return(r=e.entities)!==null&&r!==void 0?r:[];return[]}function getText(e){if(e==null)return undefined;if("caption"in e)return e.caption;if("text"in e)return e.text;if("data"in e)return e.data;if("game_short_name"in e)return e.game_short_name;return undefined}function normaliseTextArguments(e,t=""){const r=Array.isArray(e)?e:[e];return r.filter(Boolean).map((e=>t&&typeof e==="string"&&!e.startsWith(t)?`${t}${e}`:e))}t["default"]=Composer},6232:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.Context=void 0;const n=a(r(9592));const i=r(7791);const s=(0,n.default)("telegraf:context");class Context{constructor(e,t,r){this.update=e;this.telegram=t;this.botInfo=r;this.state={}}get updateType(){for(const e in this.update){if(typeof this.update[e]==="object")return e}throw new Error(`Cannot determine \`updateType\` of ${JSON.stringify(this.update)}`)}get me(){var e;return(e=this.botInfo)===null||e===void 0?void 0:e.username}get tg(){return this.telegram}get message(){return this.update.message}get editedMessage(){return this.update.edited_message}get inlineQuery(){return this.update.inline_query}get shippingQuery(){return this.update.shipping_query}get preCheckoutQuery(){return this.update.pre_checkout_query}get chosenInlineResult(){return this.update.chosen_inline_result}get channelPost(){return this.update.channel_post}get editedChannelPost(){return this.update.edited_channel_post}get messageReaction(){return this.update.message_reaction}get messageReactionCount(){return this.update.message_reaction_count}get callbackQuery(){return this.update.callback_query}get poll(){return this.update.poll}get pollAnswer(){return this.update.poll_answer}get myChatMember(){return this.update.my_chat_member}get chatMember(){return this.update.chat_member}get chatJoinRequest(){return this.update.chat_join_request}get chatBoost(){return this.update.chat_boost}get removedChatBoost(){return this.update.removed_chat_boost}get msg(){return getMessageFromAnySource(this)}get msgId(){return getMsgIdFromAnySource(this)}get chat(){var e,t,r,a,n,i,s;return(s=(i=(n=(a=(r=(t=(e=this.msg)!==null&&e!==void 0?e:this.messageReaction)!==null&&t!==void 0?t:this.messageReactionCount)!==null&&r!==void 0?r:this.chatJoinRequest)!==null&&a!==void 0?a:this.chatMember)!==null&&n!==void 0?n:this.myChatMember)!==null&&i!==void 0?i:this.removedChatBoost)===null||s===void 0?void 0:s.chat}get senderChat(){const e=this.msg;return(e===null||e===void 0?void 0:e.has("sender_chat"))&&e.sender_chat}get from(){return getUserFromAnySource(this)}get inlineMessageId(){var e,t;return(t=(e=this.callbackQuery)!==null&&e!==void 0?e:this.chosenInlineResult)===null||t===void 0?void 0:t.inline_message_id}get passportData(){var e;if(this.message==null)return undefined;if(!("passport_data"in this.message))return undefined;return(e=this.message)===null||e===void 0?void 0:e.passport_data}get webAppData(){if(!(this.message&&"web_app_data"in this.message))return undefined;const{data:e,button_text:t}=this.message.web_app_data;return{data:{json(){return JSON.parse(e)},text(){return e}},button_text:t}}get webhookReply(){return this.telegram.webhookReply}set webhookReply(e){this.telegram.webhookReply=e}get reactions(){return i.MessageReactions.from(this)}assert(e,t){if(e===undefined){throw new TypeError(`Telegraf: "${t}" isn't available for "${this.updateType}"`)}}has(e){if(!Array.isArray(e))e=[e];for(const t of e)if(typeof t!=="string"?t(this.update):t in this.update)return true;return false}get text(){return getTextAndEntitiesFromAnySource(this)[0]}entities(...e){const[t="",r=[]]=getTextAndEntitiesFromAnySource(this);return(e.length?r.filter((t=>e.includes(t.type))):r).map((e=>({...e,fragment:t.slice(e.offset,e.offset+e.length)})))}answerInlineQuery(...e){this.assert(this.inlineQuery,"answerInlineQuery");return this.telegram.answerInlineQuery(this.inlineQuery.id,...e)}answerCbQuery(...e){this.assert(this.callbackQuery,"answerCbQuery");return this.telegram.answerCbQuery(this.callbackQuery.id,...e)}answerGameQuery(...e){this.assert(this.callbackQuery,"answerGameQuery");return this.telegram.answerGameQuery(this.callbackQuery.id,...e)}getUserChatBoosts(){this.assert(this.chat,"getUserChatBoosts");this.assert(this.from,"getUserChatBoosts");return this.telegram.getUserChatBoosts(this.chat.id,this.from.id)}answerShippingQuery(...e){this.assert(this.shippingQuery,"answerShippingQuery");return this.telegram.answerShippingQuery(this.shippingQuery.id,...e)}answerPreCheckoutQuery(...e){this.assert(this.preCheckoutQuery,"answerPreCheckoutQuery");return this.telegram.answerPreCheckoutQuery(this.preCheckoutQuery.id,...e)}editMessageText(e,t){var r,a;this.assert((r=this.msgId)!==null&&r!==void 0?r:this.inlineMessageId,"editMessageText");return this.telegram.editMessageText((a=this.chat)===null||a===void 0?void 0:a.id,this.msgId,this.inlineMessageId,e,t)}editMessageCaption(e,t){var r,a;this.assert((r=this.msgId)!==null&&r!==void 0?r:this.inlineMessageId,"editMessageCaption");return this.telegram.editMessageCaption((a=this.chat)===null||a===void 0?void 0:a.id,this.msgId,this.inlineMessageId,e,t)}editMessageMedia(e,t){var r,a;this.assert((r=this.msgId)!==null&&r!==void 0?r:this.inlineMessageId,"editMessageMedia");return this.telegram.editMessageMedia((a=this.chat)===null||a===void 0?void 0:a.id,this.msgId,this.inlineMessageId,e,t)}editMessageReplyMarkup(e){var t,r;this.assert((t=this.msgId)!==null&&t!==void 0?t:this.inlineMessageId,"editMessageReplyMarkup");return this.telegram.editMessageReplyMarkup((r=this.chat)===null||r===void 0?void 0:r.id,this.msgId,this.inlineMessageId,e)}editMessageLiveLocation(e,t,r){var a,n;this.assert((a=this.msgId)!==null&&a!==void 0?a:this.inlineMessageId,"editMessageLiveLocation");return this.telegram.editMessageLiveLocation((n=this.chat)===null||n===void 0?void 0:n.id,this.msgId,this.inlineMessageId,e,t,r)}stopMessageLiveLocation(e){var t,r;this.assert((t=this.msgId)!==null&&t!==void 0?t:this.inlineMessageId,"stopMessageLiveLocation");return this.telegram.stopMessageLiveLocation((r=this.chat)===null||r===void 0?void 0:r.id,this.msgId,this.inlineMessageId,e)}sendMessage(e,t){this.assert(this.chat,"sendMessage");return this.telegram.sendMessage(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}reply(...e){return this.sendMessage(...e)}getChat(...e){this.assert(this.chat,"getChat");return this.telegram.getChat(this.chat.id,...e)}exportChatInviteLink(...e){this.assert(this.chat,"exportChatInviteLink");return this.telegram.exportChatInviteLink(this.chat.id,...e)}createChatInviteLink(...e){this.assert(this.chat,"createChatInviteLink");return this.telegram.createChatInviteLink(this.chat.id,...e)}editChatInviteLink(...e){this.assert(this.chat,"editChatInviteLink");return this.telegram.editChatInviteLink(this.chat.id,...e)}revokeChatInviteLink(...e){this.assert(this.chat,"revokeChatInviteLink");return this.telegram.revokeChatInviteLink(this.chat.id,...e)}banChatMember(...e){this.assert(this.chat,"banChatMember");return this.telegram.banChatMember(this.chat.id,...e)}get kickChatMember(){return this.banChatMember}unbanChatMember(...e){this.assert(this.chat,"unbanChatMember");return this.telegram.unbanChatMember(this.chat.id,...e)}restrictChatMember(...e){this.assert(this.chat,"restrictChatMember");return this.telegram.restrictChatMember(this.chat.id,...e)}promoteChatMember(...e){this.assert(this.chat,"promoteChatMember");return this.telegram.promoteChatMember(this.chat.id,...e)}setChatAdministratorCustomTitle(...e){this.assert(this.chat,"setChatAdministratorCustomTitle");return this.telegram.setChatAdministratorCustomTitle(this.chat.id,...e)}setChatPhoto(...e){this.assert(this.chat,"setChatPhoto");return this.telegram.setChatPhoto(this.chat.id,...e)}deleteChatPhoto(...e){this.assert(this.chat,"deleteChatPhoto");return this.telegram.deleteChatPhoto(this.chat.id,...e)}setChatTitle(...e){this.assert(this.chat,"setChatTitle");return this.telegram.setChatTitle(this.chat.id,...e)}setChatDescription(...e){this.assert(this.chat,"setChatDescription");return this.telegram.setChatDescription(this.chat.id,...e)}pinChatMessage(...e){this.assert(this.chat,"pinChatMessage");return this.telegram.pinChatMessage(this.chat.id,...e)}unpinChatMessage(...e){this.assert(this.chat,"unpinChatMessage");return this.telegram.unpinChatMessage(this.chat.id,...e)}unpinAllChatMessages(...e){this.assert(this.chat,"unpinAllChatMessages");return this.telegram.unpinAllChatMessages(this.chat.id,...e)}leaveChat(...e){this.assert(this.chat,"leaveChat");return this.telegram.leaveChat(this.chat.id,...e)}setChatPermissions(...e){this.assert(this.chat,"setChatPermissions");return this.telegram.setChatPermissions(this.chat.id,...e)}getChatAdministrators(...e){this.assert(this.chat,"getChatAdministrators");return this.telegram.getChatAdministrators(this.chat.id,...e)}getChatMember(...e){this.assert(this.chat,"getChatMember");return this.telegram.getChatMember(this.chat.id,...e)}getChatMembersCount(...e){this.assert(this.chat,"getChatMembersCount");return this.telegram.getChatMembersCount(this.chat.id,...e)}setPassportDataErrors(e){this.assert(this.from,"setPassportDataErrors");return this.telegram.setPassportDataErrors(this.from.id,e)}sendPhoto(e,t){this.assert(this.chat,"sendPhoto");return this.telegram.sendPhoto(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithPhoto(...e){return this.sendPhoto(...e)}sendMediaGroup(e,t){this.assert(this.chat,"sendMediaGroup");return this.telegram.sendMediaGroup(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithMediaGroup(...e){return this.sendMediaGroup(...e)}sendAudio(e,t){this.assert(this.chat,"sendAudio");return this.telegram.sendAudio(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithAudio(...e){return this.sendAudio(...e)}sendDice(e){this.assert(this.chat,"sendDice");return this.telegram.sendDice(this.chat.id,{message_thread_id:getThreadId(this),...e})}replyWithDice(...e){return this.sendDice(...e)}sendDocument(e,t){this.assert(this.chat,"sendDocument");return this.telegram.sendDocument(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithDocument(...e){return this.sendDocument(...e)}sendSticker(e,t){this.assert(this.chat,"sendSticker");return this.telegram.sendSticker(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithSticker(...e){return this.sendSticker(...e)}sendVideo(e,t){this.assert(this.chat,"sendVideo");return this.telegram.sendVideo(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithVideo(...e){return this.sendVideo(...e)}sendAnimation(e,t){this.assert(this.chat,"sendAnimation");return this.telegram.sendAnimation(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithAnimation(...e){return this.sendAnimation(...e)}sendVideoNote(e,t){this.assert(this.chat,"sendVideoNote");return this.telegram.sendVideoNote(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithVideoNote(...e){return this.sendVideoNote(...e)}sendInvoice(e,t){this.assert(this.chat,"sendInvoice");return this.telegram.sendInvoice(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithInvoice(...e){return this.sendInvoice(...e)}sendGame(e,t){this.assert(this.chat,"sendGame");return this.telegram.sendGame(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithGame(...e){return this.sendGame(...e)}sendVoice(e,t){this.assert(this.chat,"sendVoice");return this.telegram.sendVoice(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}replyWithVoice(...e){return this.sendVoice(...e)}sendPoll(e,t,r){this.assert(this.chat,"sendPoll");return this.telegram.sendPoll(this.chat.id,e,t,{message_thread_id:getThreadId(this),...r})}replyWithPoll(...e){return this.sendPoll(...e)}sendQuiz(e,t,r){this.assert(this.chat,"sendQuiz");return this.telegram.sendQuiz(this.chat.id,e,t,{message_thread_id:getThreadId(this),...r})}replyWithQuiz(...e){return this.sendQuiz(...e)}stopPoll(...e){this.assert(this.chat,"stopPoll");return this.telegram.stopPoll(this.chat.id,...e)}sendChatAction(e,t){this.assert(this.chat,"sendChatAction");return this.telegram.sendChatAction(this.chat.id,e,{message_thread_id:getThreadId(this),...t})}async persistentChatAction(e,t,{intervalDuration:r,...a}={}){await this.sendChatAction(e,{...a});const n=setInterval((()=>this.sendChatAction(e,{...a}).catch((e=>{s("Ignored error while persisting sendChatAction:",e)}))),r!==null&&r!==void 0?r:4e3);try{await t()}finally{clearInterval(n)}}replyWithChatAction(...e){return this.sendChatAction(...e)}react(e,t){this.assert(this.chat,"setMessageReaction");this.assert(this.msgId,"setMessageReaction");const r=e?Array.isArray(e)?e:[e]:undefined;const a=r===null||r===void 0?void 0:r.map((e=>typeof e==="string"?i.Digit.has(e[0])?{type:"custom_emoji",custom_emoji_id:e}:{type:"emoji",emoji:e}:e));return this.telegram.setMessageReaction(this.chat.id,this.msgId,a,t)}sendLocation(e,t,r){this.assert(this.chat,"sendLocation");return this.telegram.sendLocation(this.chat.id,e,t,{message_thread_id:getThreadId(this),...r})}replyWithLocation(...e){return this.sendLocation(...e)}sendVenue(e,t,r,a,n){this.assert(this.chat,"sendVenue");return this.telegram.sendVenue(this.chat.id,e,t,r,a,{message_thread_id:getThreadId(this),...n})}replyWithVenue(...e){return this.sendVenue(...e)}sendContact(e,t,r){this.assert(this.chat,"sendContact");return this.telegram.sendContact(this.chat.id,e,t,{message_thread_id:getThreadId(this),...r})}replyWithContact(...e){return this.sendContact(...e)}getStickerSet(e){return this.telegram.getStickerSet(e)}setChatStickerSet(e){this.assert(this.chat,"setChatStickerSet");return this.telegram.setChatStickerSet(this.chat.id,e)}deleteChatStickerSet(){this.assert(this.chat,"deleteChatStickerSet");return this.telegram.deleteChatStickerSet(this.chat.id)}createForumTopic(...e){this.assert(this.chat,"createForumTopic");return this.telegram.createForumTopic(this.chat.id,...e)}editForumTopic(e){var t;this.assert(this.chat,"editForumTopic");this.assert((t=this.message)===null||t===void 0?void 0:t.message_thread_id,"editForumTopic");return this.telegram.editForumTopic(this.chat.id,this.message.message_thread_id,e)}closeForumTopic(){var e;this.assert(this.chat,"closeForumTopic");this.assert((e=this.message)===null||e===void 0?void 0:e.message_thread_id,"closeForumTopic");return this.telegram.closeForumTopic(this.chat.id,this.message.message_thread_id)}reopenForumTopic(){var e;this.assert(this.chat,"reopenForumTopic");this.assert((e=this.message)===null||e===void 0?void 0:e.message_thread_id,"reopenForumTopic");return this.telegram.reopenForumTopic(this.chat.id,this.message.message_thread_id)}deleteForumTopic(){var e;this.assert(this.chat,"deleteForumTopic");this.assert((e=this.message)===null||e===void 0?void 0:e.message_thread_id,"deleteForumTopic");return this.telegram.deleteForumTopic(this.chat.id,this.message.message_thread_id)}unpinAllForumTopicMessages(){var e;this.assert(this.chat,"unpinAllForumTopicMessages");this.assert((e=this.message)===null||e===void 0?void 0:e.message_thread_id,"unpinAllForumTopicMessages");return this.telegram.unpinAllForumTopicMessages(this.chat.id,this.message.message_thread_id)}editGeneralForumTopic(e){this.assert(this.chat,"editGeneralForumTopic");return this.telegram.editGeneralForumTopic(this.chat.id,e)}closeGeneralForumTopic(){this.assert(this.chat,"closeGeneralForumTopic");return this.telegram.closeGeneralForumTopic(this.chat.id)}reopenGeneralForumTopic(){this.assert(this.chat,"reopenGeneralForumTopic");return this.telegram.reopenGeneralForumTopic(this.chat.id)}hideGeneralForumTopic(){this.assert(this.chat,"hideGeneralForumTopic");return this.telegram.hideGeneralForumTopic(this.chat.id)}unhideGeneralForumTopic(){this.assert(this.chat,"unhideGeneralForumTopic");return this.telegram.unhideGeneralForumTopic(this.chat.id)}unpinAllGeneralForumTopicMessages(){this.assert(this.chat,"unpinAllGeneralForumTopicMessages");return this.telegram.unpinAllGeneralForumTopicMessages(this.chat.id)}setStickerPositionInSet(e,t){return this.telegram.setStickerPositionInSet(e,t)}setStickerSetThumb(...e){return this.telegram.setStickerSetThumbnail(...e)}setStickerSetThumbnail(...e){return this.telegram.setStickerSetThumbnail(...e)}setStickerMaskPosition(...e){return this.telegram.setStickerMaskPosition(...e)}setStickerKeywords(...e){return this.telegram.setStickerKeywords(...e)}setStickerEmojiList(...e){return this.telegram.setStickerEmojiList(...e)}deleteStickerSet(...e){return this.telegram.deleteStickerSet(...e)}setStickerSetTitle(...e){return this.telegram.setStickerSetTitle(...e)}setCustomEmojiStickerSetThumbnail(...e){return this.telegram.setCustomEmojiStickerSetThumbnail(...e)}deleteStickerFromSet(e){return this.telegram.deleteStickerFromSet(e)}uploadStickerFile(...e){this.assert(this.from,"uploadStickerFile");return this.telegram.uploadStickerFile(this.from.id,...e)}createNewStickerSet(...e){this.assert(this.from,"createNewStickerSet");return this.telegram.createNewStickerSet(this.from.id,...e)}addStickerToSet(...e){this.assert(this.from,"addStickerToSet");return this.telegram.addStickerToSet(this.from.id,...e)}getMyCommands(){return this.telegram.getMyCommands()}setMyCommands(e){return this.telegram.setMyCommands(e)}replyWithMarkdown(e,t){return this.reply(e,{parse_mode:"Markdown",...t})}replyWithMarkdownV2(e,t){return this.reply(e,{parse_mode:"MarkdownV2",...t})}replyWithHTML(e,t){return this.reply(e,{parse_mode:"HTML",...t})}deleteMessage(e){this.assert(this.chat,"deleteMessage");if(typeof e!=="undefined")return this.telegram.deleteMessage(this.chat.id,e);this.assert(this.msgId,"deleteMessage");return this.telegram.deleteMessage(this.chat.id,this.msgId)}deleteMessages(e){this.assert(this.chat,"deleteMessages");return this.telegram.deleteMessages(this.chat.id,e)}forwardMessage(e,t){this.assert(this.chat,"forwardMessage");this.assert(this.msgId,"forwardMessage");return this.telegram.forwardMessage(e,this.chat.id,this.msgId,t)}forwardMessages(e,t,r){this.assert(this.chat,"forwardMessages");return this.telegram.forwardMessages(e,this.chat.id,t,r)}copyMessage(e,t){this.assert(this.chat,"copyMessage");this.assert(this.msgId,"copyMessage");return this.telegram.copyMessage(e,this.chat.id,this.msgId,t)}copyMessages(e,t,r){var a;this.assert(this.chat,"copyMessages");return this.telegram.copyMessages(e,(a=this.chat)===null||a===void 0?void 0:a.id,t,r)}approveChatJoinRequest(e){this.assert(this.chat,"approveChatJoinRequest");return this.telegram.approveChatJoinRequest(this.chat.id,e)}declineChatJoinRequest(e){this.assert(this.chat,"declineChatJoinRequest");return this.telegram.declineChatJoinRequest(this.chat.id,e)}banChatSenderChat(e){this.assert(this.chat,"banChatSenderChat");return this.telegram.banChatSenderChat(this.chat.id,e)}unbanChatSenderChat(e){this.assert(this.chat,"unbanChatSenderChat");return this.telegram.unbanChatSenderChat(this.chat.id,e)}setChatMenuButton(e){this.assert(this.chat,"setChatMenuButton");return this.telegram.setChatMenuButton({chatId:this.chat.id,menuButton:e})}getChatMenuButton(){this.assert(this.chat,"getChatMenuButton");return this.telegram.getChatMenuButton({chatId:this.chat.id})}setMyDefaultAdministratorRights(e){return this.telegram.setMyDefaultAdministratorRights(e)}getMyDefaultAdministratorRights(e){return this.telegram.getMyDefaultAdministratorRights(e)}}t.Context=Context;t["default"]=Context;const o={isAccessible(){return"date"in this&&this.date!==0},has(...e){return e.some((e=>this[e]!=undefined))}};function getMessageFromAnySource(e){var t,r,a,n,i;const s=(i=(n=(r=(t=e.message)!==null&&t!==void 0?t:e.editedMessage)!==null&&r!==void 0?r:(a=e.callbackQuery)===null||a===void 0?void 0:a.message)!==null&&n!==void 0?n:e.channelPost)!==null&&i!==void 0?i:e.editedChannelPost;if(s)return Object.assign(Object.create(o),s)}function getUserFromAnySource(e){var t,r,a,n,i,s,o,d,p,c,l,u;if(e.callbackQuery)return e.callbackQuery.from;const m=e.msg;if(m===null||m===void 0?void 0:m.has("from"))return m.from;return(d=(o=(s=(i=(n=(a=(r=(t=e.inlineQuery)!==null&&t!==void 0?t:e.shippingQuery)!==null&&r!==void 0?r:e.preCheckoutQuery)!==null&&a!==void 0?a:e.chosenInlineResult)!==null&&n!==void 0?n:e.chatMember)!==null&&i!==void 0?i:e.myChatMember)!==null&&s!==void 0?s:e.chatJoinRequest)===null||o===void 0?void 0:o.from)!==null&&d!==void 0?d:(u=(c=(p=e.messageReaction)!==null&&p!==void 0?p:e.pollAnswer)!==null&&c!==void 0?c:(l=e.chatBoost)===null||l===void 0?void 0:l.boost.source)===null||u===void 0?void 0:u.user}function getMsgIdFromAnySource(e){var t,r;const a=getMessageFromAnySource(e);return(r=(t=a!==null&&a!==void 0?a:e.messageReaction)!==null&&t!==void 0?t:e.messageReactionCount)===null||r===void 0?void 0:r.message_id}function getTextAndEntitiesFromAnySource(e){const t=e.msg;let r,a;if(t){if("text"in t)r=t.text,a=t.entities;else if("caption"in t)r=t.caption,a=t.caption_entities;else if("game"in t)r=t.game.text,a=t.game.text_entities}else if(e.poll)r=e.poll.explanation,a=e.poll.explanation_entities;return[r,a]}const getThreadId=e=>{const t=e.msg;return(t===null||t===void 0?void 0:t.isAccessible())?t.is_topic_message?t.message_thread_id:undefined:undefined}},3808:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.argsParser=void 0;const r="'";const a='"';function argsParser(e,t=[],n=0){const i={};for(const e of t)if(e.type==="text_mention"||e.type==="text_link")i[e.offset-n]=e.length;const s=[];let o=0;let d=undefined;let p="";function flush(t){if(o!==t)s.push(p+e.slice(o,t)),d=undefined;p="";o=t+1}for(let t=0;t<e.length;t++){const n=e[t];const s=i[t];if(s){flush(t);o--;t+=s;flush(t)}else if(n===r||n===a)if(d)if(d===n)flush(t);else continue;else flush(t),d=n;else if(n===" ")if(d)continue;else flush(t);else if(n==="\n")flush(t);else if(n==="\\")p+=e.slice(o,t),o=++t;else continue}if(o<e.length)flush(e.length);return s}t.argsParser=argsParser},4645:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.is2D=t.hasPropType=t.hasProp=void 0;function hasProp(e,t){return e!==undefined&&t in e}t.hasProp=hasProp;function hasPropType(e,t,r){return hasProp(e,t)&&r===typeof e[t]}t.hasPropType=hasPropType;function is2D(e){return Array.isArray(e[0])}t.is2D=is2D},1300:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.compactOptions=void 0;function compactOptions(e){if(!e){return e}const t={};for(const r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&e[r]!==undefined)t[r]=e[r];return t}t.compactOptions=compactOptions},265:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.deunionize=void 0;function deunionize(e){return e}t.deunionize=deunionize},1386:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.linkOrMention=t.createFmt=t.join=t.FmtString=void 0;const a=r(2505);class FmtString{constructor(e,t){this.text=e;if(t){this.entities=t;this.parse_mode=undefined}}static normalise(e){if(e instanceof FmtString)return e;return new FmtString(String(e))}}t.FmtString=FmtString;const n=Array.isArray;const _add=(e,t)=>{var r;const a=e.text.length;if(t instanceof FmtString){e.text=`${e.text}${t.text}`;for(let n=0;n<(((r=t.entities)===null||r===void 0?void 0:r.length)||0);n++){const r=t.entities[n];e.entities.push({...r,offset:r.offset+a})}}else e.text=`${e.text}${t}`};const join=(e,t)=>{const r=new FmtString("");r.entities=[];const a=e[Symbol.iterator]();let n=a.next();while(!n.done){_add(r,n.value);n=a.next();if(t&&!n.done)_add(r,t)}if(r.entities.length)r.parse_mode=undefined;else delete r.entities;return r};t.join=join;function createFmt(e,r){return function fmt(i,...s){var o;i=n(i)?i:[i];const d=(0,t.join)((0,a.zip)(i,s));if(e){(o=d.entities)!==null&&o!==void 0?o:d.entities=[];d.entities.unshift({type:e,offset:0,length:d.text.length,...r});d.parse_mode=undefined}return d}}t.createFmt=createFmt;const linkOrMention=(e,t)=>{const{text:r,entities:a=[]}=FmtString.normalise(e);a.unshift(Object.assign(t,{offset:0,length:r.length}));return new FmtString(r,a)};t.linkOrMention=linkOrMention},2505:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.indexed=t.zip=t.fmtCaption=t.env=void 0;t.env=process.env;function fmtCaption(e){if(!e)return;const t=e.caption;if(!t||typeof t==="string")return e;const{text:r,entities:a}=t;return{...e,caption:r,...a&&{caption_entities:a,parse_mode:undefined}}}t.fmtCaption=fmtCaption;function*zip(e,t){const r=e[Symbol.iterator]();const a=t[Symbol.iterator]();let n=r.next();let i=a.next();while(!n.done){yield n.value;if(!i.done)yield i.value;n=r.next();i=a.next()}while(!i.done){yield i.value;i=a.next()}}t.zip=zip;function indexed(e,t){return new Proxy(e,{get:function(e,r,a){if((typeof r==="string"||typeof r==="number")&&!isNaN(+r))return t.call(e,+r);return Reflect.get(e,r,a)}})}t.indexed=indexed},243:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.prototype.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const o=i(r(6982));const d=i(r(9896));const p=r(1943);const c=i(r(5692));const l=i(r(6928));const u=s(r(9201));const m=r(4645);const f=r(1300);const g=s(r(8339));const y=s(r(3344));const _=r(7016);const v=r(9592)("telegraf:client");const{isStream:b}=g.default;const w=new Set(["answerCallbackQuery","answerInlineQuery","deleteMessage","leaveChat","sendChatAction"]);const E={audio:"mp3",photo:"jpg",sticker:"webp",video:"mp4",animation:"mp4",video_note:"mp4",voice:"ogg"};const R={apiRoot:"https://api.telegram.org",apiMode:"bot",webhookReply:true,agent:new c.Agent({keepAlive:true,keepAliveMsecs:1e4}),attachmentAgent:undefined,testEnv:false};function includesMedia(e){return Object.entries(e).some((([e,t])=>{if(e==="link_preview_options")return false;if(Array.isArray(t)){return t.some((({media:e})=>e&&typeof e==="object"&&(e.source||e.url)))}return t&&typeof t==="object"&&((0,m.hasProp)(t,"source")&&t.source||(0,m.hasProp)(t,"url")&&t.url||(0,m.hasPropType)(t,"media","object")&&((0,m.hasProp)(t.media,"source")&&t.media.source||(0,m.hasProp)(t.media,"url")&&t.media.url))}))}function replacer(e,t){if(t==null)return undefined;return t}function buildJSONConfig(e){return Promise.resolve({method:"POST",compress:true,headers:{"content-type":"application/json",connection:"keep-alive"},body:JSON.stringify(e,replacer)})}const T=["results","reply_markup","mask_position","shipping_options","errors"];async function buildFormDataConfig(e,t){for(const t of T){if((0,m.hasProp)(e,t)&&typeof e[t]!=="string"){e[t]=JSON.stringify(e[t])}}const r=o.randomBytes(32).toString("hex");const a=new g.default(r);await Promise.all(Object.keys(e).map((r=>attachFormValue(a,r,e[r],t))));return{method:"POST",compress:true,headers:{"content-type":`multipart/form-data; boundary=${r}`,connection:"keep-alive"},body:a}}async function attachFormValue(e,t,r,a){if(r==null){return}if(typeof r==="string"||typeof r==="boolean"||typeof r==="number"){e.addPart({headers:{"content-disposition":`form-data; name="${t}"`},body:`${r}`});return}if(t==="thumb"||t==="thumbnail"){const n=o.randomBytes(16).toString("hex");await attachFormMedia(e,r,n,a);return e.addPart({headers:{"content-disposition":`form-data; name="${t}"`},body:`attach://${n}`})}if(Array.isArray(r)){const n=await Promise.all(r.map((async t=>{var r;if(typeof t.media!=="object"){return await Promise.resolve(t)}const n=o.randomBytes(16).toString("hex");await attachFormMedia(e,t.media,n,a);const i=(r=t.thumb)!==null&&r!==void 0?r:t.thumbnail;if(typeof i==="object"){const r=o.randomBytes(16).toString("hex");await attachFormMedia(e,i,r,a);return{...t,media:`attach://${n}`,thumbnail:`attach://${r}`}}return{...t,media:`attach://${n}`}})));return e.addPart({headers:{"content-disposition":`form-data; name="${t}"`},body:JSON.stringify(n)})}if(r&&typeof r==="object"&&(0,m.hasProp)(r,"media")&&(0,m.hasProp)(r,"type")&&typeof r.media!=="undefined"&&typeof r.type!=="undefined"){const n=o.randomBytes(16).toString("hex");await attachFormMedia(e,r.media,n,a);return e.addPart({headers:{"content-disposition":`form-data; name="${t}"`},body:JSON.stringify({...r,media:`attach://${n}`})})}return await attachFormMedia(e,r,t,a)}async function attachFormMedia(e,t,r,a){var n,i,s;let o=(n=t.filename)!==null&&n!==void 0?n:`${r}.${(i=E[r])!==null&&i!==void 0?i:"dat"}`;if("url"in t&&t.url!==undefined){const n=5e5;const i=await(0,u.default)(t.url,{agent:a,timeout:n});return e.addPart({headers:{"content-disposition":`form-data; name="${r}"; filename="${o}"`},body:i.body})}if("source"in t&&t.source){let a=t.source;if(typeof t.source==="string"){const e=await(0,p.realpath)(t.source);if((await(0,p.stat)(e)).isFile()){o=(s=t.filename)!==null&&s!==void 0?s:l.basename(t.source);a=await d.createReadStream(t.source)}else{throw new TypeError(`Unable to upload '${t.source}', not a file`)}}if(b(a)||Buffer.isBuffer(a)){e.addPart({headers:{"content-disposition":`form-data; name="${r}"; filename="${o}"`},body:a})}}}async function answerToWebhook(e,t,r){if(!includesMedia(t)){if(!e.headersSent){e.setHeader("content-type","application/json")}e.end(JSON.stringify(t),"utf-8");return true}const{headers:a,body:n}=await buildFormDataConfig(t,r.attachmentAgent);if(!e.headersSent){for(const[t,r]of Object.entries(a)){e.setHeader(t,r)}}await new Promise((t=>{e.on("finish",t);n.pipe(e)}));return true}function redactToken(e){e.message=e.message.replace(/\/(bot|user)(\d+):[^/]+\//,"/$1$2:[REDACTED]/");throw e}class ApiClient{constructor(e,t,r){this.token=e;this.response=r;this.options={...R,...(0,f.compactOptions)(t)};if(this.options.apiRoot.startsWith("http://")){this.options.agent=undefined}}set webhookReply(e){this.options.webhookReply=e}get webhookReply(){return this.options.webhookReply}async callApi(e,t,{signal:r}={}){const{token:a,options:n,response:i}=this;if(n.webhookReply&&(i===null||i===void 0?void 0:i.writableEnded)===false&&w.has(e)){v("Call via webhook",e,t);return await answerToWebhook(i,{method:e,...t},n)}if(!a){throw new y.default({error_code:401,description:"Bot Token is required"})}v("HTTP call",e,t);const s=includesMedia(t)?await buildFormDataConfig({method:e,...t},n.attachmentAgent):await buildJSONConfig(t);const o=new _.URL(`./${n.apiMode}${a}${n.testEnv?"/test":""}/${e}`,n.apiRoot);s.agent=n.agent;s.signal=r;s.timeout=5e5;const d=await(0,u.default)(o,s).catch(redactToken);if(d.status>=500){const r={error_code:d.status,description:d.statusText};throw new y.default(r,{method:e,payload:t})}const p=await d.json();if(!p.ok){v("API call failed",p);throw new y.default(p,{method:e,payload:t})}return p.result}}t["default"]=ApiClient},3344:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.TelegramError=void 0;class TelegramError extends Error{constructor(e,t={}){super(`${e.error_code}: ${e.description}`);this.response=e;this.on=t}get code(){return this.response.error_code}get description(){return this.response.description}get parameters(){return this.response.parameters}}t.TelegramError=TelegramError;t["default"]=TelegramError},8339:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.prototype.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const o=i(r(2203));const d=r(4645);const p=s(r(4775));const c="\r\n";class MultipartStream extends p.default{constructor(e){super({head:`--${e}${c}`,tail:`${c}--${e}--`,separator:`${c}--${e}${c}`})}addPart(e){const t=new o.PassThrough;for(const[r,a]of Object.entries(e.headers)){t.write(`${r}:${a}${c}`)}t.write(c);if(MultipartStream.isStream(e.body)){e.body.pipe(t)}else{t.end(e.body)}this.add(t)}static isStream(e){return typeof e==="object"&&e!==null&&(0,d.hasPropType)(e,"pipe","function")}}t["default"]=MultipartStream},3777:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.Polling=void 0;const n=a(r(6335));const i=a(r(9592));const s=r(9023);const o=r(3344);const d=(0,i.default)("telegraf:polling");const p=(0,s.promisify)(setTimeout);function always(e){return()=>e}const c=always(Promise.resolve());class Polling{constructor(e,t){this.telegram=e;this.allowedUpdates=t;this.abortController=new n.default;this.skipOffsetSync=false;this.offset=0}async*[Symbol.asyncIterator](){var e,t;d("Starting long polling");do{try{const e=await this.telegram.callApi("getUpdates",{timeout:50,offset:this.offset,allowed_updates:this.allowedUpdates},this.abortController);const t=e[e.length-1];if(t!==undefined){this.offset=t.update_id+1}yield e}catch(r){const a=r;if(a.name==="AbortError")return;if(a.name==="FetchError"||a instanceof o.TelegramError&&a.code===429||a instanceof o.TelegramError&&a.code>=500){const r=(t=(e=a.parameters)===null||e===void 0?void 0:e.retry_after)!==null&&t!==void 0?t:5;d("Failed to fetch updates, retrying after %ds.",r,a);await p(r*1e3);continue}if(a instanceof o.TelegramError&&(a.code===401||a.code===409)){this.skipOffsetSync=true;throw a}throw a}}while(!this.abortController.signal.aborted)}async syncUpdateOffset(){if(this.skipOffsetSync)return;d("Syncing update offset...");await this.telegram.callApi("getUpdates",{offset:this.offset,limit:1})}async loop(e){if(this.abortController.signal.aborted)throw new Error("Polling instances must not be reused!");try{for await(const t of this)await Promise.all(t.map(e))}finally{d("Long polling stopped");this.stop();await this.syncUpdateOffset().catch(c)}}stop(){this.abortController.abort()}}t.Polling=Polling},7323:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const n=a(r(9592));const i=(0,n.default)("telegraf:webhook");function generateWebhook(e,t){return async(r,a,n=()=>{a.statusCode=403;i("Replying with status code",a.statusCode);a.end()})=>{i("Incoming request",r.method,r.url);if(!e(r)){i("Webhook filter failed",r.method,r.url);return n()}let s;try{if(r.body!=null){let e=r.body;if(e instanceof Buffer)e=String(r.body);if(typeof e==="string")e=JSON.parse(e);s=e}else{let e="";for await(const t of r)e+=String(t);s=JSON.parse(e)}}catch(e){a.writeHead(415).end();i("Failed to parse request body:",e);return}return await t(s,a)}}t["default"]=generateWebhook},5136:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.allOf=t.anyOf=t.callbackQuery=t.editedChannelPost=t.channelPost=t.editedMessage=t.message=void 0;const message=(...e)=>t=>{if(!("message"in t))return false;for(const r of e){if(!(r in t.message))return false}return true};t.message=message;const editedMessage=(...e)=>t=>{if(!("edited_message"in t))return false;for(const r of e){if(!(r in t.edited_message))return false}return true};t.editedMessage=editedMessage;const channelPost=(...e)=>t=>{if(!("channel_post"in t))return false;for(const r of e){if(!(r in t.channel_post))return false}return true};t.channelPost=channelPost;const editedChannelPost=(...e)=>t=>{if(!("edited_channel_post"in t))return false;for(const r of e){if(!(r in t.edited_channel_post))return false}return true};t.editedChannelPost=editedChannelPost;const callbackQuery=(...e)=>t=>{if(!("callback_query"in t))return false;for(const r of e){if(!(r in t.callback_query))return false}return true};t.callbackQuery=callbackQuery;const anyOf=(...e)=>t=>{for(const r of e)if(r(t))return true;return false};t.anyOf=anyOf;const allOf=(...e)=>t=>{for(const r of e)if(!r(t))return false;return true};t.allOf=allOf},2616:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.mention=t.link=t.pre=t.code=t.quote=t.underline=t.strikethrough=t.spoiler=t.italic=t.bold=t.fmt=t.join=t.FmtString=void 0;const a=r(1386);Object.defineProperty(t,"FmtString",{enumerable:true,get:function(){return a.FmtString}});t.join=a.join;t.fmt=(0,a.createFmt)();t.bold=(0,a.createFmt)("bold");t.italic=(0,a.createFmt)("italic");t.spoiler=(0,a.createFmt)("spoiler");t.strikethrough=(0,a.createFmt)("strikethrough");t.underline=(0,a.createFmt)("underline");t.quote=(0,a.createFmt)("blockquote");t.code=(0,a.createFmt)("code");const pre=e=>(0,a.createFmt)("pre",{language:e});t.pre=pre;const link=(e,t)=>(0,a.linkOrMention)(e,{type:"text_link",url:t});t.link=link;const mention=(e,r)=>typeof r==="number"?(0,t.link)(e,"tg://user?id="+r):(0,a.linkOrMention)(e,{type:"text_mention",user:r});t.mention=mention},9875:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.prototype.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.Scenes=t.MemorySessionStore=t.session=t.deunionize=t.Format=t.Input=t.Markup=t.Types=t.Telegram=t.TelegramError=t.Router=t.Composer=t.Context=t.Telegraf=void 0;var s=r(6297);Object.defineProperty(t,"Telegraf",{enumerable:true,get:function(){return s.Telegraf}});var o=r(6232);Object.defineProperty(t,"Context",{enumerable:true,get:function(){return o.Context}});var d=r(1389);Object.defineProperty(t,"Composer",{enumerable:true,get:function(){return d.Composer}});var p=r(8654);Object.defineProperty(t,"Router",{enumerable:true,get:function(){return p.Router}});var c=r(3344);Object.defineProperty(t,"TelegramError",{enumerable:true,get:function(){return c.TelegramError}});var l=r(2392);Object.defineProperty(t,"Telegram",{enumerable:true,get:function(){return l.Telegram}});t.Types=i(r(3851));t.Markup=i(r(9787));t.Input=i(r(9435));t.Format=i(r(2616));var u=r(265);Object.defineProperty(t,"deunionize",{enumerable:true,get:function(){return u.deunionize}});var m=r(7587);Object.defineProperty(t,"session",{enumerable:true,get:function(){return m.session}});Object.defineProperty(t,"MemorySessionStore",{enumerable:true,get:function(){return m.MemorySessionStore}});t.Scenes=i(r(2418))},9435:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.fromFileId=t.fromURL=t.fromURLStream=t.fromReadableStream=t.fromBuffer=t.fromLocalFile=void 0;const fromLocalFile=(e,t)=>({source:e,filename:t});t.fromLocalFile=fromLocalFile;const fromBuffer=(e,t)=>({source:e,filename:t});t.fromBuffer=fromBuffer;const fromReadableStream=(e,t)=>({source:e,filename:t});t.fromReadableStream=fromReadableStream;const fromURLStream=(e,t)=>({url:e.toString(),filename:t});t.fromURLStream=fromURLStream;const fromURL=e=>e.toString();t.fromURL=fromURL;const fromFileId=e=>e;t.fromFileId=fromFileId},9787:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.prototype.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.inlineKeyboard=t.keyboard=t.forceReply=t.removeKeyboard=t.button=t.Markup=void 0;const s=r(4645);class Markup{constructor(e){this.reply_markup=e}selective(e=true){return new Markup({...this.reply_markup,selective:e})}placeholder(e){return new Markup({...this.reply_markup,input_field_placeholder:e})}resize(e=true){return new Markup({...this.reply_markup,resize_keyboard:e})}oneTime(e=true){return new Markup({...this.reply_markup,one_time_keyboard:e})}persistent(e=true){return new Markup({...this.reply_markup,is_persistent:e})}}t.Markup=Markup;t.button=i(r(9491));function removeKeyboard(){return new Markup({remove_keyboard:true})}t.removeKeyboard=removeKeyboard;function forceReply(){return new Markup({force_reply:true})}t.forceReply=forceReply;function keyboard(e,t){const r=buildKeyboard(e,{columns:1,...t});return new Markup({keyboard:r})}t.keyboard=keyboard;function inlineKeyboard(e,t){const r=buildKeyboard(e,{columns:e.length,...t});return new Markup({inline_keyboard:r})}t.inlineKeyboard=inlineKeyboard;function buildKeyboard(e,t){const r=[];if(!Array.isArray(e)){return r}if((0,s.is2D)(e)){return e.map((e=>e.filter((e=>!e.hide))))}const a=t.wrap!==undefined?t.wrap:(e,r,a)=>a.length>=t.columns;let n=[];let i=0;for(const t of e.filter((e=>!e.hide))){if(a(t,i,n)&&n.length>0){r.push(n);n=[]}n.push(t);i++}if(n.length>0){r.push(n)}return r}},7791:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.MessageReactions=t.ReactionList=t.Digit=void 0;const a=r(2505);t.Digit=new Set(["0","1","2","3","4","5","6","7","8","9"]);const inspectReaction=e=>{if(e.type==="custom_emoji")return`Custom(${e.custom_emoji_id})`;else return e.emoji};class ReactionList{constructor(e){this.list=e}static fromArray(e=[]){return(0,a.indexed)(new ReactionList(e),(function(e){return this.list[e]}))}static has(e,r){if(typeof r==="string")if(t.Digit.has(r[0]))return e.some((e=>e.custom_emoji_id===r));else return e.some((e=>e.emoji===r));return e.some((e=>{if(e.type==="custom_emoji")return e.custom_emoji_id===r.custom_emoji_id;else if(e.type==="emoji")return e.emoji===r.emoji}))}toArray(){return[...this.list]}filter(e){return ReactionList.fromArray(this.list.filter(e))}has(e){return ReactionList.has(this.list,e)}get count(){return this.list.length}[Symbol.iterator](){return this.list[Symbol.iterator]()}[Symbol.for("nodejs.util.inspect.custom")](){const e=this.list.map(inspectReaction).join(", ");return["ReactionList {",e,"}"].join(" ")}}t.ReactionList=ReactionList;class MessageReactions extends ReactionList{constructor(e){var t,r;super((r=(t=e.update.message_reaction)===null||t===void 0?void 0:t.new_reaction)!==null&&r!==void 0?r:[]);this.ctx=e}static from(e){return(0,a.indexed)(new MessageReactions(e),(function(e){return this.list[e]}))}get old(){var e;return ReactionList.fromArray((e=this.ctx.update.message_reaction)===null||e===void 0?void 0:e.old_reaction)}get new(){var e;return ReactionList.fromArray((e=this.ctx.update.message_reaction)===null||e===void 0?void 0:e.new_reaction)}get added(){return this.new.filter((e=>!this.old.has(e)))}get removed(){return this.old.filter((e=>!this.new.has(e)))}get kept(){return this.new.filter((e=>this.old.has(e)))}}t.MessageReactions=MessageReactions},8654:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.Router=void 0;const n=a(r(1389));class Router{constructor(e,t=new Map){this.routeFn=e;this.handlers=t;this.otherwiseHandler=n.default.passThru();if(typeof e!=="function"){throw new Error("Missing routing function")}}on(e,...t){if(t.length===0){throw new TypeError("At least one handler must be provided")}this.handlers.set(e,n.default.compose(t));return this}otherwise(...e){if(e.length===0){throw new TypeError("At least one otherwise handler must be provided")}this.otherwiseHandler=n.default.compose(e);return this}middleware(){return n.default.lazy((e=>{var t;const r=this.routeFn(e);if(r==null){return this.otherwiseHandler}Object.assign(e,r.context);Object.assign(e.state,r.state);return(t=this.handlers.get(r.route))!==null&&t!==void 0?t:this.otherwiseHandler}))}}t.Router=Router},2418:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__exportStar||function(e,t){for(var r in e)if(r!=="default"&&!Object.prototype.hasOwnProperty.call(t,r))a(t,e,r)};Object.defineProperty(t,"__esModule",{value:true});n(r(5137),t)},4788:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.BaseScene=void 0;const n=a(r(1389));const{compose:i}=n.default;class BaseScene extends n.default{constructor(e,t){const r={handlers:[],enterHandlers:[],leaveHandlers:[],...t};super(...r.handlers);this.id=e;this.ttl=r.ttl;this.enterHandler=i(r.enterHandlers);this.leaveHandler=i(r.leaveHandlers)}enter(...e){this.enterHandler=i([this.enterHandler,...e]);return this}leave(...e){this.leaveHandler=i([this.leaveHandler,...e]);return this}enterMiddleware(){return this.enterHandler}leaveMiddleware(){return this.leaveHandler}}t.BaseScene=BaseScene;t["default"]=BaseScene},7150:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});const n=a(r(1389));const i=a(r(9592));const s=(0,i.default)("telegraf:scenes:context");const noop=()=>Promise.resolve();const now=()=>Math.floor(Date.now()/1e3);class SceneContextScene{constructor(e,t,r){this.ctx=e;this.scenes=t;this.leaving=false;const a={};this.options={defaultSession:a,...r}}get session(){var e,t;const r=Object.assign({},this.options.defaultSession);let a=(t=(e=this.ctx.session)===null||e===void 0?void 0:e.__scenes)!==null&&t!==void 0?t:r;if(a.expires!==undefined&&a.expires<now()){a=r}if(this.ctx.session===undefined){this.ctx.session={__scenes:a}}else{this.ctx.session.__scenes=a}return a}get state(){var e;var t;return(e=(t=this.session).state)!==null&&e!==void 0?e:t.state={}}set state(e){this.session.state={...e}}get current(){var e;const t=(e=this.session.current)!==null&&e!==void 0?e:this.options.default;return t===undefined||!this.scenes.has(t)?undefined:this.scenes.get(t)}reset(){if(this.ctx.session!==undefined)this.ctx.session.__scenes=Object.assign({},this.options.defaultSession)}async enter(e,t={},r=false){var a,n;if(!this.scenes.has(e)){throw new Error(`Can't find scene: ${e}`)}if(!r){await this.leave()}s("Entering scene",e,t,r);this.session.current=e;this.state=t;const i=(n=(a=this.current)===null||a===void 0?void 0:a.ttl)!==null&&n!==void 0?n:this.options.ttl;if(i!==undefined){this.session.expires=now()+i}if(this.current===undefined||r){return}const o="enterMiddleware"in this.current&&typeof this.current.enterMiddleware==="function"?this.current.enterMiddleware():this.current.middleware();return await o(this.ctx,noop)}reenter(){return this.session.current===undefined?undefined:this.enter(this.session.current,this.state)}async leave(){if(this.leaving)return;s("Leaving scene");try{this.leaving=true;if(this.current===undefined){return}const e="leaveMiddleware"in this.current&&typeof this.current.leaveMiddleware==="function"?this.current.leaveMiddleware():n.default.passThru();await e(this.ctx,noop);return this.reset()}finally{this.leaving=false}}}t["default"]=SceneContextScene},5137:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.WizardContextWizard=t.WizardScene=t.BaseScene=t.SceneContextScene=t.Stage=void 0;var n=r(7827);Object.defineProperty(t,"Stage",{enumerable:true,get:function(){return n.Stage}});var i=r(7150);Object.defineProperty(t,"SceneContextScene",{enumerable:true,get:function(){return a(i).default}});var s=r(4788);Object.defineProperty(t,"BaseScene",{enumerable:true,get:function(){return s.BaseScene}});var o=r(909);Object.defineProperty(t,"WizardScene",{enumerable:true,get:function(){return o.WizardScene}});var d=r(1402);Object.defineProperty(t,"WizardContextWizard",{enumerable:true,get:function(){return a(d).default}})},7827:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.Stage=void 0;const n=r(7587);const i=a(r(7150));const s=r(1389);class Stage extends s.Composer{constructor(e=[],t){super();this.options={...t};this.scenes=new Map;e.forEach((e=>this.register(e)))}register(...e){e.forEach((e=>{if((e===null||e===void 0?void 0:e.id)==null||typeof e.middleware!=="function"){throw new Error("telegraf: Unsupported scene")}this.scenes.set(e.id,e)}));return this}middleware(){const e=s.Composer.compose([(e,t)=>{const r=this.scenes;const a=new i.default(e,r,this.options);e.scene=a;return t()},super.middleware(),s.Composer.lazy((e=>{var t;return(t=e.scene.current)!==null&&t!==void 0?t:s.Composer.passThru()}))]);return s.Composer.optional(n.isSessionContext,e)}static enter(...e){return t=>t.scene.enter(...e)}static reenter(...e){return t=>t.scene.reenter(...e)}static leave(...e){return t=>t.scene.leave(...e)}}t.Stage=Stage},1402:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});class WizardContextWizard{constructor(e,t){var r;this.ctx=e;this.steps=t;this.state=e.scene.state;this.cursor=(r=e.scene.session.cursor)!==null&&r!==void 0?r:0}get step(){return this.steps[this.cursor]}get cursor(){return this.ctx.scene.session.cursor}set cursor(e){this.ctx.scene.session.cursor=e}selectStep(e){this.cursor=e;return this}next(){return this.selectStep(this.cursor+1)}back(){return this.selectStep(this.cursor-1)}}t["default"]=WizardContextWizard},909:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.WizardScene=void 0;const n=a(r(4788));const i=a(r(1402));const s=a(r(1389));class WizardScene extends n.default{constructor(e,t,...r){let a;let n;if(typeof t==="function"||"middleware"in t){a=undefined;n=[t,...r]}else{a=t;n=r}super(e,a);this.steps=n}middleware(){return s.default.compose([(e,t)=>{e.wizard=new i.default(e,this.steps);return t()},super.middleware(),(e,t)=>{if(e.wizard.step===undefined){e.wizard.selectStep(0);return e.scene.leave()}return s.default.unwrap(e.wizard.step)(e,t)}])}enterMiddleware(){return s.default.compose([this.enterHandler,this.middleware()])}}t.WizardScene=WizardScene},7587:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.isSessionContext=t.MemorySessionStore=t.session=void 0;const n=a(r(9592));const i=(0,n.default)("telegraf:session");function session(e){var t,r,a;const n=(t=e===null||e===void 0?void 0:e.property)!==null&&t!==void 0?t:"session";const s=(r=e===null||e===void 0?void 0:e.getSessionKey)!==null&&r!==void 0?r:defaultGetSessionKey;const o=(a=e===null||e===void 0?void 0:e.store)!==null&&a!==void 0?a:new MemorySessionStore;const d=new Map;const p=new Map;return async(t,r)=>{var a;const c=t.update.update_id;let l=false;function releaseChecks(){if(l&&process.env.EXPERIMENTAL_SESSION_CHECKS)throw new Error("Session was accessed or assigned to after the middleware chain exhausted. This is a bug in your code. You're probably accessing session asynchronously and missing awaits.")}const u=await s(t);if(!u){t[n]=undefined;return await r()}let m=d.get(u);if(m){i(`(${c}) found cached session, reusing from cache`);++m.counter}else{i(`(${c}) did not find cached session`);let r=p.get(u);if(r)i(`(${c}) found a concurrent request, reusing promise`);else{i(`(${c}) fetching from upstream store`);r=o.get(u)}p.set(u,r);const n=await r;p.delete(u);i(`(${c}) updating cache`);const s=d.get(u);if(s){s.counter++;m=s}else{m={ref:n!==null&&n!==void 0?n:(a=e===null||e===void 0?void 0:e.defaultSession)===null||a===void 0?void 0:a.call(e,t),counter:1};d.set(u,m)}}const f=m;let g=false;Object.defineProperty(t,n,{get(){releaseChecks();g=true;return f.ref},set(e){releaseChecks();g=true;f.ref=e}});try{await r();l=true}finally{if(--f.counter===0){i(`(${c}) refcounter reached 0, removing cached`);d.delete(u)}i(`(${c}) middlewares completed, checking session`);if(g)if(f.ref==null){i(`(${c}) ctx.${n} missing, removing from store`);await o.delete(u)}else{i(`(${c}) ctx.${n} found, updating store`);await o.set(u,f.ref)}}}}t.session=session;function defaultGetSessionKey(e){var t,r;const a=(t=e.from)===null||t===void 0?void 0:t.id;const n=(r=e.chat)===null||r===void 0?void 0:r.id;if(a==null||n==null)return undefined;return`${a}:${n}`}class MemorySessionStore{constructor(e=Infinity){this.ttl=e;this.store=new Map}get(e){const t=this.store.get(e);if(t==null){return undefined}else if(t.expires<Date.now()){this.delete(e);return undefined}return t.session}set(e,t){const r=Date.now();this.store.set(e,{session:t,expires:r+this.ttl})}delete(e){this.store.delete(e)}}t.MemorySessionStore=MemorySessionStore;function isSessionContext(e){return"session"in e}t.isSessionContext=isSessionContext},6297:function(e,t,r){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){if(a===undefined)a=r;var n=Object.getOwnPropertyDescriptor(t,r);if(!n||("get"in n?!t.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return t[r]}}}Object.defineProperty(e,a,n)}:function(e,t,r,a){if(a===undefined)a=r;e[a]=t[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.prototype.hasOwnProperty.call(e,r))a(t,e,r);n(t,e);return t};var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.Telegraf=void 0;const o=i(r(6982));const d=i(r(8611));const p=i(r(5692));const c=r(1389);const l=r(1300);const u=s(r(6232));const m=s(r(9592));const f=s(r(7323));const g=r(3777);const y=s(r(5783));const _=s(r(2392));const v=r(7016);const b=r(2478);const w=(0,m.default)("telegraf:main");const E={telegram:{},handlerTimeout:9e4,contextType:u.default};function always(e){return()=>e}const R=always(Promise.resolve());const T="x-telegram-bot-api-secret-token";class Telegraf extends c.Composer{constructor(e,t){super();this.context={};this.webhookFilter=function(e){const t=(0,m.default)("telegraf:webhook");if(e.method==="POST"){if(b(this.path,e.url)){if(!this.secretToken)return true;else{const r=e.headers[T];if(b(this.secretToken,r))return true;else t("Secret token does not match:",r,this.secretToken)}}else t("Path does not match:",e.url,this.path)}else t("Unexpected request method, not POST. Received:",e.method);return false};this.handleError=(e,t)=>{process.exitCode=1;console.error("Unhandled error while processing",t.update);throw e};this.options={...E,...(0,l.compactOptions)(t)};this.telegram=new _.default(e,this.options.telegram);w("Created a `Telegraf` instance")}get token(){return this.telegram.token}set webhookReply(e){this.telegram.webhookReply=e}get webhookReply(){return this.telegram.webhookReply}catch(e){this.handleError=e;return this}webhookCallback(e="/",t={}){const{secretToken:r}=t;return(0,f.default)(this.webhookFilter.bind({hookPath:e,path:e,secretToken:r}),((e,t)=>this.handleUpdate(e,t)))}getDomainOpts(e){var t;const r=e.domain.startsWith("https://")||e.domain.startsWith("http://");if(r)w("Unexpected protocol in domain, telegraf will use https:",e.domain);const a=r?new v.URL(e.domain).host:e.domain;const n=(t=e.path)!==null&&t!==void 0?t:`/telegraf/${this.secretPathComponent()}`;const i=`https://${a}${n}`;return{domain:a,path:n,url:i}}async createWebhook(e){const{domain:t,path:r,...a}=e;const n=this.getDomainOpts({domain:t,path:r});await this.telegram.setWebhook(n.url,a);w(`Webhook set to ${n.url}`);return this.webhookCallback(n.path,{secretToken:a.secret_token})}startPolling(e=[]){this.polling=new g.Polling(this.telegram,e);return this.polling.loop((async e=>{await this.handleUpdate(e)}))}startWebhook(e,t,r,a,n,i){const s=this.webhookCallback(e,{secretToken:i});const o=typeof n==="function"?(e,t)=>s(e,t,(()=>n(e,t))):s;this.webhookServer=t!=null?p.createServer(t,o):d.createServer(o);this.webhookServer.listen(r,a,(()=>{w("Webhook listening on port: %s",r)}));return this}secretPathComponent(){return o.createHash("sha3-256").update(this.token).update(process.version).digest("hex")}async launch(e={},t){var r,a;const[n,i]=typeof e==="function"?[{},e]:[e,t];const s=n.dropPendingUpdates;const o=n.allowedUpdates;const d=n.webhook;w("Connecting to Telegram");(r=this.botInfo)!==null&&r!==void 0?r:this.botInfo=await this.telegram.getMe();i===null||i===void 0?void 0:i();w(`Launching @${this.botInfo.username}`);if(d===undefined){await this.telegram.deleteWebhook({drop_pending_updates:s});w("Bot started with long polling");await this.startPolling(o);return}const p=this.getDomainOpts({domain:d.domain,path:(a=d.path)!==null&&a!==void 0?a:d.hookPath});const{tlsOptions:c,port:l,host:u,cb:m,secretToken:f}=d;this.startWebhook(p.path,c,l,u,m,f);await this.telegram.setWebhook(p.url,{drop_pending_updates:s,allowed_updates:o,ip_address:d.ipAddress,max_connections:d.maxConnections,secret_token:d.secretToken,certificate:d.certificate});w(`Bot started with webhook @ ${p.url}`)}stop(e="unspecified"){var t,r;w("Stopping bot... Reason:",e);if(this.polling===undefined&&this.webhookServer===undefined){throw new Error("Bot is not running!")}(t=this.webhookServer)===null||t===void 0?void 0:t.close();(r=this.polling)===null||r===void 0?void 0:r.stop()}async handleUpdate(e,t){var r,a;(r=this.botInfo)!==null&&r!==void 0?r:this.botInfo=(w("Update %d is waiting for `botInfo` to be initialized",e.update_id),await((a=this.botInfoCall)!==null&&a!==void 0?a:this.botInfoCall=this.telegram.getMe()));w("Processing update",e.update_id);const n=new _.default(this.token,this.telegram.options,t);const i=this.options.contextType;const s=new i(e,n,this.botInfo);Object.assign(s,this.context);try{await(0,y.default)(Promise.resolve(this.middleware()(s,R)),this.options.handlerTimeout)}catch(e){return await this.handleError(e,s)}finally{if((t===null||t===void 0?void 0:t.writableEnded)===false){t.end()}w("Finished processing update",e.update_id)}}}t.Telegraf=Telegraf},3851:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Markup=void 0;var a=r(9787);Object.defineProperty(t,"Markup",{enumerable:true,get:function(){return a.Markup}})},2392:function(e,t,r){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:true});t.Telegram=void 0;const n=a(r(243));const i=r(6928);const s=r(7016);const o=r(2616);const d=r(2505);class Telegram extends n.default{getMe(){return this.callApi("getMe",{})}getFile(e){return this.callApi("getFile",{file_id:e})}async getFileLink(e){if(typeof e==="string"){e=await this.getFile(e)}else if(e.file_path===undefined){e=await this.getFile(e.file_id)}if(e.file_path!==undefined&&(0,i.isAbsolute)(e.file_path)){const t=new s.URL(this.options.apiRoot);t.port="";t.pathname=e.file_path;t.protocol="file:";return t}return new s.URL(`./file/${this.options.apiMode}${this.token}${this.options.testEnv?"/test":""}/${e.file_path}`,this.options.apiRoot)}getUpdates(e,t,r,a){return this.callApi("getUpdates",{allowed_updates:a,limit:t,offset:r,timeout:e})}getWebhookInfo(){return this.callApi("getWebhookInfo",{})}getGameHighScores(e,t,r,a){return this.callApi("getGameHighScores",{user_id:e,inline_message_id:t,chat_id:r,message_id:a})}setGameScore(e,t,r,a,n,i=true,s=false){return this.callApi("setGameScore",{force:s,score:t,user_id:e,inline_message_id:r,chat_id:a,message_id:n,disable_edit_message:!i})}setWebhook(e,t){return this.callApi("setWebhook",{url:e,...t})}deleteWebhook(e){return this.callApi("deleteWebhook",{...e})}sendMessage(e,t,r){const a=o.FmtString.normalise(t);return this.callApi("sendMessage",{chat_id:e,...r,...a})}forwardMessage(e,t,r,a){return this.callApi("forwardMessage",{chat_id:e,from_chat_id:t,message_id:r,...a})}forwardMessages(e,t,r,a){return this.callApi("forwardMessages",{chat_id:e,from_chat_id:t,message_ids:r,...a})}sendChatAction(e,t,r){return this.callApi("sendChatAction",{chat_id:e,action:t,...r})}setMessageReaction(e,t,r,a){return this.callApi("setMessageReaction",{chat_id:e,message_id:t,reaction:r,is_big:a})}getUserProfilePhotos(e,t,r){return this.callApi("getUserProfilePhotos",{user_id:e,offset:t,limit:r})}sendLocation(e,t,r,a){return this.callApi("sendLocation",{chat_id:e,latitude:t,longitude:r,...a})}sendVenue(e,t,r,a,n,i){return this.callApi("sendVenue",{latitude:t,longitude:r,title:a,address:n,chat_id:e,...i})}sendInvoice(e,t,r){return this.callApi("sendInvoice",{chat_id:e,...t,...r})}sendContact(e,t,r,a){return this.callApi("sendContact",{chat_id:e,phone_number:t,first_name:r,...a})}sendPhoto(e,t,r){return this.callApi("sendPhoto",{chat_id:e,photo:t,...(0,d.fmtCaption)(r)})}sendDice(e,t){return this.callApi("sendDice",{chat_id:e,...t})}sendDocument(e,t,r){return this.callApi("sendDocument",{chat_id:e,document:t,...(0,d.fmtCaption)(r)})}sendAudio(e,t,r){return this.callApi("sendAudio",{chat_id:e,audio:t,...(0,d.fmtCaption)(r)})}sendSticker(e,t,r){return this.callApi("sendSticker",{chat_id:e,sticker:t,...r})}sendVideo(e,t,r){return this.callApi("sendVideo",{chat_id:e,video:t,...(0,d.fmtCaption)(r)})}sendAnimation(e,t,r){return this.callApi("sendAnimation",{chat_id:e,animation:t,...(0,d.fmtCaption)(r)})}sendVideoNote(e,t,r){return this.callApi("sendVideoNote",{chat_id:e,video_note:t,...r})}sendVoice(e,t,r){return this.callApi("sendVoice",{chat_id:e,voice:t,...(0,d.fmtCaption)(r)})}sendGame(e,t,r){return this.callApi("sendGame",{chat_id:e,game_short_name:t,...r})}sendMediaGroup(e,t,r){return this.callApi("sendMediaGroup",{chat_id:e,media:t,...r})}sendPoll(e,t,r,a){return this.callApi("sendPoll",{chat_id:e,type:"regular",question:t,options:r,...a})}sendQuiz(e,t,r,a){return this.callApi("sendPoll",{chat_id:e,type:"quiz",question:t,options:r,...a})}stopPoll(e,t,r){return this.callApi("stopPoll",{chat_id:e,message_id:t,...r})}getChat(e){return this.callApi("getChat",{chat_id:e})}getChatAdministrators(e){return this.callApi("getChatAdministrators",{chat_id:e})}getChatMember(e,t){return this.callApi("getChatMember",{chat_id:e,user_id:t})}getChatMembersCount(e){return this.callApi("getChatMembersCount",{chat_id:e})}answerInlineQuery(e,t,r){return this.callApi("answerInlineQuery",{inline_query_id:e,results:t,...r})}setChatPermissions(e,t,r){return this.callApi("setChatPermissions",{chat_id:e,permissions:t,...r})}banChatMember(e,t,r,a){return this.callApi("banChatMember",{chat_id:e,user_id:t,until_date:r,...a})}get kickChatMember(){return this.banChatMember}promoteChatMember(e,t,r){return this.callApi("promoteChatMember",{chat_id:e,user_id:t,...r})}restrictChatMember(e,t,r){return this.callApi("restrictChatMember",{chat_id:e,user_id:t,...r})}setChatAdministratorCustomTitle(e,t,r){return this.callApi("setChatAdministratorCustomTitle",{chat_id:e,user_id:t,custom_title:r})}exportChatInviteLink(e){return this.callApi("exportChatInviteLink",{chat_id:e})}createChatInviteLink(e,t){return this.callApi("createChatInviteLink",{chat_id:e,...t})}createInvoiceLink(e){return this.callApi("createInvoiceLink",{...e})}editChatInviteLink(e,t,r){return this.callApi("editChatInviteLink",{chat_id:e,invite_link:t,...r})}revokeChatInviteLink(e,t){return this.callApi("revokeChatInviteLink",{chat_id:e,invite_link:t})}setChatPhoto(e,t){return this.callApi("setChatPhoto",{chat_id:e,photo:t})}deleteChatPhoto(e){return this.callApi("deleteChatPhoto",{chat_id:e})}setChatTitle(e,t){return this.callApi("setChatTitle",{chat_id:e,title:t})}setChatDescription(e,t){return this.callApi("setChatDescription",{chat_id:e,description:t})}pinChatMessage(e,t,r){return this.callApi("pinChatMessage",{chat_id:e,message_id:t,...r})}unpinChatMessage(e,t){return this.callApi("unpinChatMessage",{chat_id:e,message_id:t})}unpinAllChatMessages(e){return this.callApi("unpinAllChatMessages",{chat_id:e})}leaveChat(e){return this.callApi("leaveChat",{chat_id:e})}unbanChatMember(e,t,r){return this.callApi("unbanChatMember",{chat_id:e,user_id:t,...r})}answerCbQuery(e,t,r){return this.callApi("answerCallbackQuery",{text:t,callback_query_id:e,...r})}answerGameQuery(e,t){return this.callApi("answerCallbackQuery",{url:t,callback_query_id:e})}getUserChatBoosts(e,t){return this.callApi("getUserChatBoosts",{chat_id:e,user_id:t})}answerShippingQuery(e,t,r,a){return this.callApi("answerShippingQuery",{ok:t,shipping_query_id:e,shipping_options:r,error_message:a})}answerPreCheckoutQuery(e,t,r){return this.callApi("answerPreCheckoutQuery",{ok:t,pre_checkout_query_id:e,error_message:r})}answerWebAppQuery(e,t){return this.callApi("answerWebAppQuery",{web_app_query_id:e,result:t})}editMessageText(e,t,r,a,n){const i=o.FmtString.normalise(a);return this.callApi("editMessageText",{chat_id:e,message_id:t,inline_message_id:r,...n,...i})}editMessageCaption(e,t,r,a,n){return this.callApi("editMessageCaption",{chat_id:e,message_id:t,inline_message_id:r,...n,...(0,d.fmtCaption)({caption:a})})}editMessageMedia(e,t,r,a,n){return this.callApi("editMessageMedia",{chat_id:e,message_id:t,inline_message_id:r,media:(0,d.fmtCaption)(a),...n})}editMessageReplyMarkup(e,t,r,a){return this.callApi("editMessageReplyMarkup",{chat_id:e,message_id:t,inline_message_id:r,reply_markup:a})}editMessageLiveLocation(e,t,r,a,n,i){return this.callApi("editMessageLiveLocation",{latitude:a,longitude:n,chat_id:e,message_id:t,inline_message_id:r,...i})}stopMessageLiveLocation(e,t,r,a){return this.callApi("stopMessageLiveLocation",{chat_id:e,message_id:t,inline_message_id:r,reply_markup:a})}deleteMessage(e,t){return this.callApi("deleteMessage",{chat_id:e,message_id:t})}deleteMessages(e,t){return this.callApi("deleteMessages",{chat_id:e,message_ids:t})}setChatStickerSet(e,t){return this.callApi("setChatStickerSet",{chat_id:e,sticker_set_name:t})}deleteChatStickerSet(e){return this.callApi("deleteChatStickerSet",{chat_id:e})}getForumTopicIconStickers(){return this.callApi("getForumTopicIconStickers",{})}createForumTopic(e,t,r){return this.callApi("createForumTopic",{chat_id:e,name:t,...r})}editForumTopic(e,t,r){return this.callApi("editForumTopic",{chat_id:e,message_thread_id:t,...r})}closeForumTopic(e,t){return this.callApi("closeForumTopic",{chat_id:e,message_thread_id:t})}reopenForumTopic(e,t){return this.callApi("reopenForumTopic",{chat_id:e,message_thread_id:t})}deleteForumTopic(e,t){return this.callApi("deleteForumTopic",{chat_id:e,message_thread_id:t})}unpinAllForumTopicMessages(e,t){return this.callApi("unpinAllForumTopicMessages",{chat_id:e,message_thread_id:t})}editGeneralForumTopic(e,t){return this.callApi("editGeneralForumTopic",{chat_id:e,name:t})}closeGeneralForumTopic(e){return this.callApi("closeGeneralForumTopic",{chat_id:e})}reopenGeneralForumTopic(e){return this.callApi("reopenGeneralForumTopic",{chat_id:e})}hideGeneralForumTopic(e){return this.callApi("hideGeneralForumTopic",{chat_id:e})}unhideGeneralForumTopic(e){return this.callApi("unhideGeneralForumTopic",{chat_id:e})}unpinAllGeneralForumTopicMessages(e){return this.callApi("unpinAllGeneralForumTopicMessages",{chat_id:e})}getStickerSet(e){return this.callApi("getStickerSet",{name:e})}uploadStickerFile(e,t,r){return this.callApi("uploadStickerFile",{user_id:e,sticker_format:r,sticker:t})}createNewStickerSet(e,t,r,a){return this.callApi("createNewStickerSet",{name:t,title:r,user_id:e,...a})}addStickerToSet(e,t,r){return this.callApi("addStickerToSet",{name:t,user_id:e,...r})}setStickerPositionInSet(e,t){return this.callApi("setStickerPositionInSet",{sticker:e,position:t})}get setStickerSetThumb(){return this.setStickerSetThumbnail}setStickerSetThumbnail(e,t,r){return this.callApi("setStickerSetThumbnail",{name:e,user_id:t,thumbnail:r})}setStickerMaskPosition(e,t){return this.callApi("setStickerMaskPosition",{sticker:e,mask_position:t})}setStickerKeywords(e,t){return this.callApi("setStickerKeywords",{sticker:e,keywords:t})}setStickerEmojiList(e,t){return this.callApi("setStickerEmojiList",{sticker:e,emoji_list:t})}deleteStickerSet(e){return this.callApi("deleteStickerSet",{name:e})}setStickerSetTitle(e,t){return this.callApi("setStickerSetTitle",{name:e,title:t})}setCustomEmojiStickerSetThumbnail(e,t){return this.callApi("setCustomEmojiStickerSetThumbnail",{name:e,custom_emoji_id:t})}deleteStickerFromSet(e){return this.callApi("deleteStickerFromSet",{sticker:e})}getCustomEmojiStickers(e){return this.callApi("getCustomEmojiStickers",{custom_emoji_ids:e})}setMyCommands(e,t){return this.callApi("setMyCommands",{commands:e,...t})}deleteMyCommands(e={}){return this.callApi("deleteMyCommands",e)}getMyCommands(e={}){return this.callApi("getMyCommands",e)}setMyDescription(e,t){return this.callApi("setMyDescription",{description:e,language_code:t})}setMyName(e,t){return this.callApi("setMyName",{name:e,language_code:t})}getMyName(e){return this.callApi("getMyName",{language_code:e})}getMyDescription(e){return this.callApi("getMyDescription",{language_code:e})}setMyShortDescription(e,t){return this.callApi("setMyShortDescription",{short_description:e,language_code:t})}getMyShortDescription(e){return this.callApi("getMyShortDescription",{language_code:e})}setPassportDataErrors(e,t){return this.callApi("setPassportDataErrors",{user_id:e,errors:t})}sendCopy(e,t,r){return this.copyMessage(e,t.chat.id,t.message_id,r)}copyMessage(e,t,r,a){return this.callApi("copyMessage",{chat_id:e,from_chat_id:t,message_id:r,...(0,d.fmtCaption)(a)})}copyMessages(e,t,r,a){return this.callApi("copyMessages",{chat_id:e,from_chat_id:t,message_ids:r,...a})}approveChatJoinRequest(e,t){return this.callApi("approveChatJoinRequest",{chat_id:e,user_id:t})}declineChatJoinRequest(e,t){return this.callApi("declineChatJoinRequest",{chat_id:e,user_id:t})}banChatSenderChat(e,t,r){return this.callApi("banChatSenderChat",{chat_id:e,sender_chat_id:t,...r})}unbanChatSenderChat(e,t){return this.callApi("unbanChatSenderChat",{chat_id:e,sender_chat_id:t})}setChatMenuButton({chatId:e,menuButton:t}={}){return this.callApi("setChatMenuButton",{chat_id:e,menu_button:t})}getChatMenuButton({chatId:e}={}){return this.callApi("getChatMenuButton",{chat_id:e})}setMyDefaultAdministratorRights({rights:e,forChannels:t}={}){return this.callApi("setMyDefaultAdministratorRights",{rights:e,for_channels:t})}getMyDefaultAdministratorRights({forChannels:e}={}){return this.callApi("getMyDefaultAdministratorRights",{for_channels:e})}logOut(){return this.callApi("logOut",{})}close(){return this.callApi("close",{})}}t.Telegram=Telegram;t["default"]=Telegram},7482:(e,t,r)=>{"use strict";var a=r(4403);var mergeBytes=e=>{const t=e.filter((e=>e.length));if(t.length===0){return e.length?e[0]:new Uint8Array}if(t.length===1){return t[0]}const r=t.reduce(((e,t)=>e+t.length),0);const a=new Uint8Array(r);let n=0;t.forEach((e=>{a.set(e,n);n+=e.length}));return a};var padBytes=(e,t)=>{if(e.length>=t)return e;const r=new Uint8Array(t).fill(0);r.set(e);return r};var fixBytes=(e,t)=>padBytes(e.length<=t?e:e.slice(0,t),t);function containsBytes(e,t,r){const a=r===0&&e.length===t.length?e:e.slice(r,r+t.length);if(a.length!==t.length)return false;return t.every(((e,t)=>e===a[t]))}function getEncodedSize(e,t){return"fixedSize"in t?t.fixedSize:t.getSizeFromValue(e)}function createEncoder(e){return Object.freeze({...e,encode:t=>{const r=new Uint8Array(getEncodedSize(t,e));e.write(t,r,0);return r}})}function createDecoder(e){return Object.freeze({...e,decode:(t,r=0)=>e.read(t,r)[0]})}function createCodec(e){return Object.freeze({...e,decode:(t,r=0)=>e.read(t,r)[0],encode:t=>{const r=new Uint8Array(getEncodedSize(t,e));e.write(t,r,0);return r}})}function isFixedSize(e){return"fixedSize"in e&&typeof e.fixedSize==="number"}function assertIsFixedSize(e){if(!isFixedSize(e)){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH)}}function isVariableSize(e){return!isFixedSize(e)}function assertIsVariableSize(e){if(!isVariableSize(e)){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH)}}function combineCodec(e,t){if(isFixedSize(e)!==isFixedSize(t)){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH)}if(isFixedSize(e)&&isFixedSize(t)&&e.fixedSize!==t.fixedSize){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,{decoderFixedSize:t.fixedSize,encoderFixedSize:e.fixedSize})}if(!isFixedSize(e)&&!isFixedSize(t)&&e.maxSize!==t.maxSize){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,{decoderMaxSize:t.maxSize,encoderMaxSize:e.maxSize})}return{...t,...e,decode:t.decode,encode:e.encode,read:t.read,write:e.write}}function addEncoderSentinel(e,t){const write=(r,n,i)=>{const s=e.encode(r);if(findSentinelIndex(s,t)>=0){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL,{encodedBytes:s,hexEncodedBytes:hexBytes(s),hexSentinel:hexBytes(t),sentinel:t})}n.set(s,i);i+=s.length;n.set(t,i);i+=t.length;return i};if(isFixedSize(e)){return createEncoder({...e,fixedSize:e.fixedSize+t.length,write:write})}return createEncoder({...e,...e.maxSize!=null?{maxSize:e.maxSize+t.length}:{},getSizeFromValue:r=>e.getSizeFromValue(r)+t.length,write:write})}function addDecoderSentinel(e,t){const read=(r,n)=>{const i=n===0?r:r.slice(n);const s=findSentinelIndex(i,t);if(s===-1){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES,{decodedBytes:i,hexDecodedBytes:hexBytes(i),hexSentinel:hexBytes(t),sentinel:t})}const o=i.slice(0,s);return[e.decode(o),n+o.length+t.length]};if(isFixedSize(e)){return createDecoder({...e,fixedSize:e.fixedSize+t.length,read:read})}return createDecoder({...e,...e.maxSize!=null?{maxSize:e.maxSize+t.length}:{},read:read})}function addCodecSentinel(e,t){return combineCodec(addEncoderSentinel(e,t),addDecoderSentinel(e,t))}function findSentinelIndex(e,t){return e.findIndex(((e,r,a)=>{if(t.length===1)return e===t[0];return containsBytes(a,t,r)}))}function hexBytes(e){return e.reduce(((e,t)=>e+t.toString(16).padStart(2,"0")),"")}function assertByteArrayIsNotEmptyForCodec(e,t,r=0){if(t.length-r<=0){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY,{codecDescription:e})}}function assertByteArrayHasEnoughBytesForCodec(e,t,r,n=0){const i=r.length-n;if(i<t){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH,{bytesLength:i,codecDescription:e,expected:t})}}function assertByteArrayOffsetIsNotOutOfRange(e,t,r){if(t<0||t>r){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE,{bytesLength:r,codecDescription:e,offset:t})}}function addEncoderSizePrefix(e,t){const write=(r,a,n)=>{const i=e.encode(r);n=t.write(i.length,a,n);a.set(i,n);return n+i.length};if(isFixedSize(t)&&isFixedSize(e)){return createEncoder({...e,fixedSize:t.fixedSize+e.fixedSize,write:write})}const r=isFixedSize(t)?t.fixedSize:t.maxSize??null;const a=isFixedSize(e)?e.fixedSize:e.maxSize??null;const n=r!==null&&a!==null?r+a:null;return createEncoder({...e,...n!==null?{maxSize:n}:{},getSizeFromValue:r=>{const a=getEncodedSize(r,e);return getEncodedSize(a,t)+a},write:write})}function addDecoderSizePrefix(e,t){const read=(r,a)=>{const[n,i]=t.read(r,a);const s=Number(n);a=i;if(a>0||r.length>s){r=r.slice(a,a+s)}assertByteArrayHasEnoughBytesForCodec("addDecoderSizePrefix",s,r);return[e.decode(r),a+s]};if(isFixedSize(t)&&isFixedSize(e)){return createDecoder({...e,fixedSize:t.fixedSize+e.fixedSize,read:read})}const r=isFixedSize(t)?t.fixedSize:t.maxSize??null;const a=isFixedSize(e)?e.fixedSize:e.maxSize??null;const n=r!==null&&a!==null?r+a:null;return createDecoder({...e,...n!==null?{maxSize:n}:{},read:read})}function addCodecSizePrefix(e,t){return combineCodec(addEncoderSizePrefix(e,t),addDecoderSizePrefix(e,t))}function fixEncoderSize(e,t){return createEncoder({fixedSize:t,write:(r,a,n)=>{const i=e.encode(r);const s=i.length>t?i.slice(0,t):i;a.set(s,n);return n+t}})}function fixDecoderSize(e,t){return createDecoder({fixedSize:t,read:(r,a)=>{assertByteArrayHasEnoughBytesForCodec("fixCodecSize",t,r,a);if(a>0||r.length>t){r=r.slice(a,a+t)}if(isFixedSize(e)){r=fixBytes(r,e.fixedSize)}const[n]=e.read(r,0);return[n,a+t]}})}function fixCodecSize(e,t){return combineCodec(fixEncoderSize(e,t),fixDecoderSize(e,t))}function offsetEncoder(e,t){return createEncoder({...e,write:(r,a,n)=>{const wrapBytes=e=>modulo(e,a.length);const i=t.preOffset?t.preOffset({bytes:a,preOffset:n,wrapBytes:wrapBytes}):n;assertByteArrayOffsetIsNotOutOfRange("offsetEncoder",i,a.length);const s=e.write(r,a,i);const o=t.postOffset?t.postOffset({bytes:a,newPreOffset:i,postOffset:s,preOffset:n,wrapBytes:wrapBytes}):s;assertByteArrayOffsetIsNotOutOfRange("offsetEncoder",o,a.length);return o}})}function offsetDecoder(e,t){return createDecoder({...e,read:(r,a)=>{const wrapBytes=e=>modulo(e,r.length);const n=t.preOffset?t.preOffset({bytes:r,preOffset:a,wrapBytes:wrapBytes}):a;assertByteArrayOffsetIsNotOutOfRange("offsetDecoder",n,r.length);const[i,s]=e.read(r,n);const o=t.postOffset?t.postOffset({bytes:r,newPreOffset:n,postOffset:s,preOffset:a,wrapBytes:wrapBytes}):s;assertByteArrayOffsetIsNotOutOfRange("offsetDecoder",o,r.length);return[i,o]}})}function offsetCodec(e,t){return combineCodec(offsetEncoder(e,t),offsetDecoder(e,t))}function modulo(e,t){if(t===0)return 0;return(e%t+t)%t}function resizeEncoder(e,t){if(isFixedSize(e)){const r=t(e.fixedSize);if(r<0){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,{bytesLength:r,codecDescription:"resizeEncoder"})}return createEncoder({...e,fixedSize:r})}return createEncoder({...e,getSizeFromValue:r=>{const n=t(e.getSizeFromValue(r));if(n<0){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,{bytesLength:n,codecDescription:"resizeEncoder"})}return n}})}function resizeDecoder(e,t){if(isFixedSize(e)){const r=t(e.fixedSize);if(r<0){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,{bytesLength:r,codecDescription:"resizeDecoder"})}return createDecoder({...e,fixedSize:r})}return e}function resizeCodec(e,t){return combineCodec(resizeEncoder(e,t),resizeDecoder(e,t))}function padLeftEncoder(e,t){return offsetEncoder(resizeEncoder(e,(e=>e+t)),{preOffset:({preOffset:e})=>e+t})}function padRightEncoder(e,t){return offsetEncoder(resizeEncoder(e,(e=>e+t)),{postOffset:({postOffset:e})=>e+t})}function padLeftDecoder(e,t){return offsetDecoder(resizeDecoder(e,(e=>e+t)),{preOffset:({preOffset:e})=>e+t})}function padRightDecoder(e,t){return offsetDecoder(resizeDecoder(e,(e=>e+t)),{postOffset:({postOffset:e})=>e+t})}function padLeftCodec(e,t){return combineCodec(padLeftEncoder(e,t),padLeftDecoder(e,t))}function padRightCodec(e,t){return combineCodec(padRightEncoder(e,t),padRightDecoder(e,t))}function copySourceToTargetInReverse(e,t,r,a,n=0){while(r<--a){const i=e[r];t[r+n]=e[a];t[a+n]=i;r++}if(r===a){t[r+n]=e[r]}}function reverseEncoder(e){assertIsFixedSize(e);return createEncoder({...e,write:(t,r,a)=>{const n=e.write(t,r,a);copySourceToTargetInReverse(r,r,a,a+e.fixedSize);return n}})}function reverseDecoder(e){assertIsFixedSize(e);return createDecoder({...e,read:(t,r)=>{const a=t.slice();copySourceToTargetInReverse(t,a,r,r+e.fixedSize);return e.read(a,r)}})}function reverseCodec(e){return combineCodec(reverseEncoder(e),reverseDecoder(e))}function transformEncoder(e,t){return createEncoder({...isVariableSize(e)?{...e,getSizeFromValue:r=>e.getSizeFromValue(t(r))}:e,write:(r,a,n)=>e.write(t(r),a,n)})}function transformDecoder(e,t){return createDecoder({...e,read:(r,a)=>{const[n,i]=e.read(r,a);return[t(n,r,a),i]}})}function transformCodec(e,t,r){return createCodec({...transformEncoder(e,t),read:r?transformDecoder(e,r).read:e.read})}t.addCodecSentinel=addCodecSentinel;t.addCodecSizePrefix=addCodecSizePrefix;t.addDecoderSentinel=addDecoderSentinel;t.addDecoderSizePrefix=addDecoderSizePrefix;t.addEncoderSentinel=addEncoderSentinel;t.addEncoderSizePrefix=addEncoderSizePrefix;t.assertByteArrayHasEnoughBytesForCodec=assertByteArrayHasEnoughBytesForCodec;t.assertByteArrayIsNotEmptyForCodec=assertByteArrayIsNotEmptyForCodec;t.assertByteArrayOffsetIsNotOutOfRange=assertByteArrayOffsetIsNotOutOfRange;t.assertIsFixedSize=assertIsFixedSize;t.assertIsVariableSize=assertIsVariableSize;t.combineCodec=combineCodec;t.containsBytes=containsBytes;t.createCodec=createCodec;t.createDecoder=createDecoder;t.createEncoder=createEncoder;t.fixBytes=fixBytes;t.fixCodecSize=fixCodecSize;t.fixDecoderSize=fixDecoderSize;t.fixEncoderSize=fixEncoderSize;t.getEncodedSize=getEncodedSize;t.isFixedSize=isFixedSize;t.isVariableSize=isVariableSize;t.mergeBytes=mergeBytes;t.offsetCodec=offsetCodec;t.offsetDecoder=offsetDecoder;t.offsetEncoder=offsetEncoder;t.padBytes=padBytes;t.padLeftCodec=padLeftCodec;t.padLeftDecoder=padLeftDecoder;t.padLeftEncoder=padLeftEncoder;t.padRightCodec=padRightCodec;t.padRightDecoder=padRightDecoder;t.padRightEncoder=padRightEncoder;t.resizeCodec=resizeCodec;t.resizeDecoder=resizeDecoder;t.resizeEncoder=resizeEncoder;t.reverseCodec=reverseCodec;t.reverseDecoder=reverseDecoder;t.reverseEncoder=reverseEncoder;t.transformCodec=transformCodec;t.transformDecoder=transformDecoder;t.transformEncoder=transformEncoder},3453:(e,t,r)=>{"use strict";var a=r(4403);var n=r(7482);function assertNumberIsBetweenForCodec(e,t,r,n){if(n<t||n>r){throw new a.SolanaError(a.SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE,{codecDescription:e,max:r,min:t,value:n})}}var i=(e=>{e[e["Little"]=0]="Little";e[e["Big"]=1]="Big";return e})(i||{});function isLittleEndian(e){return e?.endian===1?false:true}function numberEncoderFactory(e){return n.createEncoder({fixedSize:e.size,write(t,r,a){if(e.range){assertNumberIsBetweenForCodec(e.name,e.range[0],e.range[1],t)}const n=new ArrayBuffer(e.size);e.set(new DataView(n),t,isLittleEndian(e.config));r.set(new Uint8Array(n),a);return a+e.size}})}function numberDecoderFactory(e){return n.createDecoder({fixedSize:e.size,read(t,r=0){n.assertByteArrayIsNotEmptyForCodec(e.name,t,r);n.assertByteArrayHasEnoughBytesForCodec(e.name,e.size,t,r);const a=new DataView(toArrayBuffer(t,r,e.size));return[e.get(a,isLittleEndian(e.config)),r+e.size]}})}function toArrayBuffer(e,t,r){const a=e.byteOffset+(t??0);const n=r??e.byteLength;return e.buffer.slice(a,a+n)}var getF32Encoder=(e={})=>numberEncoderFactory({config:e,name:"f32",set:(e,t,r)=>e.setFloat32(0,Number(t),r),size:4});var getF32Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getFloat32(0,t),name:"f32",size:4});var getF32Codec=(e={})=>n.combineCodec(getF32Encoder(e),getF32Decoder(e));var getF64Encoder=(e={})=>numberEncoderFactory({config:e,name:"f64",set:(e,t,r)=>e.setFloat64(0,Number(t),r),size:8});var getF64Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getFloat64(0,t),name:"f64",size:8});var getF64Codec=(e={})=>n.combineCodec(getF64Encoder(e),getF64Decoder(e));var getI128Encoder=(e={})=>numberEncoderFactory({config:e,name:"i128",range:[-BigInt("0x7fffffffffffffffffffffffffffffff")-1n,BigInt("0x7fffffffffffffffffffffffffffffff")],set:(e,t,r)=>{const a=r?8:0;const n=r?0:8;const i=0xffffffffffffffffn;e.setBigInt64(a,BigInt(t)>>64n,r);e.setBigUint64(n,BigInt(t)&i,r)},size:16});var getI128Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>{const r=t?8:0;const a=t?0:8;const n=e.getBigInt64(r,t);const i=e.getBigUint64(a,t);return(n<<64n)+i},name:"i128",size:16});var getI128Codec=(e={})=>n.combineCodec(getI128Encoder(e),getI128Decoder(e));var getI16Encoder=(e={})=>numberEncoderFactory({config:e,name:"i16",range:[-Number("0x7fff")-1,Number("0x7fff")],set:(e,t,r)=>e.setInt16(0,Number(t),r),size:2});var getI16Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getInt16(0,t),name:"i16",size:2});var getI16Codec=(e={})=>n.combineCodec(getI16Encoder(e),getI16Decoder(e));var getI32Encoder=(e={})=>numberEncoderFactory({config:e,name:"i32",range:[-Number("0x7fffffff")-1,Number("0x7fffffff")],set:(e,t,r)=>e.setInt32(0,Number(t),r),size:4});var getI32Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getInt32(0,t),name:"i32",size:4});var getI32Codec=(e={})=>n.combineCodec(getI32Encoder(e),getI32Decoder(e));var getI64Encoder=(e={})=>numberEncoderFactory({config:e,name:"i64",range:[-BigInt("0x7fffffffffffffff")-1n,BigInt("0x7fffffffffffffff")],set:(e,t,r)=>e.setBigInt64(0,BigInt(t),r),size:8});var getI64Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getBigInt64(0,t),name:"i64",size:8});var getI64Codec=(e={})=>n.combineCodec(getI64Encoder(e),getI64Decoder(e));var getI8Encoder=()=>numberEncoderFactory({name:"i8",range:[-Number("0x7f")-1,Number("0x7f")],set:(e,t)=>e.setInt8(0,Number(t)),size:1});var getI8Decoder=()=>numberDecoderFactory({get:e=>e.getInt8(0),name:"i8",size:1});var getI8Codec=()=>n.combineCodec(getI8Encoder(),getI8Decoder());var getShortU16Encoder=()=>n.createEncoder({getSizeFromValue:e=>{if(e<=127)return 1;if(e<=16383)return 2;return 3},maxSize:3,write:(e,t,r)=>{assertNumberIsBetweenForCodec("shortU16",0,65535,e);const a=[0];for(let t=0;;t+=1){const r=Number(e)>>t*7;if(r===0){break}const n=127&r;a[t]=n;if(t>0){a[t-1]|=128}}t.set(a,r);return r+a.length}});var getShortU16Decoder=()=>n.createDecoder({maxSize:3,read:(e,t)=>{let r=0;let a=0;while(++a){const n=a-1;const i=e[t+n];const s=127&i;r|=s<<n*7;if((i&128)===0){break}}return[r,t+a]}});var getShortU16Codec=()=>n.combineCodec(getShortU16Encoder(),getShortU16Decoder());var getU128Encoder=(e={})=>numberEncoderFactory({config:e,name:"u128",range:[0n,BigInt("0xffffffffffffffffffffffffffffffff")],set:(e,t,r)=>{const a=r?8:0;const n=r?0:8;const i=0xffffffffffffffffn;e.setBigUint64(a,BigInt(t)>>64n,r);e.setBigUint64(n,BigInt(t)&i,r)},size:16});var getU128Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>{const r=t?8:0;const a=t?0:8;const n=e.getBigUint64(r,t);const i=e.getBigUint64(a,t);return(n<<64n)+i},name:"u128",size:16});var getU128Codec=(e={})=>n.combineCodec(getU128Encoder(e),getU128Decoder(e));var getU16Encoder=(e={})=>numberEncoderFactory({config:e,name:"u16",range:[0,Number("0xffff")],set:(e,t,r)=>e.setUint16(0,Number(t),r),size:2});var getU16Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getUint16(0,t),name:"u16",size:2});var getU16Codec=(e={})=>n.combineCodec(getU16Encoder(e),getU16Decoder(e));var getU32Encoder=(e={})=>numberEncoderFactory({config:e,name:"u32",range:[0,Number("0xffffffff")],set:(e,t,r)=>e.setUint32(0,Number(t),r),size:4});var getU32Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getUint32(0,t),name:"u32",size:4});var getU32Codec=(e={})=>n.combineCodec(getU32Encoder(e),getU32Decoder(e));var getU64Encoder=(e={})=>numberEncoderFactory({config:e,name:"u64",range:[0n,BigInt("0xffffffffffffffff")],set:(e,t,r)=>e.setBigUint64(0,BigInt(t),r),size:8});var getU64Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getBigUint64(0,t),name:"u64",size:8});var getU64Codec=(e={})=>n.combineCodec(getU64Encoder(e),getU64Decoder(e));var getU8Encoder=()=>numberEncoderFactory({name:"u8",range:[0,Number("0xff")],set:(e,t)=>e.setUint8(0,Number(t)),size:1});var getU8Decoder=()=>numberDecoderFactory({get:e=>e.getUint8(0),name:"u8",size:1});var getU8Codec=()=>n.combineCodec(getU8Encoder(),getU8Decoder());t.Endian=i;t.assertNumberIsBetweenForCodec=assertNumberIsBetweenForCodec;t.getF32Codec=getF32Codec;t.getF32Decoder=getF32Decoder;t.getF32Encoder=getF32Encoder;t.getF64Codec=getF64Codec;t.getF64Decoder=getF64Decoder;t.getF64Encoder=getF64Encoder;t.getI128Codec=getI128Codec;t.getI128Decoder=getI128Decoder;t.getI128Encoder=getI128Encoder;t.getI16Codec=getI16Codec;t.getI16Decoder=getI16Decoder;t.getI16Encoder=getI16Encoder;t.getI32Codec=getI32Codec;t.getI32Decoder=getI32Decoder;t.getI32Encoder=getI32Encoder;t.getI64Codec=getI64Codec;t.getI64Decoder=getI64Decoder;t.getI64Encoder=getI64Encoder;t.getI8Codec=getI8Codec;t.getI8Decoder=getI8Decoder;t.getI8Encoder=getI8Encoder;t.getShortU16Codec=getShortU16Codec;t.getShortU16Decoder=getShortU16Decoder;t.getShortU16Encoder=getShortU16Encoder;t.getU128Codec=getU128Codec;t.getU128Decoder=getU128Decoder;t.getU128Encoder=getU128Encoder;t.getU16Codec=getU16Codec;t.getU16Decoder=getU16Decoder;t.getU16Encoder=getU16Encoder;t.getU32Codec=getU32Codec;t.getU32Decoder=getU32Decoder;t.getU32Encoder=getU32Encoder;t.getU64Codec=getU64Codec;t.getU64Decoder=getU64Decoder;t.getU64Encoder=getU64Encoder;t.getU8Codec=getU8Codec;t.getU8Decoder=getU8Decoder;t.getU8Encoder=getU8Encoder},4403:(e,t)=>{"use strict";var r=1;var a=2;var n=3;var i=4;var s=5;var o=6;var d=7;var p=8;var c=9;var l=10;var u=-32700;var m=-32603;var f=-32602;var g=-32601;var y=-32600;var _=-32016;var v=-32015;var b=-32014;var w=-32013;var E=-32012;var R=-32011;var T=-32010;var O=-32009;var N=-32008;var C=-32007;var k=-32006;var I=-32005;var x=-32004;var B=-32003;var P=-32002;var D=-32001;var L=28e5;var U=2800001;var F=2800002;var V=2800003;var z=2800004;var j=2800005;var H=2800006;var q=2800007;var $=2800008;var K=2800009;var W=2800010;var G=2800011;var Y=323e4;var J=32300001;var X=3230002;var Q=3230003;var ee=3230004;var te=361e4;var re=3610001;var ae=3610002;var ne=3610003;var ie=3610004;var se=3610005;var oe=3610006;var de=3610007;var pe=3611e3;var ce=3704e3;var le=3704001;var ue=3704002;var me=3704003;var he=3704004;var fe=4128e3;var ge=4128001;var ye=4128002;var _e=4615e3;var ve=4615001;var be=4615002;var we=4615003;var Se=4615004;var Ee=4615005;var Ae=4615006;var Re=4615007;var Te=4615008;var Oe=4615009;var Ne=4615010;var Ce=4615011;var ke=4615012;var Ie=4615013;var xe=4615014;var Be=4615015;var Pe=4615016;var De=4615017;var Le=4615018;var Me=4615019;var Ue=4615020;var Fe=4615021;var Ve=4615022;var ze=4615023;var je=4615024;var He=4615025;var qe=4615026;var $e=4615027;var Ke=4615028;var We=4615029;var Ge=4615030;var Ye=4615031;var Je=4615032;var Xe=4615033;var Ze=4615034;var Qe=4615035;var et=4615036;var tt=4615037;var rt=4615038;var nt=4615039;var it=4615040;var st=4615041;var ot=4615042;var dt=4615043;var pt=4615044;var ct=4615045;var ut=4615046;var mt=4615047;var ht=4615048;var ft=4615049;var yt=4615050;var _t=4615051;var vt=4615052;var bt=4615053;var wt=4615054;var St=5508e3;var Et=5508001;var At=5508002;var Rt=5508003;var Tt=5508004;var Ot=5508005;var Nt=5508006;var Ct=5508007;var kt=5508008;var It=5508009;var xt=5508010;var Bt=5508011;var Pt=5663e3;var Dt=5663001;var Lt=5663002;var Mt=5663003;var Ut=5663004;var Ft=5663005;var Vt=5663006;var zt=5663007;var jt=5663008;var Ht=5663009;var qt=5663010;var $t=5663011;var Kt=5663012;var Wt=5663013;var Gt=5663014;var Yt=5663015;var Jt=5663016;var Xt=5663017;var Zt=5663018;var Qt=5663019;var er=5663020;var tr=705e4;var rr=7050001;var ar=7050002;var nr=7050003;var ir=7050004;var sr=7050005;var dr=7050006;var pr=7050007;var cr=7050008;var lr=7050009;var ur=7050010;var mr=7050011;var hr=7050012;var fr=7050013;var gr=7050014;var yr=7050015;var _r=7050016;var vr=7050017;var br=7050018;var wr=7050019;var Sr=7050020;var Er=7050021;var Ar=7050022;var Rr=7050023;var Tr=7050024;var Or=7050025;var Nr=7050026;var Cr=7050027;var kr=7050028;var Ir=7050029;var xr=7050030;var Br=7050031;var Pr=7050032;var Dr=7050033;var Lr=7050034;var Mr=7050035;var Ur=7050036;var Fr=8078e3;var Vr=8078001;var zr=8078002;var jr=8078003;var Hr=8078004;var qr=8078005;var $r=8078006;var Kr=8078007;var Wr=8078008;var Gr=8078009;var Yr=8078010;var Jr=8078011;var Xr=8078012;var Zr=8078013;var Qr=8078014;var ea=8078015;var ta=8078016;var ra=8078017;var aa=8078018;var na=8078019;var ia=8078020;var sa=8078021;var oa=8078022;var da=81e5;var pa=8100001;var ca=8100002;var la=8100003;var ua=819e4;var ma=8190001;var ha=8190002;var fa=8190003;var ga=8190004;var ya=99e5;var _a=9900001;var va=9900002;var ba=9900003;var wa=9900004;function encodeValue(e){if(Array.isArray(e)){const t=e.map(encodeValue).join("%2C%20");return"%5B"+t+"%5D"}else if(typeof e==="bigint"){return`${e}n`}else{return encodeURIComponent(String(e!=null&&Object.getPrototypeOf(e)===null?{...e}:e))}}function encodeObjectContextEntry([e,t]){return`${e}=${encodeValue(t)}`}function encodeContextObject(e){const t=Object.entries(e).map(encodeObjectContextEntry).join("&");return Buffer.from(t,"utf8").toString("base64")}var Sa={[Y]:"Account not found at address: $address",[ee]:"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.",[Q]:"Expected decoded account at address: $address",[X]:"Failed to decode account data at address: $address",[J]:"Accounts not found at addresses: $addresses",[K]:"Unable to find a viable program address bump seed.",[F]:"$putativeAddress is not a base58-encoded address.",[L]:"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.",[V]:"The `CryptoKey` must be an `Ed25519` public key.",[G]:"$putativeOffCurveAddress is not a base58-encoded off-curve address.",[$]:"Invalid seeds; point must fall off the Ed25519 curve.",[z]:"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].",[H]:"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.",[q]:"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.",[j]:"Expected program derived address bump to be in the range [0, 255], got: $bump.",[W]:"Program address cannot end with PDA marker.",[U]:"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.",[i]:"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.",[r]:"The network has progressed past the last block for which this transaction could have been committed.",[Fr]:"Codec [$codecDescription] cannot decode empty byte arrays.",[oa]:"Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.",[ia]:"Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].",[qr]:"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].",[$r]:"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].",[Hr]:"Encoder and decoder must either both be fixed-size or variable-size.",[Wr]:"Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.",[zr]:"Expected a fixed-size codec, got a variable-size one.",[Zr]:"Codec [$codecDescription] expected a positive byte length, got $bytesLength.",[jr]:"Expected a variable-size codec, got a fixed-size one.",[na]:"Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].",[Vr]:"Codec [$codecDescription] expected $expected bytes, got $bytesLength.",[aa]:"Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].",[Gr]:"Invalid discriminated union variant. Expected one of [$variants], got $value.",[Yr]:"Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.",[ea]:"Invalid literal union variant. Expected one of [$variants], got $value.",[Kr]:"Expected [$codecDescription] to have $expected items, got $actual.",[Xr]:"Invalid value $value for base $base with alphabet $alphabet.",[ta]:"Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.",[Jr]:"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.",[Qr]:"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.",[sa]:"Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].",[ra]:"Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.",[pe]:"No random values implementation could be found.",[Oe]:"instruction requires an uninitialized account",[ze]:"instruction tries to borrow reference for an account which is already borrowed",[je]:"instruction left account with an outstanding borrowed reference",[Fe]:"program other than the account's owner changed the size of the account data",[Ee]:"account data too small for instruction",[Ve]:"instruction expected an executable account",[ut]:"An account does not have enough lamports to be rent-exempt",[ht]:"Program arithmetic overflowed",[ct]:"Failed to serialize or deserialize account data: $encodedData",[wt]:"Builtin programs must consume compute units",[Je]:"Cross-program invocation call depth too deep",[rt]:"Computational budget exceeded",[qe]:"custom program error: #$code",[De]:"instruction contains duplicate accounts",[He]:"instruction modifications of multiply-passed account differ",[Ge]:"executable accounts must be rent exempt",[Ke]:"instruction changed executable accounts data",[We]:"instruction changed the balance of an executable account",[Le]:"instruction changed executable bit of an account",[xe]:"instruction modified data of an account it does not own",[Ie]:"instruction spent from the balance of an account it does not own",[ve]:"generic instruction error",[yt]:"Provided owner is not allowed",[dt]:"Account is immutable",[pt]:"Incorrect authority provided",[Re]:"incorrect program id for instruction",[Ae]:"insufficient funds for instruction",[Se]:"invalid account data for instruction",[mt]:"Invalid account owner",[be]:"invalid program argument",[$e]:"program returned invalid error code",[we]:"invalid instruction data",[tt]:"Failed to reallocate account data",[et]:"Provided seeds do not result in a valid address",[_t]:"Accounts data allocations exceeded the maximum allowed per transaction",[vt]:"Max accounts exceeded",[bt]:"Max instruction trace length exceeded",[Qe]:"Length of the seed is too long for address generation",[Xe]:"An account required by the instruction is missing",[Te]:"missing required signature for instruction",[ke]:"instruction illegally modified the program id of an account",[Ue]:"insufficient account keys for instruction",[nt]:"Cross-program invocation with unauthorized signer or writable account",[it]:"Failed to create program execution environment",[ot]:"Program failed to compile",[st]:"Program failed to complete",[Pe]:"instruction modified data of a read-only account",[Be]:"instruction changed the balance of a read-only account",[Ze]:"Cross-program invocation reentrancy not allowed for this instruction",[Me]:"instruction modified rent epoch of an account",[Ce]:"sum of account balances before and after instruction do not match",[Ne]:"instruction requires an initialized account",[_e]:"",[Ye]:"Unsupported program id",[ft]:"Unsupported sysvar",[fe]:"The instruction does not have any accounts.",[ge]:"The instruction does not have any data.",[ye]:"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.",[s]:"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.",[a]:"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`",[va]:"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[wa]:"Invariant violation: This data publisher does not publish to the channel named `$channelName`. Supported channels include $supportedChannelNames.",[_a]:"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[ya]:"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[ba]:"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[m]:"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)",[f]:"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)",[y]:"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)",[g]:"JSON-RPC error: The method does not exist / is not available ($__serverMessage)",[u]:"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)",[E]:"$__serverMessage",[D]:"$__serverMessage",[x]:"$__serverMessage",[b]:"$__serverMessage",[T]:"$__serverMessage",[O]:"$__serverMessage",[_]:"Minimum context slot has not been reached",[I]:"Node is unhealthy; behind by $numSlotsBehind slots",[N]:"No snapshot",[P]:"Transaction simulation failed",[C]:"$__serverMessage",[R]:"Transaction history is not available from this node",[k]:"$__serverMessage",[w]:"Transaction signature length mismatch",[B]:"Transaction signature verification failure",[v]:"$__serverMessage",[ce]:"Key pair bytes must be of length 64, got $byteLength.",[le]:"Expected private key bytes with length 32. Actual length: $actualLength.",[ue]:"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.",[he]:"The provided private key does not match the provided public key.",[me]:"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.",[o]:"Lamports value must be in the range [0, 2e64-1]",[d]:"`$value` cannot be parsed as a `BigInt`",[l]:"$message",[p]:"`$value` cannot be parsed as a `Number`",[n]:"No nonce account could be found at address `$nonceAccountAddress`",[ua]:"The notification name must end in 'Notifications' and the API must supply a subscription plan creator function for the notification '$notificationName'.",[ha]:"WebSocket was closed before payload could be added to the send buffer",[fa]:"WebSocket connection closed",[ga]:"WebSocket failed to connect",[ma]:"Failed to obtain a subscription id from the server",[la]:"Could not find an API plan for RPC method: `$method`",[da]:"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.",[ca]:"HTTP error ($statusCode): $message",[pa]:"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.",[St]:"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.",[Et]:"The provided value does not implement the `KeyPairSigner` interface",[Rt]:"The provided value does not implement the `MessageModifyingSigner` interface",[Tt]:"The provided value does not implement the `MessagePartialSigner` interface",[At]:"The provided value does not implement any of the `MessageSigner` interfaces",[Nt]:"The provided value does not implement the `TransactionModifyingSigner` interface",[Ct]:"The provided value does not implement the `TransactionPartialSigner` interface",[kt]:"The provided value does not implement the `TransactionSendingSigner` interface",[Ot]:"The provided value does not implement any of the `TransactionSigner` interfaces",[It]:"More than one `TransactionSendingSigner` was identified.",[xt]:"No `TransactionSendingSigner` was identified. Please provide a valid `TransactionWithSingleSendingSigner` transaction.",[Bt]:"Wallet account signers do not support signing multiple messages/transactions in a single operation",[de]:"Cannot export a non-extractable key.",[re]:"No digest implementation could be found.",[te]:"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.",[ae]:"This runtime does not support the generation of Ed25519 key pairs.\n\nInstall @solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in environments that do not support Ed25519.\n\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.",[ne]:"No signature verification implementation could be found.",[ie]:"No key generation implementation could be found.",[se]:"No signing implementation could be found.",[oe]:"No key export implementation could be found.",[c]:"Timestamp value must be in the range [-(2n ** 63n), (2n ** 63n) - 1]. `$value` given",[_r]:"Transaction processing left an account with an outstanding borrowed reference",[rr]:"Account in use",[ar]:"Account loaded twice",[nr]:"Attempt to debit an account but found no record of a prior credit.",[Rr]:"Transaction loads an address table account that doesn't exist",[pr]:"This transaction has already been processed",[cr]:"Blockhash not found",[lr]:"Loader call chain is too deep",[yr]:"Transactions are currently disabled due to cluster maintenance",[xr]:"Transaction contains a duplicate instruction ($index) that is not allowed",[sr]:"Insufficient funds for fee",[Br]:"Transaction results in an account ($accountIndex) with insufficient funds for rent",[dr]:"This account may not be used to pay transaction fees",[mr]:"Transaction contains an invalid account reference",[Or]:"Transaction loads an address table account with invalid data",[Nr]:"Transaction address table lookup uses an invalid index",[Tr]:"Transaction loads an address table account with an invalid owner",[Dr]:"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.",[fr]:"This program may not be used for executing instructions",[Cr]:"Transaction leaves an account with a lower balance than rent-exempt minimum",[wr]:"Transaction loads a writable account that cannot be written",[Pr]:"Transaction exceeded max loaded accounts data size cap",[ur]:"Transaction requires a fee but has no signature present",[ir]:"Attempt to load a program that does not exist",[Mr]:"Execution of the program referenced by account at index $accountIndex is temporarily restricted.",[Lr]:"ResanitizationNeeded",[gr]:"Transaction failed to sanitize accounts offsets correctly",[hr]:"Transaction did not pass signature verification",[Ar]:"Transaction locked too many accounts",[Ur]:"Sum of account balances before and after transaction do not match",[tr]:"The transaction failed with the error `$errorName`",[br]:"Transaction version is unsupported",[Er]:"Transaction would exceed account data limit within the block",[Ir]:"Transaction would exceed total account data limit",[Sr]:"Transaction would exceed max account limit within the block",[vr]:"Transaction would exceed max Block Cost Limit",[kr]:"Transaction would exceed max Vote Cost Limit",[Yt]:"Attempted to sign a transaction with an address that is not a signer for it",[qt]:"Transaction is missing an address at index: $index.",[Jt]:"Transaction has no expected signers therefore it cannot be encoded",[er]:"Transaction size $transactionSize exceeds limit of $transactionSizeLimit bytes",[Lt]:"Transaction does not have a blockhash lifetime",[Mt]:"Transaction is not a durable nonce transaction",[Ft]:"Contents of these address lookup tables unknown: $lookupTableAddresses",[Vt]:"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved",[jt]:"No fee payer set in CompiledTransaction",[zt]:"Could not find program address at index $index",[Zt]:"Failed to estimate the compute unit consumption for this transaction message. This is likely because simulating the transaction failed. Inspect the `cause` property of this error to learn more",[Qt]:"Transaction failed when it was simulated in order to estimate the compute unit consumption. The compute unit estimate provided is for a transaction that failed when simulated and may not be representative of the compute units this transaction would consume if successful. Inspect the `cause` property of this error to learn more",[$t]:"Transaction is missing a fee payer.",[Kt]:"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.",[Gt]:"Transaction first instruction is not advance nonce account instruction.",[Wt]:"Transaction with no instructions cannot be durable nonce transaction.",[Pt]:"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees",[Dt]:"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable",[Xt]:"The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.",[Ht]:"Transaction is missing signatures for addresses: $addresses.",[Ut]:"Transaction version must be in the range [0, 127]. `$actualVersion` given"};var Ea="i";var Aa="t";function getHumanReadableErrorMessage(e,t={}){const r=Sa[e];if(r.length===0){return""}let a;function commitStateUpTo(e){if(a[Aa]===2){const i=r.slice(a[Ea]+1,e);n.push(i in t?`${t[i]}`:`$${i}`)}else if(a[Aa]===1){n.push(r.slice(a[Ea],e))}}const n=[];r.split("").forEach(((e,t)=>{if(t===0){a={[Ea]:0,[Aa]:r[0]==="\\"?0:r[0]==="$"?2:1};return}let n;switch(a[Aa]){case 0:n={[Ea]:t,[Aa]:1};break;case 1:if(e==="\\"){n={[Ea]:t,[Aa]:0}}else if(e==="$"){n={[Ea]:t,[Aa]:2}}break;case 2:if(e==="\\"){n={[Ea]:t,[Aa]:0}}else if(e==="$"){n={[Ea]:t,[Aa]:2}}else if(!e.match(/\w/)){n={[Ea]:t,[Aa]:1}}break}if(n){if(a!==n){commitStateUpTo(t)}a=n}}));commitStateUpTo();return n.join("")}function getErrorMessage(e,t={}){if(process.env.NODE_ENV!=="production"){return getHumanReadableErrorMessage(e,t)}else{let r=`Solana error #${e}; Decode this error by running \`npx @solana/errors decode -- ${e}`;if(Object.keys(t).length){r+=` '${encodeContextObject(t)}'`}return`${r}\``}}function isSolanaError(e,t){const r=e instanceof Error&&e.name==="SolanaError";if(r){if(t!==void 0){return e.context.__code===t}return true}return false}var Ra=class extends Error{cause=this.cause;context;constructor(...[e,t]){let r;let a;if(t){const{cause:e,...n}=t;if(e){a={cause:e}}if(Object.keys(n).length>0){r=n}}const n=getErrorMessage(e,r);super(n,a);this.context={__code:e,...r};this.name="SolanaError"}};function safeCaptureStackTrace(...e){if("captureStackTrace"in Error&&typeof Error.captureStackTrace==="function"){Error.captureStackTrace(...e)}}function getSolanaErrorFromRpcError({errorCodeBaseOffset:e,getErrorContext:t,orderedErrorNames:r,rpcEnumError:a},n){let i;let s;if(typeof a==="string"){i=a}else{i=Object.keys(a)[0];s=a[i]}const o=r.indexOf(i);const d=e+o;const p=t(d,i,s);const c=new Ra(d,p);safeCaptureStackTrace(c,n);return c}var Ta=["GenericError","InvalidArgument","InvalidInstructionData","InvalidAccountData","AccountDataTooSmall","InsufficientFunds","IncorrectProgramId","MissingRequiredSignature","AccountAlreadyInitialized","UninitializedAccount","UnbalancedInstruction","ModifiedProgramId","ExternalAccountLamportSpend","ExternalAccountDataModified","ReadonlyLamportChange","ReadonlyDataModified","DuplicateAccountIndex","ExecutableModified","RentEpochModified","NotEnoughAccountKeys","AccountDataSizeChanged","AccountNotExecutable","AccountBorrowFailed","AccountBorrowOutstanding","DuplicateAccountOutOfSync","Custom","InvalidError","ExecutableDataModified","ExecutableLamportChange","ExecutableAccountNotRentExempt","UnsupportedProgramId","CallDepth","MissingAccount","ReentrancyNotAllowed","MaxSeedLengthExceeded","InvalidSeeds","InvalidRealloc","ComputationalBudgetExceeded","PrivilegeEscalation","ProgramEnvironmentSetupFailure","ProgramFailedToComplete","ProgramFailedToCompile","Immutable","IncorrectAuthority","BorshIoError","AccountNotRentExempt","InvalidAccountOwner","ArithmeticOverflow","UnsupportedSysvar","IllegalOwner","MaxAccountsDataAllocationsExceeded","MaxAccountsExceeded","MaxInstructionTraceLengthExceeded","BuiltinProgramsMustConsumeComputeUnits"];function getSolanaErrorFromInstructionError(e,t){const r=Number(e);return getSolanaErrorFromRpcError({errorCodeBaseOffset:4615001,getErrorContext(e,t,a){if(e===_e){return{errorName:t,index:r,...a!==void 0?{instructionErrorContext:a}:null}}else if(e===qe){return{code:Number(a),index:r}}else if(e===ct){return{encodedData:a,index:r}}return{index:r}},orderedErrorNames:Ta,rpcEnumError:t},getSolanaErrorFromInstructionError)}var Oa=["AccountInUse","AccountLoadedTwice","AccountNotFound","ProgramAccountNotFound","InsufficientFundsForFee","InvalidAccountForFee","AlreadyProcessed","BlockhashNotFound","CallChainTooDeep","MissingSignatureForFee","InvalidAccountIndex","SignatureFailure","InvalidProgramForExecution","SanitizeFailure","ClusterMaintenance","AccountBorrowOutstanding","WouldExceedMaxBlockCostLimit","UnsupportedVersion","InvalidWritableAccount","WouldExceedMaxAccountCostLimit","WouldExceedAccountDataBlockLimit","TooManyAccountLocks","AddressLookupTableNotFound","InvalidAddressLookupTableOwner","InvalidAddressLookupTableData","InvalidAddressLookupTableIndex","InvalidRentPayingAccount","WouldExceedMaxVoteCostLimit","WouldExceedAccountDataTotalLimit","DuplicateInstruction","InsufficientFundsForRent","MaxLoadedAccountsDataSizeExceeded","InvalidLoadedAccountsDataSizeLimit","ResanitizationNeeded","ProgramExecutionTemporarilyRestricted","UnbalancedTransaction"];function getSolanaErrorFromTransactionError(e){if(typeof e==="object"&&"InstructionError"in e){return getSolanaErrorFromInstructionError(...e.InstructionError)}return getSolanaErrorFromRpcError({errorCodeBaseOffset:7050001,getErrorContext(e,t,r){if(e===tr){return{errorName:t,...r!==void 0?{transactionErrorContext:r}:null}}else if(e===xr){return{index:Number(r)}}else if(e===Br||e===Mr){return{accountIndex:Number(r.account_index)}}},orderedErrorNames:Oa,rpcEnumError:e},getSolanaErrorFromTransactionError)}function getSolanaErrorFromJsonRpcError(e){let t;if(isRpcErrorResponse(e)){const{code:r,data:a,message:n}=e;const i=Number(r);if(i===P){const{err:e,...r}=a;const n=e?{cause:getSolanaErrorFromTransactionError(e)}:null;t=new Ra(P,{...r,...n})}else{let e;switch(i){case m:case f:case y:case g:case u:case E:case D:case x:case b:case T:case O:case C:case k:case v:e={__serverMessage:n};break;default:if(typeof a==="object"&&!Array.isArray(a)){e=a}}t=new Ra(i,e)}}else{const r=typeof e==="object"&&e!==null&&"message"in e&&typeof e.message==="string"?e.message:"Malformed JSON-RPC error with no message attribute";t=new Ra(l,{error:e,message:r})}safeCaptureStackTrace(t,getSolanaErrorFromJsonRpcError);return t}function isRpcErrorResponse(e){return typeof e==="object"&&e!==null&&"code"in e&&"message"in e&&(typeof e.code==="number"||typeof e.code==="bigint")&&typeof e.message==="string"}t.SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND=Y;t.SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED=ee;t.SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT=Q;t.SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT=X;t.SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND=J;t.SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED=K;t.SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS=F;t.SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH=L;t.SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY=V;t.SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS=G;t.SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE=$;t.SOLANA_ERROR__ADDRESSES__MALFORMED_PDA=z;t.SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED=H;t.SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED=q;t.SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE=j;t.SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER=W;t.SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE=U;t.SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE=i;t.SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED=r;t.SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY=Fr;t.SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS=oa;t.SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL=ia;t.SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH=qr;t.SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH=$r;t.SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH=Hr;t.SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE=Wr;t.SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH=zr;t.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH=Zr;t.SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH=jr;t.SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE=na;t.SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH=Vr;t.SOLANA_ERROR__CODECS__INVALID_CONSTANT=aa;t.SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT=Gr;t.SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT=Yr;t.SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT=ea;t.SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS=Kr;t.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE=Xr;t.SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE=ta;t.SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE=Jr;t.SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE=Qr;t.SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES=sa;t.SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE=ra;t.SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED=pe;t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED=Oe;t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED=ze;t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING=je;t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED=Fe;t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL=Ee;t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE=Ve;t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT=ut;t.SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW=ht;t.SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR=ct;t.SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS=wt;t.SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH=Je;t.SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED=rt;t.SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM=qe;t.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX=De;t.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC=He;t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT=Ge;t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED=Ke;t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE=We;t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED=Le;t.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED=xe;t.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND=Ie;t.SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR=ve;t.SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER=yt;t.SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE=dt;t.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY=pt;t.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID=Re;t.SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS=Ae;t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA=Se;t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER=mt;t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT=be;t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR=$e;t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA=we;t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC=tt;t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS=et;t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED=_t;t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED=vt;t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED=bt;t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED=Qe;t.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT=Xe;t.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE=Te;t.SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID=ke;t.SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS=Ue;t.SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION=nt;t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE=it;t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE=ot;t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE=st;t.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED=Pe;t.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE=Be;t.SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED=Ze;t.SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED=Me;t.SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION=Ce;t.SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT=Ne;t.SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN=_e;t.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID=Ye;t.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR=ft;t.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS=fe;t.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA=ge;t.SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH=ye;t.SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH=s;t.SOLANA_ERROR__INVALID_NONCE=a;t.SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING=va;t.SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED=wa;t.SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE=_a;t.SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING=ya;t.SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE=ba;t.SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR=m;t.SOLANA_ERROR__JSON_RPC__INVALID_PARAMS=f;t.SOLANA_ERROR__JSON_RPC__INVALID_REQUEST=y;t.SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND=g;t.SOLANA_ERROR__JSON_RPC__PARSE_ERROR=u;t.SOLANA_ERROR__JSON_RPC__SCAN_ERROR=E;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP=D;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE=x;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET=b;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX=T;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED=O;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED=_;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY=I;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT=N;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE=P;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED=C;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE=R;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE=k;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH=w;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE=B;t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION=v;t.SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH=ce;t.SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH=le;t.SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH=ue;t.SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY=he;t.SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE=me;t.SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE=o;t.SOLANA_ERROR__MALFORMED_BIGINT_STRING=d;t.SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR=l;t.SOLANA_ERROR__MALFORMED_NUMBER_STRING=p;t.SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND=n;t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN=ua;t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED=ha;t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED=fa;t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT=ga;t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID=ma;t.SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD=la;t.SOLANA_ERROR__RPC__INTEGER_OVERFLOW=da;t.SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR=ca;t.SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN=pa;t.SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS=St;t.SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER=Et;t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER=Rt;t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER=Tt;t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER=At;t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER=Nt;t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER=Ct;t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER=kt;t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER=Ot;t.SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS=It;t.SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING=xt;t.SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED=Bt;t.SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY=de;t.SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED=re;t.SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT=te;t.SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED=ae;t.SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED=ne;t.SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED=ie;t.SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED=se;t.SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED=oe;t.SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE=c;t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING=_r;t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE=rr;t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE=ar;t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND=nr;t.SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND=Rr;t.SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED=pr;t.SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND=cr;t.SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP=lr;t.SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE=yr;t.SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION=xr;t.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE=sr;t.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT=Br;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE=dr;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX=mr;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA=Or;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX=Nr;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER=Tr;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT=Dr;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION=fr;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT=Cr;t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT=wr;t.SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED=Pr;t.SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE=ur;t.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND=ir;t.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED=Mr;t.SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED=Lr;t.SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE=gr;t.SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE=hr;t.SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS=Ar;t.SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION=Ur;t.SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN=tr;t.SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION=br;t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT=Er;t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT=Ir;t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT=Sr;t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT=vr;t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT=kr;t.SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION=Yt;t.SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING=qt;t.SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES=Jt;t.SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT=er;t.SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME=Lt;t.SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME=Mt;t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING=Ft;t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE=Vt;t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING=jt;t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND=zt;t.SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT=Zt;t.SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT=Qt;t.SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING=$t;t.SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING=Kt;t.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE=Gt;t.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING=Wt;t.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES=Pt;t.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE=Dt;t.SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH=Xt;t.SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING=Ht;t.SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE=Ut;t.SolanaError=Ra;t.getSolanaErrorFromInstructionError=getSolanaErrorFromInstructionError;t.getSolanaErrorFromJsonRpcError=getSolanaErrorFromJsonRpcError;t.getSolanaErrorFromTransactionError=getSolanaErrorFromTransactionError;t.isSolanaError=isSolanaError;t.safeCaptureStackTrace=safeCaptureStackTrace},6968:(e,t,r)=>{"use strict";var a=r(8310);var n=r(1164);var i=r(7016);var s=r(3342);function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var o=_interopDefault(a);var d=_interopDefault(i);function WebSocket(e,t){return new o.default(e,t)}var p=class{encode(e){return JSON.stringify(e)}decode(e){return JSON.parse(e)}};var c=class extends n.EventEmitter{address;rpc_id;queue;options;autoconnect;ready;reconnect;reconnect_timer_id;reconnect_interval;max_reconnects;rest_options;current_reconnects;generate_request_id;socket;webSocketFactory;dataPack;constructor(e,t="ws://localhost:8080",{autoconnect:r=true,reconnect:a=true,reconnect_interval:n=1e3,max_reconnects:i=5,...s}={},o,d){super();this.webSocketFactory=e;this.queue={};this.rpc_id=0;this.address=t;this.autoconnect=r;this.ready=false;this.reconnect=a;this.reconnect_timer_id=void 0;this.reconnect_interval=n;this.max_reconnects=i;this.rest_options=s;this.current_reconnects=0;this.generate_request_id=o||(()=>typeof this.rpc_id==="number"?++this.rpc_id:Number(this.rpc_id)+1);if(!d)this.dataPack=new p;else this.dataPack=d;if(this.autoconnect)this._connect(this.address,{autoconnect:this.autoconnect,reconnect:this.reconnect,reconnect_interval:this.reconnect_interval,max_reconnects:this.max_reconnects,...this.rest_options})}connect(){if(this.socket)return;this._connect(this.address,{autoconnect:this.autoconnect,reconnect:this.reconnect,reconnect_interval:this.reconnect_interval,max_reconnects:this.max_reconnects,...this.rest_options})}call(e,t,r,a){if(!a&&"object"===typeof r){a=r;r=null}return new Promise(((n,i)=>{if(!this.ready)return i(new Error("socket not ready"));const s=this.generate_request_id(e,t);const o={jsonrpc:"2.0",method:e,params:t||void 0,id:s};this.socket.send(this.dataPack.encode(o),a,(e=>{if(e)return i(e);this.queue[s]={promise:[n,i]};if(r){this.queue[s].timeout=setTimeout((()=>{delete this.queue[s];i(new Error("reply timeout"))}),r)}}))}))}async login(e){const t=await this.call("rpc.login",e);if(!t)throw new Error("authentication failed");return t}async listMethods(){return await this.call("__listMethods")}notify(e,t){return new Promise(((r,a)=>{if(!this.ready)return a(new Error("socket not ready"));const n={jsonrpc:"2.0",method:e,params:t};this.socket.send(this.dataPack.encode(n),(e=>{if(e)return a(e);r()}))}))}async subscribe(e){if(typeof e==="string")e=[e];const t=await this.call("rpc.on",e);if(typeof e==="string"&&t[e]!=="ok")throw new Error("Failed subscribing to an event '"+e+"' with: "+t[e]);return t}async unsubscribe(e){if(typeof e==="string")e=[e];const t=await this.call("rpc.off",e);if(typeof e==="string"&&t[e]!=="ok")throw new Error("Failed unsubscribing from an event with: "+t);return t}close(e,t){this.socket.close(e||1e3,t)}setAutoReconnect(e){this.reconnect=e}setReconnectInterval(e){this.reconnect_interval=e}setMaxReconnects(e){this.max_reconnects=e}_connect(e,t){clearTimeout(this.reconnect_timer_id);this.socket=this.webSocketFactory(e,t);this.socket.addEventListener("open",(()=>{this.ready=true;this.emit("open");this.current_reconnects=0}));this.socket.addEventListener("message",(({data:e})=>{if(e instanceof ArrayBuffer)e=Buffer.from(e).toString();try{e=this.dataPack.decode(e)}catch(e){return}if(e.notification&&this.listeners(e.notification).length){if(!Object.keys(e.params).length)return this.emit(e.notification);const t=[e.notification];if(e.params.constructor===Object)t.push(e.params);else for(let r=0;r<e.params.length;r++)t.push(e.params[r]);return Promise.resolve().then((()=>{this.emit.apply(this,t)}))}if(!this.queue[e.id]){if(e.method){return Promise.resolve().then((()=>{this.emit(e.method,e?.params)}))}return}if("error"in e==="result"in e)this.queue[e.id].promise[1](new Error('Server response malformed. Response must include either "result" or "error", but not both.'));if(this.queue[e.id].timeout)clearTimeout(this.queue[e.id].timeout);if(e.error)this.queue[e.id].promise[1](e.error);else this.queue[e.id].promise[0](e.result);delete this.queue[e.id]}));this.socket.addEventListener("error",(e=>this.emit("error",e)));this.socket.addEventListener("close",(({code:r,reason:a})=>{if(this.ready)setTimeout((()=>this.emit("close",r,a)),0);this.ready=false;this.socket=void 0;if(r===1e3)return;this.current_reconnects++;if(this.reconnect&&(this.max_reconnects>this.current_reconnects||this.max_reconnects===0))this.reconnect_timer_id=setTimeout((()=>this._connect(e,t)),this.reconnect_interval)}))}};var l=class extends n.EventEmitter{namespaces;dataPack;wss;constructor(e,t){super();this.namespaces={};if(!t)this.dataPack=new p;else this.dataPack=t;this.wss=new a.WebSocketServer(e);this.wss.on("listening",(()=>this.emit("listening")));this.wss.on("connection",((e,t)=>{const r=d.default.parse(t.url,true);const a=r.pathname;if(r.query.socket_id)e._id=r.query.socket_id;else e._id=s.v1();e["_authenticated"]=false;e.on("error",(t=>this.emit("socket-error",e,t)));e.on("close",(()=>{this.namespaces[a].clients.delete(e._id);for(const t of Object.keys(this.namespaces[a].events)){const r=this.namespaces[a].events[t].sockets.indexOf(e._id);if(r>=0)this.namespaces[a].events[t].sockets.splice(r,1)}this.emit("disconnection",e)}));if(!this.namespaces[a])this._generateNamespace(a);this.namespaces[a].clients.set(e._id,e);this.emit("connection",e,t);return this._handleRPC(e,a)}));this.wss.on("error",(e=>this.emit("error",e)))}register(e,t,r="/"){if(!this.namespaces[r])this._generateNamespace(r);this.namespaces[r].rpc_methods[e]={fn:t,protected:false};return{protected:()=>this._makeProtectedMethod(e,r),public:()=>this._makePublicMethod(e,r)}}setAuth(e,t="/"){this.register("rpc.login",e,t)}_makeProtectedMethod(e,t="/"){this.namespaces[t].rpc_methods[e].protected=true}_makePublicMethod(e,t="/"){this.namespaces[t].rpc_methods[e].protected=false}_makeProtectedEvent(e,t="/"){this.namespaces[t].events[e].protected=true}_makePublicEvent(e,t="/"){this.namespaces[t].events[e].protected=false}closeNamespace(e){const t=this.namespaces[e];if(t){delete t.rpc_methods;delete t.events;for(const e of t.clients.values())e.close();delete this.namespaces[e]}}event(e,t="/"){if(!this.namespaces[t])this._generateNamespace(t);else{const r=this.namespaces[t].events[e];if(r!==void 0)throw new Error(`Already registered event ${t}${e}`)}this.namespaces[t].events[e]={sockets:[],protected:false};this.on(e,((...r)=>{if(r.length===1&&r[0]instanceof Object)r=r[0];for(const a of this.namespaces[t].events[e].sockets){const n=this.namespaces[t].clients.get(a);if(!n)continue;n.send(this.dataPack.encode({notification:e,params:r}))}}));return{protected:()=>this._makeProtectedEvent(e,t),public:()=>this._makePublicEvent(e,t)}}of(e){if(!this.namespaces[e])this._generateNamespace(e);const t=this;return{register(r,a){if(arguments.length!==2)throw new Error("must provide exactly two arguments");if(typeof r!=="string")throw new Error("name must be a string");if(typeof a!=="function")throw new Error("handler must be a function");return t.register(r,a,e)},event(r){if(arguments.length!==1)throw new Error("must provide exactly one argument");if(typeof r!=="string")throw new Error("name must be a string");return t.event(r,e)},get eventList(){return Object.keys(t.namespaces[e].events)},emit(r,...a){const n=t.namespaces[e].events[r];if(n)for(const i of n.sockets){const n=t.namespaces[e].clients.get(i);if(!n)continue;n.send(t.dataPack.encode({notification:r,params:a}))}},get name(){return e},connected(){const r=[...t.namespaces[e].clients.keys()];return r.reduce(((r,a)=>({...r,[a]:t.namespaces[e].clients.get(a)})),{})},clients(){return t.namespaces[e]}}}eventList(e="/"){if(!this.namespaces[e])return[];return Object.keys(this.namespaces[e].events)}createError(e,t,r){return{code:e,message:t,data:r||null}}close(){return new Promise(((e,t)=>{try{this.wss.close();this.emit("close");e()}catch(e){t(e)}}))}_handleRPC(e,t="/"){e.on("message",(async r=>{const a={};if(r instanceof ArrayBuffer){a.binary=true;r=Buffer.from(r).toString()}if(e.readyState!==1)return;let n;try{n=this.dataPack.decode(r)}catch(t){return e.send(this.dataPack.encode({jsonrpc:"2.0",error:createError(-32700,t.toString()),id:null}),a)}if(Array.isArray(n)){if(!n.length)return e.send(this.dataPack.encode({jsonrpc:"2.0",error:createError(-32600,"Invalid array"),id:null}),a);const r=[];for(const a of n){const n=await this._runMethod(a,e._id,t);if(!n)continue;r.push(n)}if(!r.length)return;return e.send(this.dataPack.encode(r),a)}const i=await this._runMethod(n,e._id,t);if(!i)return;return e.send(this.dataPack.encode(i),a)}))}async _runMethod(e,t,r="/"){if(typeof e!=="object"||e===null)return{jsonrpc:"2.0",error:createError(-32600),id:null};if(e.jsonrpc!=="2.0")return{jsonrpc:"2.0",error:createError(-32600,"Invalid JSON RPC version"),id:e.id||null};if(!e.method)return{jsonrpc:"2.0",error:createError(-32602,"Method not specified"),id:e.id||null};if(typeof e.method!=="string")return{jsonrpc:"2.0",error:createError(-32600,"Invalid method name"),id:e.id||null};if(e.params&&typeof e.params==="string")return{jsonrpc:"2.0",error:createError(-32600),id:e.id||null};if(e.method==="rpc.on"){if(!e.params)return{jsonrpc:"2.0",error:createError(-32e3),id:e.id||null};const a={};const n=Object.keys(this.namespaces[r].events);for(const i of e.params){const s=n.indexOf(i);const o=this.namespaces[r];if(s===-1){a[i]="provided event invalid";continue}if(o.events[n[s]].protected===true&&o.clients.get(t)["_authenticated"]===false){return{jsonrpc:"2.0",error:createError(-32606),id:e.id||null}}const d=o.events[n[s]].sockets.indexOf(t);if(d>=0){a[i]="socket has already been subscribed to event";continue}o.events[n[s]].sockets.push(t);a[i]="ok"}return{jsonrpc:"2.0",result:a,id:e.id||null}}else if(e.method==="rpc.off"){if(!e.params)return{jsonrpc:"2.0",error:createError(-32e3),id:e.id||null};const a={};for(const n of e.params){if(!this.namespaces[r].events[n]){a[n]="provided event invalid";continue}const e=this.namespaces[r].events[n].sockets.indexOf(t);if(e===-1){a[n]="not subscribed";continue}this.namespaces[r].events[n].sockets.splice(e,1);a[n]="ok"}return{jsonrpc:"2.0",result:a,id:e.id||null}}else if(e.method==="rpc.login"){if(!e.params)return{jsonrpc:"2.0",error:createError(-32604),id:e.id||null}}if(!this.namespaces[r].rpc_methods[e.method]){return{jsonrpc:"2.0",error:createError(-32601),id:e.id||null}}let a=null;if(this.namespaces[r].rpc_methods[e.method].protected===true&&this.namespaces[r].clients.get(t)["_authenticated"]===false){return{jsonrpc:"2.0",error:createError(-32605),id:e.id||null}}try{a=await this.namespaces[r].rpc_methods[e.method].fn(e.params,t)}catch(t){if(!e.id)return;if(t instanceof Error)return{jsonrpc:"2.0",error:{code:-32e3,message:t.name,data:t.message},id:e.id};return{jsonrpc:"2.0",error:t,id:e.id}}if(!e.id)return;if(e.method==="rpc.login"&&a===true){const e=this.namespaces[r].clients.get(t);e["_authenticated"]=true;this.namespaces[r].clients.set(t,e)}return{jsonrpc:"2.0",result:a,id:e.id}}_generateNamespace(e){this.namespaces[e]={rpc_methods:{__listMethods:{fn:()=>Object.keys(this.namespaces[e].rpc_methods),protected:false}},clients:new Map,events:{}}}};var u=new Map([[-32e3,"Event not provided"],[-32600,"Invalid Request"],[-32601,"Method not found"],[-32602,"Invalid params"],[-32603,"Internal error"],[-32604,"Params not found"],[-32605,"Method forbidden"],[-32606,"Event forbidden"],[-32700,"Parse error"]]);function createError(e,t){const r={code:e,message:u.get(e)||"Internal Server Error"};if(t)r["data"]=t;return r}var m=class extends c{constructor(e="ws://localhost:8080",{autoconnect:t=true,reconnect:r=true,reconnect_interval:a=1e3,max_reconnects:n=5,...i}={},s){super(WebSocket,e,{autoconnect:t,reconnect:r,reconnect_interval:a,max_reconnects:n,...i},s)}};t.Client=m;t.CommonClient=c;t.DefaultDataPack=p;t.Server=l;t.WebSocket=WebSocket;t.createError=createError},3830:function(e,t){(function(e,r){true?r(t):0})(this,(function(e){"use strict";class StructError extends TypeError{constructor(e,t){let r;const{message:a,explanation:n,...i}=e;const{path:s}=e;const o=s.length===0?a:`At path: ${s.join(".")} -- ${a}`;super(n??o);if(n!=null)this.cause=o;Object.assign(this,i);this.name=this.constructor.name;this.failures=()=>r??(r=[e,...t()])}}function isIterable(e){return isObject(e)&&typeof e[Symbol.iterator]==="function"}function isObject(e){return typeof e==="object"&&e!=null}function isNonArrayObject(e){return isObject(e)&&!Array.isArray(e)}function isPlainObject(e){if(Object.prototype.toString.call(e)!=="[object Object]"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}function print(e){if(typeof e==="symbol"){return e.toString()}return typeof e==="string"?JSON.stringify(e):`${e}`}function shiftIterator(e){const{done:t,value:r}=e.next();return t?undefined:r}function toFailure(e,t,r,a){if(e===true){return}else if(e===false){e={}}else if(typeof e==="string"){e={message:e}}const{path:n,branch:i}=t;const{type:s}=r;const{refinement:o,message:d=`Expected a value of type \`${s}\`${o?` with refinement \`${o}\``:""}, but received: \`${print(a)}\``}=e;return{value:a,type:s,refinement:o,key:n[n.length-1],path:n,branch:i,...e,message:d}}function*toFailures(e,t,r,a){if(!isIterable(e)){e=[e]}for(const n of e){const e=toFailure(n,t,r,a);if(e){yield e}}}function*run(e,t,r={}){const{path:a=[],branch:n=[e],coerce:i=false,mask:s=false}=r;const o={path:a,branch:n,mask:s};if(i){e=t.coercer(e,o)}let d="valid";for(const a of t.validator(e,o)){a.explanation=r.message;d="not_valid";yield[a,undefined]}for(let[p,c,l]of t.entries(e,o)){const t=run(c,l,{path:p===undefined?a:[...a,p],branch:p===undefined?n:[...n,c],coerce:i,mask:s,message:r.message});for(const r of t){if(r[0]){d=r[0].refinement!=null?"not_refined":"not_valid";yield[r[0],undefined]}else if(i){c=r[1];if(p===undefined){e=c}else if(e instanceof Map){e.set(p,c)}else if(e instanceof Set){e.add(c)}else if(isObject(e)){if(c!==undefined||p in e)e[p]=c}}}}if(d!=="not_valid"){for(const a of t.refiner(e,o)){a.explanation=r.message;d="not_refined";yield[a,undefined]}}if(d==="valid"){yield[undefined,e]}}class Struct{constructor(e){const{type:t,schema:r,validator:a,refiner:n,coercer:i=e=>e,entries:s=function*(){}}=e;this.type=t;this.schema=r;this.entries=s;this.coercer=i;if(a){this.validator=(e,t)=>{const r=a(e,t);return toFailures(r,t,this,e)}}else{this.validator=()=>[]}if(n){this.refiner=(e,t)=>{const r=n(e,t);return toFailures(r,t,this,e)}}else{this.refiner=()=>[]}}assert(e,t){return assert(e,this,t)}create(e,t){return create(e,this,t)}is(e){return is(e,this)}mask(e,t){return mask(e,this,t)}validate(e,t={}){return validate(e,this,t)}}function assert(e,t,r){const a=validate(e,t,{message:r});if(a[0]){throw a[0]}}function create(e,t,r){const a=validate(e,t,{coerce:true,message:r});if(a[0]){throw a[0]}else{return a[1]}}function mask(e,t,r){const a=validate(e,t,{coerce:true,mask:true,message:r});if(a[0]){throw a[0]}else{return a[1]}}function is(e,t){const r=validate(e,t);return!r[0]}function validate(e,t,r={}){const a=run(e,t,r);const n=shiftIterator(a);if(n[0]){const e=new StructError(n[0],(function*(){for(const e of a){if(e[0]){yield e[0]}}}));return[e,undefined]}else{const e=n[1];return[undefined,e]}}function assign(...e){const t=e[0].type==="type";const r=e.map((e=>e.schema));const a=Object.assign({},...r);return t?type(a):object(a)}function define(e,t){return new Struct({type:e,schema:null,validator:t})}function deprecated(e,t){return new Struct({...e,refiner:(t,r)=>t===undefined||e.refiner(t,r),validator(r,a){if(r===undefined){return true}else{t(r,a);return e.validator(r,a)}}})}function dynamic(e){return new Struct({type:"dynamic",schema:null,*entries(t,r){const a=e(t,r);yield*a.entries(t,r)},validator(t,r){const a=e(t,r);return a.validator(t,r)},coercer(t,r){const a=e(t,r);return a.coercer(t,r)},refiner(t,r){const a=e(t,r);return a.refiner(t,r)}})}function lazy(e){let t;return new Struct({type:"lazy",schema:null,*entries(r,a){t??(t=e());yield*t.entries(r,a)},validator(r,a){t??(t=e());return t.validator(r,a)},coercer(r,a){t??(t=e());return t.coercer(r,a)},refiner(r,a){t??(t=e());return t.refiner(r,a)}})}function omit(e,t){const{schema:r}=e;const a={...r};for(const e of t){delete a[e]}switch(e.type){case"type":return type(a);default:return object(a)}}function partial(e){const t=e instanceof Struct;const r=t?{...e.schema}:{...e};for(const e in r){r[e]=optional(r[e])}if(t&&e.type==="type"){return type(r)}return object(r)}function pick(e,t){const{schema:r}=e;const a={};for(const e of t){a[e]=r[e]}switch(e.type){case"type":return type(a);default:return object(a)}}function struct(e,t){console.warn("superstruct@0.11 - The `struct` helper has been renamed to `define`.");return define(e,t)}function any(){return define("any",(()=>true))}function array(e){return new Struct({type:"array",schema:e,*entries(t){if(e&&Array.isArray(t)){for(const[r,a]of t.entries()){yield[r,a,e]}}},coercer(e){return Array.isArray(e)?e.slice():e},validator(e){return Array.isArray(e)||`Expected an array value, but received: ${print(e)}`}})}function bigint(){return define("bigint",(e=>typeof e==="bigint"))}function boolean(){return define("boolean",(e=>typeof e==="boolean"))}function date(){return define("date",(e=>e instanceof Date&&!isNaN(e.getTime())||`Expected a valid \`Date\` object, but received: ${print(e)}`))}function enums(e){const t={};const r=e.map((e=>print(e))).join();for(const r of e){t[r]=r}return new Struct({type:"enums",schema:t,validator(t){return e.includes(t)||`Expected one of \`${r}\`, but received: ${print(t)}`}})}function func(){return define("func",(e=>typeof e==="function"||`Expected a function, but received: ${print(e)}`))}function instance(e){return define("instance",(t=>t instanceof e||`Expected a \`${e.name}\` instance, but received: ${print(t)}`))}function integer(){return define("integer",(e=>typeof e==="number"&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${print(e)}`))}function intersection(e){return new Struct({type:"intersection",schema:null,*entries(t,r){for(const a of e){yield*a.entries(t,r)}},*validator(t,r){for(const a of e){yield*a.validator(t,r)}},*refiner(t,r){for(const a of e){yield*a.refiner(t,r)}}})}function literal(e){const t=print(e);const r=typeof e;return new Struct({type:"literal",schema:r==="string"||r==="number"||r==="boolean"?e:null,validator(r){return r===e||`Expected the literal \`${t}\`, but received: ${print(r)}`}})}function map(e,t){return new Struct({type:"map",schema:null,*entries(r){if(e&&t&&r instanceof Map){for(const[a,n]of r.entries()){yield[a,a,e];yield[a,n,t]}}},coercer(e){return e instanceof Map?new Map(e):e},validator(e){return e instanceof Map||`Expected a \`Map\` object, but received: ${print(e)}`}})}function never(){return define("never",(()=>false))}function nullable(e){return new Struct({...e,validator:(t,r)=>t===null||e.validator(t,r),refiner:(t,r)=>t===null||e.refiner(t,r)})}function number(){return define("number",(e=>typeof e==="number"&&!isNaN(e)||`Expected a number, but received: ${print(e)}`))}function object(e){const t=e?Object.keys(e):[];const r=never();return new Struct({type:"object",schema:e?e:null,*entries(a){if(e&&isObject(a)){const n=new Set(Object.keys(a));for(const r of t){n.delete(r);yield[r,a[r],e[r]]}for(const e of n){yield[e,a[e],r]}}},validator(e){return isNonArrayObject(e)||`Expected an object, but received: ${print(e)}`},coercer(t,r){if(!isNonArrayObject(t)){return t}const a={...t};if(r.mask&&e){for(const t in a){if(e[t]===undefined){delete a[t]}}}return a}})}function optional(e){return new Struct({...e,validator:(t,r)=>t===undefined||e.validator(t,r),refiner:(t,r)=>t===undefined||e.refiner(t,r)})}function record(e,t){return new Struct({type:"record",schema:null,*entries(r){if(isObject(r)){for(const a in r){const n=r[a];yield[a,a,e];yield[a,n,t]}}},validator(e){return isNonArrayObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isNonArrayObject(e)?{...e}:e}})}function regexp(){return define("regexp",(e=>e instanceof RegExp))}function set(e){return new Struct({type:"set",schema:null,*entries(t){if(e&&t instanceof Set){for(const r of t){yield[r,r,e]}}},coercer(e){return e instanceof Set?new Set(e):e},validator(e){return e instanceof Set||`Expected a \`Set\` object, but received: ${print(e)}`}})}function string(){return define("string",(e=>typeof e==="string"||`Expected a string, but received: ${print(e)}`))}function tuple(e){const t=never();return new Struct({type:"tuple",schema:null,*entries(r){if(Array.isArray(r)){const a=Math.max(e.length,r.length);for(let n=0;n<a;n++){yield[n,r[n],e[n]||t]}}},validator(e){return Array.isArray(e)||`Expected an array, but received: ${print(e)}`},coercer(e){return Array.isArray(e)?e.slice():e}})}function type(e){const t=Object.keys(e);return new Struct({type:"type",schema:e,*entries(r){if(isObject(r)){for(const a of t){yield[a,r[a],e[a]]}}},validator(e){return isNonArrayObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isNonArrayObject(e)?{...e}:e}})}function union(e){const t=e.map((e=>e.type)).join(" | ");return new Struct({type:"union",schema:null,coercer(t,r){for(const a of e){const[e,n]=a.validate(t,{coerce:true,mask:r.mask});if(!e){return n}}return t},validator(r,a){const n=[];for(const t of e){const[...e]=run(r,t,a);const[i]=e;if(!i[0]){return[]}else{for(const[t]of e){if(t){n.push(t)}}}}return[`Expected the value to satisfy a union of \`${t}\`, but received: ${print(r)}`,...n]}})}function unknown(){return define("unknown",(()=>true))}function coerce(e,t,r){return new Struct({...e,coercer:(a,n)=>is(a,t)?e.coercer(r(a,n),n):e.coercer(a,n)})}function defaulted(e,t,r={}){return coerce(e,unknown(),(e=>{const a=typeof t==="function"?t():t;if(e===undefined){return a}if(!r.strict&&isPlainObject(e)&&isPlainObject(a)){const t={...e};let r=false;for(const e in a){if(t[e]===undefined){t[e]=a[e];r=true}}if(r){return t}}return e}))}function trimmed(e){return coerce(e,string(),(e=>e.trim()))}function empty(e){return refine(e,"empty",(t=>{const r=getSize(t);return r===0||`Expected an empty ${e.type} but received one with a size of \`${r}\``}))}function getSize(e){if(e instanceof Map||e instanceof Set){return e.size}else{return e.length}}function max(e,t,r={}){const{exclusive:a}=r;return refine(e,"max",(r=>a?r<t:r<=t||`Expected a ${e.type} less than ${a?"":"or equal to "}${t} but received \`${r}\``))}function min(e,t,r={}){const{exclusive:a}=r;return refine(e,"min",(r=>a?r>t:r>=t||`Expected a ${e.type} greater than ${a?"":"or equal to "}${t} but received \`${r}\``))}function nonempty(e){return refine(e,"nonempty",(t=>{const r=getSize(t);return r>0||`Expected a nonempty ${e.type} but received an empty one`}))}function pattern(e,t){return refine(e,"pattern",(r=>t.test(r)||`Expected a ${e.type} matching \`/${t.source}/\` but received "${r}"`))}function size(e,t,r=t){const a=`Expected a ${e.type}`;const n=t===r?`of \`${t}\``:`between \`${t}\` and \`${r}\``;return refine(e,"size",(e=>{if(typeof e==="number"||e instanceof Date){return t<=e&&e<=r||`${a} ${n} but received \`${e}\``}else if(e instanceof Map||e instanceof Set){const{size:i}=e;return t<=i&&i<=r||`${a} with a size ${n} but received one with a size of \`${i}\``}else{const{length:i}=e;return t<=i&&i<=r||`${a} with a length ${n} but received one with a length of \`${i}\``}}))}function refine(e,t,r){return new Struct({...e,*refiner(a,n){yield*e.refiner(a,n);const i=r(a,n);const s=toFailures(i,n,e,a);for(const e of s){yield{...e,refinement:t}}}})}e.Struct=Struct;e.StructError=StructError;e.any=any;e.array=array;e.assert=assert;e.assign=assign;e.bigint=bigint;e.boolean=boolean;e.coerce=coerce;e.create=create;e.date=date;e.defaulted=defaulted;e.define=define;e.deprecated=deprecated;e.dynamic=dynamic;e.empty=empty;e.enums=enums;e.func=func;e.instance=instance;e.integer=integer;e.intersection=intersection;e.is=is;e.lazy=lazy;e.literal=literal;e.map=map;e.mask=mask;e.max=max;e.min=min;e.never=never;e.nonempty=nonempty;e.nullable=nullable;e.number=number;e.object=object;e.omit=omit;e.optional=optional;e.partial=partial;e.pattern=pattern;e.pick=pick;e.record=record;e.refine=refine;e.regexp=regexp;e.set=set;e.size=size;e.string=string;e.struct=struct;e.trimmed=trimmed;e.tuple=tuple;e.type=type;e.union=union;e.unknown=unknown;e.validate=validate}))},5101:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"17.2.1","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"homepage":"https://github.com/motdotla/dotenv#readme","funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')},2547:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var r=__webpack_module_cache__[e]={id:e,loaded:false,exports:{}};var a=true;try{__webpack_modules__[e].call(r.exports,r,r.exports,__nccwpck_require__);a=false}finally{if(a)delete __webpack_module_cache__[e]}r.loaded=true;return r.exports}(()=>{__nccwpck_require__.nmd=e=>{e.paths=[];if(!e.children)e.children=[];return e}})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{"use strict";var e=__webpack_exports__;Object.defineProperty(e,"__esModule",{value:true});e.startVercel=void 0;const t=__nccwpck_require__(164);const r=__nccwpck_require__(6604);const startVercel=async(e,a)=>{await(0,t.run)(e,a,r.bot)};e.startVercel=startVercel})();module.exports=__webpack_exports__})();